{"version":3,"sources":["Components/AboutPage/banner-x-horizon.png","Components/AboutPage/open-block-explorer-logo-large.png","Components/AboutPage/apollo-logo-dark-mode.png","Components/AboutPage/apollo-logo-light-mode.png","Components/AboutPage/github-octocat.png","Components/AboutPage/graphql-logo.png","Components/AboutPage/material-ui-logo.png","Components/AboutPage/mysql-logo.png","Components/AboutPage/nomics-logo-dark-mode.png","Components/AboutPage/nomics-logo-light-mode.png","Components/AboutPage/prisma-logo-dark-mode.png","Components/AboutPage/prisma-logo-light-mode.png","Components/AboutPage/react-logo-text.png","Components/AboutPage/styled-components-logo-dark-mode.png","Components/AboutPage/styled-components-logo-light-mode.png","Components/DEAppBar/open-block-explorer-logo.png","constants.js","theme/globalStyle.js","Components/ResponsiveComponent/ResponsiveComponent.js","Components/TrackablePage/TrackablePage.js","utils/breakpoint.js","Components/DynamicTable/DynamicTable.js","graphql/queryBlocks.js","graphql/subscriptionBlock.js","Components/BlocksSlideTable/BlocksSlideTable.js","graphql/queryTransactions.js","graphql/subscriptionTransaction.js","utils/getHashString.js","Components/TransactionsFadeTable/TransactionsFadeTable.js","Components/DashCard/DashCard.js","graphql/queryNetworkStats.js","graphql/subscriptionNetworkStats.js","Components/BlockTimeCard/BlockTimeCard.js","Components/TransactionsCard/TransactionsCard.js","graphql/queryPrice.js","graphql/subscriptionPrice.js","Components/PriceCard/PriceCard.js","Components/AreaChart/AreaChart.js","graphql/queryDailyNetworkStatses.js","Components/TransactionsChart/TransactionsChart.js","graphql/queryCandles.js","Components/PriceChart/PriceChart.js","Components/HomePage/HomePage.js","Components/AccountsPage/AccountsPage.js","Components/TablePager/TablePager.js","Components/PagedTable/PagedTable.js","graphql/queryBlocksConnection.js","graphql/queryBlocksCount.js","Components/BlocksPagedTable/BlocksPagedTable.js","Components/BlocksPage/BlocksPage.js","Components/BlockTransactionsTable/BlockTransactionsTable.js","graphql/queryBlock.js","Components/BlockDetailsPage/BlockDetailsPage.js","graphql/queryTransactionsConnection.js","graphql/queryTransactionsCount.js","Components/TransactionsPagedTable/TransactionsPagedTable.js","Components/TransactionsPage/TransactionsPage.js","graphql/queryTransaction.js","Components/TransactionDetailsPage/TransactionDetailsPage.js","utils/getRandomInt.js","utils/getRandomNumber.js","Components/SymbolD3/SymbolD3.js","Components/ImageLinkGrid/ImageLinkGrid.js","Components/AboutPage/AboutPage.js","graphql/querySearchGetType.js","Components/SearchPage/SearchPage.js","graphql/querySearchAutoComplete.js","Components/DEAppBar/DEAppBar.js","Components/Footer/Footer.js","mock/getRandomNumber.js","mock/getRandomInt.js","mock/MockServer.js","mock/prisma.graphql.js","mock/schema.graphql.js","App.js","index.js"],"names":["module","exports","Constants","Object","freeze","URI_SERVER_HTTP","URI_SERVER_WEB_SOCKETS","URI_CDN_FONT_AWESOME","URI_CDN_GOOGLE_FONTS","URI_ABOUT_APOLLO","URI_ABOUT_NOMICS","URI_ABOUT_GRAPHQL","URI_ABOUT_GRAPHQL_YOGA","URI_ABOUT_MATERIAL_UI","URI_ABOUT_MY_SQL","URI_ABOUT_PRISMA","URI_ABOUT_REACT","URI_ABOUT_STYLED_COMPONENTS","URI_GITHUB_CONTRIBUTORS","URI_GITHUB_OPEN_BLOCK_EXPLORER_PROJECT","URI_GITHUB_OPEN_BLOCK_EXPLORER_WIKI","URI_GITHUB_DYLAN","URI_GITHUB_MIT_LICENSE","URI_GITHUB_TODD","URI_TWITTER_OPEN_BLOCK_EXPLORER","COLOR_DFINITY_BLACK","COLOR_DFINITY_BLACK_LIGHTER","COLOR_DFINITY_BLACK_DARKER","COLOR_DFINITY_LIGHT_ORANGE","COLOR_DFINITY_DARK_ORANGE","COLOR_DFINITY_BLUE_400","COLOR_DFINITY_BLUE_500","COLOR_DFINITY_BLUE_600","COLOR_DFINITY_BLUE_700","COLOR_DFINITY_BLUE_800","COLOR_DFINITY_BLUE_900","COLOR_TEXT_LIGHT","COLOR_DARK_TEXT","COLOR_DARK_TEXT_FADED","COLOR_TEXT_DARKER","COLOR_TEXT_DARKEST","COLOR_LIGHT_TEXT_FADED","COLOR_DARK_BODY_DARKER_MAC_OS","COLOR_DARK_BODY_LIGHTER_MAC_OS","COLOR_DARK_DRAWER_DIVIDER_MAC_OS","COLOR_DARK_DRAWER_DIVIDER_YOUTUBE","COLOR_DARK_FOOTER_TEXT_ICON_NETFLIX","COLOR_DARK_TEXT_MAC_OS","COLOR_LIGHT_BODY_TEXT_GOOGLE","COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE","COLOR_LIGHT_CHART_GOOGLE","COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE","COLOR_LIGHT_DRAWER_ICON_GOOGLE","COLOR_LIGHT_DRAWER_TEXT_GOOGLE","COLOR_TWITTER_BLUE","COLOR_TWITTER_GREEN","COLOR_TWITTER_ORANGE","COLOR_TWITTER_PURPLE","COLOR_GRAY_ON_WHITE","FONT_PRIMARY","MATERIAL_FONT_SIZE_H1","MATERIAL_FONT_SIZE_H2","MATERIAL_FONT_SIZE_H3","MATERIAL_FONT_SIZE_H4","MATERIAL_FONT_SIZE_H5","MATERIAL_FONT_SIZE_H6","MATERIAL_FONT_SIZE_SUBTITLE_1","MATERIAL_FONT_SIZE_SUBTITLE_2","MATERIAL_FONT_SIZE_BODY_1","MATERIAL_FONT_SIZE_BODY_2","MATERIAL_FONT_SIZE_BUTTON","MATERIAL_FONT_SIZE_CAPTION","MATERIAL_FONT_SIZE_OVERLINE","MATERIAL_CIRCULAR_INDICATOR_SIZE","MATERIAL_UI_ICON_BUTTON_FONT_SIZE","FONT_SIZE_TABLE_XS","BREAKPOINT_MIN_XS","BREAKPOINT_MAX_XS","BREAKPOINT_MIN_SM","BREAKPOINT_MAX_SM","BREAKPOINT_MIN_MD","BREAKPOINT_MAX_MD","BREAKPOINT_MIN_LG","BREAKPOINT_MAX_LG","BREAKPOINT_MIN_XL","BREAKPOINT_LG_MAX_WIDTH","DRAWER_WIDTH","FOOTER_HEIGHT","FOOTER_MARGIN_XS","FOOTER_MARGIN_SM_AND_UP","ICON_SVG_PATH_TPS","ICON_SVG_PATH_VOLUME","ICON_SVG_PATH_MARKET_CAP","ICON_SVG_PATH_BLOCK","ICON_SVG_PATH_PRICE","ICON_SVG_PATH_BLOCK_TIME","ICON_SVG_PATH_THEME_LIGHT","ICON_SVG_PATH_THEME_DARK","ICON_SVG_PATH_BITCOIN","ABOUT_PAGE_MARGIN_XS","ABOUT_PAGE_MARGIN_SM","ABOUT_PAGE_MARGIN_MD","ABOUT_PAGE_MARGIN_LG","HOME_PAGE_MARGIN_XS","HOME_PAGE_MARGIN_SM_AND_UP","TABLE_ROW_HEIGHT_XS","TABLE_ROW_HEIGHT_SM_AND_UP","ABOUT_PAGE_PROJECT_ICONS_HEIGHT","COINBASE_CHECKOUT_ID","GOOGLE_ANALYTICS_TRACKING_ID","IS_STATIC_MODE","STATIC_START_MONTHS_BEFORE_TODAY","STATIC_NUM_BLOCKS","STATIC_BLOCK_TIME_MS","STATIC_NETWORK_STATS_POLL_INTERVAL_MS","STATIC_PRICE_POLL_INTERVAL_MS","STATIC_TXS_PER_BLOCK_MIN","STATIC_TXS_PER_BLOCK_MAX","GlobalStyle","createGlobalStyle","props","theme","colorBodyBackground","themeLight","isDark","colorAboutBackgroundPrimary","colorAboutBackgroundSecondary","colorAboutHeaderText","colorAboutTwitterBackground","colorAppBarBackground","colorAppBarTextButton","colorAppBarOpenText","colorAppBarExplorerText","colorBodyButtonBackground","colorBodyButtonText","colorBodyButtonHoverBackground","colorBodyButtonHoverText","colorBodyText","colorBodyTextDim","colorBodyTextLink","colorDashCardBackground","colorDashCardIcon","colorDashCardIconOpacity","colorDrawerBackground","colorDrawerDivider","colorDrawerIcon","colorDrawerIconTextSelected","colorDrawerText","colorChartBackground","colorChartTooltipBackground","colorChartAxes","colorChartGrid","colorChartText","colorChartLine","colorChartActiveDotStroke","colorIconButtonHover","colorTableBackgroundPrimary","colorTableRowBorder","colorTableTextDim","colorFooterBackground","colorFooterTextIcon","colorSearchText","colorSearchIcon","opacityActionDisabled","opacityActionHover","themeDark","ResponsiveComponent","handleWindowResize","bind","throttledHandleWindowResize","throttle","window","addEventListener","this","removeEventListener","forceUpdate","Component","TrackablePage","scrollTo","pathName","location","pathname","search","trackPage","prevProps","currentPathName","nextPathName","ReactGA","set","page","pageview","Breakpoints","XS","SM","MD","LG","XL","getBreakpoint","isDesktopDrawerOpen","drawerWidth","matchMedia","matches","isBreakpointDesktop","breakpoint","isBreakpointGreaterOrEqualTo","StyledPaper","styled","Paper","TypographyTitle","Typography","StyledTable","Table","TableRowHeader","TableRow","TableRowBody","StyledTableCell","TableCell","TableCellHeader","StyledLink","Link","TableRowFooter","TableCellFooter","DynamicTable","rows","columnWidths","footerRow","headerRow","title","elevation","map","width","index","key","TableHead","cell","align","isNumeric","padding","size","link","to","value","TableBody","getBodyRowElements","TableFooter","getBodyRows","maxRows","slide","rowHeight","document","visibilityState","slice","items","keys","bodyRow","mapKey","from","height","opacity","enter","leave","state","style","getBodyRowElement","in","timeout","rowIndex","cells","borderBottomStyle","Grid","container","direction","justify","alignItems","queryBlocks","gql","subscriptionBlock","BlocksSlideTableWithData","firstBlockAdded","staticModeBlockHeight","handleQueryCompleted","query","variables","first","onCompleted","pollInterval","loading","error","data","subscribeToMore","subscribeToNewObjects","blocks","handleAddNewBlock","setTimeout","length","updateQuery","prev","subscriptionData","block","node","BlocksSlideTable","date","Date","timestamp","toLocaleString","numTransactions","queryTransactions","subscriptionTransaction","getHashString","hash","maxLength","undefined","substring","substr","TransactionsFadeTableWithData","refetch","transactions","transaction","TransactionsFadeTable","amount","toFixed","toString","GridNoWrap","SvgIconCard","SvgIcon","cardindex","TypographyValue","DashCard","cardIndex","className","svgIconPath","wrap","item","d","noWrap","queryNetworkStats","subscriptionNetworkStats","BlockTimeCard","secondsPerBlock","networkStats","TransactionsCard","transactionsPerSecond","queryPrice","subscriptionPrice","PriceCard","price","StyledAreaChart","RechartsAreaChart","AreaChart","chartHeight","getData","getTitle","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","stroke","vertical","dataKey","getDataKeyX","tick","fill","tickFormatter","getGetTickX","tickMargin","tickSize","domain","dataMin","getDomainMinY","dataMax","getDomainMaxY","getGetTickY","tickLine","labelFormatter","getGetTooltipX","formatter","getGetTooltipY","contentStyle","background","border","borderRadius","fontSize","boxShadow","shadows","itemStyle","color","labelStyle","cursor","animationDuration","type","getDataKeyY","strokeWidth","fillOpacity","activeDot","r","Error","queryDailyNetworkStatses","TransactionsChartWithData","last","dailyNetworkStatses","TransactionsChart","Math","floor","ceil","toLocaleDateString","timeZone","k","Number","isInteger","propTypes","PropTypes","number","isRequired","array","bool","object","withTheme","queryCandles","PriceChartWithData","startDate","setDate","getDate","endDate","start","toISOString","end","candles","PriceChart","GridSection","duration","standard","easing","easeInOut","GridSectionTables","GridCard","GridChart","GridTable","CardBlocks","CardBlockTime","CardTransactions","CardPrice","HomePage","blockHeight","getSectionCards","getSectionCharts","getSectionTables","delay","setState","TypographyHeading","TypographyBody","AccountsPage","marginTop","marginLeft","StyledToolbar","Toolbar","TypographyCaption","TypographyRows","TypographyCount","StyledSelect","other","Select","classes","icon","root","selectMenu","StyledMenuItem","MenuItem","StyledIconButton","IconButton","fade","StyledIconButtonNotLast","TablePagerActions","count","onChangePage","rowsPerPage","lastPage","onClick","event","disabled","aria-label","max","TablePager","newLastPage","colSpan","getToolbar","getRowsSelectCount","getActions","onChangeRowsPerPage","rowsPerPageOptions","rowsText","input","InputBase","onChange","MenuProps","PaperProps","rowsPerPageOption","getCountText","total","min","t","m","DivCircularProgress","div","zIndex","modal","StyledCircularProgress","CircularProgress","StyledTableRow","PagedTable","pageIndex","priorPageIndex","priorStartCursor","priorEndCursor","firstId","startCursor","endCursor","handleChangePage","handleChangeRowsPerPage","getTableElements","getDataConnection","queryCount","getCount","lastPageIndex","after","before","fetchPolicy","connection","edges","pageInfo","skip","where","id_lte","loadingCount","errorCount","dataCount","aggregate","mountOnEnter","unmountOnExit","getHeaderRowElement","getFooterRowElement","show","prevState","target","queryBlocksConnection","queryBlocksCount","BlocksPagedTable","blocksConnection","edge","GridPagedTable","BlocksPage","BlockTransactionsTable","queryBlock","BlockDetailsPage","parseInt","match","params","queryTransactionsConnection","queryTransactionsCount","TransactionsPagedTable","transactionsConnection","TransactionsPage","queryTransaction","TransactionDetailsPage","hashMaxLength","getRandomInt","random","getRandomNumber","SymbolD3","dragStarted","dragged","dragEnded","rotate","stage","renderer","linksGraphics","simulationWidth","logoMode","simulationHeight","scaleSimulationToPixi","centerX","centerY","scaleToWindow","numSymbolNodes","numVertices","numNodes","forceManyBodyStrengthSymbolNodes","forceManyBodyStrengthNonSymbolNodes","linkDistance","nodeStrokeWidth","nodeRadius","nodeRadiusSelected","nodeSelectedFillColorArray","nodeSelectedStrokeColorArray","nodeOpacity","nodeOpacitySelected","linkStrokeWidth","linkStrokeWidthIncreaseAtMagnitude","symbolHeightMultiplier","rotateOffset","rotateTimeMs","rotateAmount","circleMode","selectedNodeIndex","newBlockNodeStartTime","newBlockLinksStartTime","newBlockNodeTimerMs","newBlockLinksTimerMs","draw","destroy","pixiResizeRenderer","nodesData","forEach","pixiDrawNode","ref","el","element","addNodes","addLinks","createSimulation","pixiSetup","i","pos","getNodePosition","push","PI","scale","cos","sin","linksData","indexSymbol","indexSymbolNext","addLink","vertexShapeTop","indexShapeTop","indexShapeTopNext","indexShapeAlmostTop","j","indexShapeNext","indexSpiralNext","indexSource","indexTarget","strength","linkCount","simulation","d3","force","link_force","_strength","source","distance","on","alphaDecay","PIXI","skipHello","antialias","transparent","resolution","autoResize","appendChild","view","graphics","addChild","call","subject","find","x","y","resize","position","nodeStrokeColor","nodeFillColor","selectedNodeMagnitude","rgbNumberFromArray","gradientColor","getNodeStrokeColorArray","clear","lineStyle","beginFill","filters","drawCircle","linkMagnitude","linkOpacity","alpha","getColorArray","moveTo","lineTo","numIndices","getColorArrayCircle","getColorArrayInfinity","lightBlue600","darkBlue700","transitionIndices","lastLightIndex","lastDarkIndex","percentage","purple","pink","darkOrange","lightOrange","blue","transitionIndicesSmall","transitionIndicesGradual","lastPurpleIndex","lastPinkIndex","lastDarkOrangeIndex","lastLightOrangeIndex","lastBlueIndex","color1","color2","percent","p1","p2","round","active","alphaTarget","restart","fx","fy","_fx","_fy","pixiMoveNode","elapsedMs","pixiDrawLink","endFill","render","elapsed","ImageLinkGrid","widths","maxHeight","calculateMaxImageDimensions","arePropsChanged","imageLinks","imageLink","src","justifyRow","marginBetweenRows","perRow","containerHeight","imageLinkGrid","maxWidthColumn","Array","row","isShortRow","columnIndex","href","rel","alt","img","Image","onload","currentTarget","naturalWidth","naturalHeight","PaperParallax","GridParallax","TypographyParallax","GridSectionPrimary","GridSectionSecondary","GridItem","GridImageLeft","GridImageRight","GridSymbolLeft","GridText","GridTextLeft","GridTextRight","StyledA","a","ImgSection","ButtonSubscribe","Button","MailIconButton","MailIcon","SpanHeart","span","ButtonDonate","CoinbaseCommerceButton","SvgIconButton","PaperTwitter","ImageLinkGridThanks","AboutPage","getHeader","getSectionMission","getSectionOpenSource","getSectionCommunity","getSectionContributors","getSectionThanks","bgImage","bannerXHorizon","bgImageAlt","bgImageStyle","isThemeDark","getSymbolD3Width","openBlockExplorerLogo","sourceType","screenName","options","noFooter","action","method","name","noValidate","aria-hidden","tabIndex","defaultValue","checkoutId","githubOctocat","imagesPerRow","reactHeight","styledComponentsHeight","materialUiHeight","nomicsHeight","apolloHeight","graphqlHeight","prismaHeight","mySqlHeight","reactLogo","styledComponentsLogoDark","styledComponentsLogoLight","materialUiLogo","nomicsLogoDark","nomicsLogoLight","apolloLogoDark","apolloLogoLight","graphqlLogo","prismaLogoDark","prismaLogoLight","mySqlLogo","contentWidth","innerWidth","querySearchGetType","SearchPage","searchGetType","querySearchAutoComplete","StyledAppBar","AppBar","drawer","SearchAppBar","SearchToolbar","ImgProductIcon","TypographyAppName","TypographyBlock","TypographyBorder","TypographyExplorer","InputSearch","Input","ListSearch","List","ListItemSearch","ListItem","highlighted","ListItemIconSearch","ListItemIcon","SearchIconListSearch","SearchIcon","StyledMenuIcon","MenuIcon","StyledSearchIcon","StyledCloseIcon","CloseIcon","StyledSwipeableDrawer","SwipeableDrawer","paper","StyledDrawer","Drawer","StyledDivider","Divider","DrawerListItemIcon","DrawerListItemText","ListItemText","primary","DrawerListItem","selected","DEAppBar","isSearchOn","searchQuery","toolbarDivRef","React","createRef","maxSearchAutoCompleteItems","handleSearchClick","handleCloseClick","handleDownshiftStateChange","handleDownshiftChange","handleSearchSubmit","isActiveRoute","getToolbarSearchContent","getToolbarDefaultContent","getDrawer","handleAppBarResize","current","offsetHeight","isMobileDrawerOpen","handleMobileDrawerMenuClick","variant","flexGrow","onStateChange","selectedItem","getInputProps","getItemProps","getMenuProps","isOpen","inputValue","highlightedIndex","onSubmit","autoFocus","disableUnderline","fullWidth","placeholder","searchAutoComplete","disableGutters","Zoom","getMenuButton","getAppTitle","getSearchButton","handleDesktopDrawerMenuClick","textDecoration","getProductIconHeight","BREAKPOINT_MAX_XL","isBreakpointLessOrEqualTo","open","getDrawerContent","onOpen","onClose","button","component","changes","performSearch","preventDefault","routerRef","history","routeName","func","withRouter","FooterToolbar","OneThirdGrid","LeftThirdGrid","RightThirdGrid","FooterTypography","FooterA","AwesomeIconButtonGrid","AwesomeIconButton","AwesomeIcon","Icon","ThemeCheckbox","Checkbox","ThemeSvgIcon","Footer","loadCSS","querySelector","getCopyrightText","getSimulatedText","getNomicsTextDescription","getNomicsTextLink","checked","checkedIcon","handleThemeChange","MockServer","dateToday","dateStart","getFullYear","getMonth","getTime","blocksMapByHeight","Map","transactionsMapByHash","transactionsPerDays","prices","now","addBlock","orderBy","getObjectsSeekForward","toUTCString","getObjectIndex","getObjectsSeekBackward","get","hash0x","getTransactionHash","startsWith","filter","blocksPerDay","areDatesOnSameDay","numBlocks","getNumTransactions","reduce","seconds","getPrice","dateEnd","high","low","close","volume","getBlockId","createTransaction","second","sha3_256","MAX_SAFE_INTEGER","getTransactionId","blockIndex","UTC","getDayOfYear","split","pop","reverse","transactionIndex","prismaTypeDefs","schemaTypeDefs","mockServer","resolvers","Query","_parent","resolveQueryBlocks","resolveQueryBlocksConnection","resolveQueryBlock","resolveQueryTransactions","resolveQueryTransactionsConnection","resolveQueryTransaction","resolveQuerySearchGetType","resolveQuerySearchAutoComplete","resolveQueryDailyNetworkStatses","resolveQueryNetworkStats","resolveQueryPrice","resolveQueryCandles","typeDefs","schema","makeExecutableSchema","SchemaLink","httpLink","HttpLink","uri","wsLink","WebSocketLink","reconnect","getMainDefinition","kind","operation","apolloClient","ApolloClient","cache","InMemoryCache","dataIdFromObject","addTypename","initialize","anonymizeIp","ContentDiv","enteringScreen","leavingScreen","ContentGrid","appbarheight","App","appBarHeight","isDesktopDrawerEnabled","setRouterRef","client","getTheme","onTransitionEnd","dispatchEvent","Event","exact","path","contentRect","ReactDOM","getElementById"],"mappings":";2GAAAA,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,4D,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,4C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,oD,oBCA3CD,EAAOC,QAAU,IAA0B,6C,oBCA3CD,EAAOC,QAAU,IAA0B,8D,oBCA3CD,EAAOC,QAAU,IAA0B,+D,oBCA3CD,EAAOC,QAAU,IAA0B,sD,0SCqI5BC,EA/HGC,OAAOC,OAAO,CAK9BC,gBAAiB,kDACjBC,uBAAwB,gDACxBC,qBACE,qFAEFC,qBACE,6EACFC,iBAAkB,iCAClBC,iBAAkB,kDAClBC,kBAAmB,uBACnBC,uBAAwB,yCACxBC,sBAAuB,2BACvBC,iBAAkB,yBAClBC,iBAAkB,yBAClBC,gBAAiB,uBACjBC,4BAA6B,qCAC7BC,wBAAyB,mDACzBC,uCAAwC,yDACxCC,oCAAqC,8DACrCC,iBAAkB,8BAClBC,uBAAwB,6EACxBC,gBAAiB,kCACjBC,gCAAiC,+BAEjCC,oBAAqB,kBACrBC,4BAA6B,kBAC7BC,2BAA4B,kBAC5BC,2BAA4B,oBAC5BC,0BAA2B,mBAC3BC,uBAAwB,UACxBC,uBAAwB,UACxBC,uBAAwB,UACxBC,uBAAwB,UACxBC,uBAAwB,UACxBC,uBAAwB,UACxBC,iBAAkB,UAClBC,gBAAiB,UACjBC,sBAAuB,qBACvBC,kBAAmB,qBACnBC,mBAAoB,qBACpBC,uBAAwB,kBACxBC,8BAA+B,UAC/BC,+BAAgC,UAChCC,iCAAkC,UAClCC,kCAAmC,UACnCC,oCAAqC,UACrCC,uBAAwB,UACxBC,6BAA8B,UAC9BC,iCAAkC,UAClCC,yBAA0B,UAC1BC,kCAAmC,UACnCC,+BAAgC,UAChCC,+BAAgC,UAChCC,mBAAoB,qBACpBC,oBAAqB,oBACrBC,qBAAsB,oBACtBC,qBAAsB,qBACtBC,oBAAqB,qBACrBC,aAAc,qBACdC,sBAAuB,OACvBC,sBAAuB,UACvBC,sBAAuB,OACvBC,sBAAuB,WACvBC,sBAAuB,SACvBC,sBAAuB,UACvBC,8BAA+B,OAC/BC,8BAA+B,WAC/BC,0BAA2B,OAC3BC,0BAA2B,WAC3BC,0BAA2B,WAC3BC,2BAA4B,UAC5BC,4BAA6B,WAC7BC,iCAAkC,GAClCC,kCAAmC,GACnCC,mBAAoB,YACpBC,kBAAmB,EACnBC,kBAAmB,IACnBC,kBAAmB,IACnBC,kBAAmB,IACnBC,kBAAmB,IACnBC,kBAAmB,KACnBC,kBAAmB,KACnBC,kBAAmB,KACnBC,kBAAmB,KACnBC,wBAAyB,KACzBC,aAAc,IACdC,cAAe,GACfC,iBAAkB,EAClBC,wBAAyB,GACzBC,kBAAmB,4EACnBC,qBAAsB,sFACtBC,yBAA0B,gIAC1BC,oBAAqB,+KACrBC,oBAAqB,sXACrBC,yBAA0B,yVAC1BC,0BAA2B,2qBAC3BC,yBAA0B,oYAC1BC,sBAAuB,iwBACvBC,qBAAsB,EACtBC,qBAAsB,GACtBC,qBAAsB,GACtBC,qBAAsB,IACtBC,oBAAqB,EACrBC,2BAA4B,GAG5BC,oBAAqB,GACrBC,2BAA4B,GAC5BC,gCAAiC,GACjCC,qBAAsB,uCACtBC,6BAA8B,iBAE9BC,gBAAgB,EAChBC,iCAAkC,EAClCC,kBAAmB,KACnBC,qBAAsB,IACtBC,sCAAuC,IACvCC,8BAA+B,IAC/BC,yBAA0B,EAC1BC,yBAA0B,K,+ICtHrB,IAAMC,EAAcC,YAAH,KAIN,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,uBAO1BC,EAAa,CAExBC,QAAQ,EACRC,4BAA6B,UAC7BC,8BAA+B,UAC/BC,qBAAsB,UACtBC,4BAA6B,UAC7BC,sBAAuB,UACvBC,sBAAuBhI,EAAUuC,uBACjC0F,oBAAqBjI,EAAU8C,6BAC/BoF,wBAAyBlI,EAAU+B,uBACnCyF,oBAAqB,UACrBW,0BAA2BnI,EAAU+B,uBACrCqG,oBAAqBpI,EAAUkC,iBAC/BmG,+BAAgCrI,EAAU6B,uBAC1CyG,yBAA0BtI,EAAUkC,iBACpCqG,cAAevI,EAAU8C,6BACzB0F,iBAAkBxI,EAAU+C,iCAC5B0F,kBAAmBzI,EAAU+B,uBAC7B2G,wBAAyB,UACzBC,kBAAmB,CAAC3I,EAAU+B,uBAAwB,UAAW,UAAW,WAC5E6G,yBAA0B,EAC1BC,sBAAuB,UACvBC,mBAAoB9I,EAAUiD,kCAC9B8F,gBAAiB/I,EAAUkD,+BAC3B8F,4BAA6BhJ,EAAU+B,uBACvCkH,gBAAiBjJ,EAAUmD,+BAC3B+F,qBAAsB,UACtBC,4BAA6B,4BAC7BC,eAAgBpJ,EAAU+C,iCAC1BsG,eAAgBrJ,EAAUiD,kCAC1BqG,eAAgBtJ,EAAU+C,iCAC1BwG,eAAgBvJ,EAAU+B,uBAC1ByH,0BAA2B,UAC3BC,qBAAsB,UACtBC,4BAA6B,UAC7BC,oBAAqB3J,EAAUiD,kCAC/B2G,kBAAmB,UACnBC,sBAAuB,UACvBC,oBAAqB,UACrBC,gBAAiB/J,EAAU8C,6BAC3BkH,gBAAiB,UACjBC,sBAAuB,IACvBC,mBAAoB,KAMTC,EAAY,CACvBzC,QAAQ,EACRC,4BAA6B3H,EAAUwC,8BACvCoF,8BAA+B5H,EAAUyC,+BACzCoF,qBAAsB,UACtBC,4BAA6B9H,EAAUyC,+BACvCsF,sBAAuB/H,EAAUyC,+BACjCuF,sBAAuBhI,EAAUoC,sBACjC6F,oBAAqBjI,EAAUmC,gBAC/B+F,wBAAyBlI,EAAU0B,2BACnC8F,oBAAqBxH,EAAUwC,8BAC/B2F,0BAA2BnI,EAAU+B,uBACrCqG,oBAAqBpI,EAAU6C,uBAC/BwF,+BAAgCrI,EAAU6B,uBAC1CyG,yBAA0BtI,EAAUkC,iBACpCqG,cAAevI,EAAU6C,uBACzB2F,iBAAkBxI,EAAU6C,uBAC5B4F,kBAAmBzI,EAAU8B,uBAC7B4G,wBAAyB1I,EAAUyC,+BACnCkG,kBAAmB,CAAC,UAAW,UAAW,UAAW,WACrDC,yBAA0B,GAC1BC,sBAAuB7I,EAAUyC,+BACjCqG,mBAAoB9I,EAAU2C,kCAC9BoG,gBAAiB/I,EAAUoC,sBAC3B4G,4BAA6B,UAC7BC,gBAAiBjJ,EAAUoC,sBAC3B8G,qBAAsBlJ,EAAUyC,+BAChC0G,4BAA6B,yBAC7BC,eAAgBpJ,EAAU4C,oCAC1ByG,eAAgBrJ,EAAU0C,iCAC1B4G,eAAgBtJ,EAAUoC,sBAC1BmH,eAAgBvJ,EAAU8B,uBAC1B0H,0BAA2BxJ,EAAUyC,+BACrCgH,qBAAsBzJ,EAAUmC,gBAChCuH,4BAA6B1J,EAAUyC,+BACvCkH,oBAAqB3J,EAAU2C,kCAC/BiH,kBAAmB,UACnBC,sBAAuB7J,EAAUyC,+BACjCqH,oBAAqB9J,EAAU4C,oCAC/BmH,gBAAiB/J,EAAU8C,6BAC3BkH,gBAAiB,UACjBC,sBAAuB,GACvBC,mBAAoB,I,2DC9DPE,E,kDAnCb,aAAe,IAAD,8BACZ,gBAGKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAG1B,EAAKC,4BAA8BC,mBAAS,KAAK,EAAM,EAAKH,oBAPhD,E,gEAeZI,OAAOC,iBAAiB,SAAUC,KAAKJ,+B,6CAQvCE,OAAOG,oBAAoB,SAAUD,KAAKJ,+B,2CAQ1CI,KAAKE,kB,GApCyBC,aC2CnBC,E,kLArCX,0EAGAN,OAAOO,SAAS,EAAG,GAEnB,IAAMC,EAAWN,KAAKrD,MAAM4D,SAASC,SAAWR,KAAKrD,MAAM4D,SAASE,OACpET,KAAKU,UAAUJ,K,yCASEK,GACjB,IAAMC,EAAkBD,EAAUJ,SAASC,SAAWG,EAAUJ,SAASE,OACnEI,EAAeb,KAAKrD,MAAM4D,SAASC,SAAWR,KAAKrD,MAAM4D,SAASE,OAEpEG,IAAoBC,GACtBb,KAAKU,UAAUG,K,gCAQTP,GAGNQ,IAAQC,IAAI,CAAEC,KAAMV,IACpBQ,IAAQG,SAASX,O,GAtCKb,G,6GCJfyB,GAAc5L,OAAOC,OAAO,CACvC4L,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IAUC,SAASC,GAAcC,GAC5B,IAAMC,EAAeD,EAAsBpM,EAAUoF,aAAe,EACpE,OAAIqF,OAAO6B,WAAW,gBAAkBtM,EAAU2E,kBAAoB0H,GAAe,OAAOE,QACnFV,GAAYC,GACZrB,OAAO6B,WAAW,gBAAkBtM,EAAU6E,kBAAoBwH,GAAe,OAAOE,QACxFV,GAAYE,GACZtB,OAAO6B,WAAW,gBAAkBtM,EAAU+E,kBAAqBsH,GAAe,OAAOE,QACzFV,GAAYG,GACZvB,OAAO6B,WAAW,gBAAkBtM,EAAUiF,kBAAoBoH,GAAe,OAAOE,QACxFV,GAAYI,GAEZJ,GAAYK,GAiChB,SAASM,KACd,OAxBK,SAAsCC,GAC3C,OAAQA,GACN,KAAKZ,GAAYC,GACf,OAAOrB,OAAO6B,WAAW,eAAiBtM,EAAU0E,kBAAoB,OAAO6H,QACjF,KAAKV,GAAYE,GACf,OAAOtB,OAAO6B,WAAW,eAAiBtM,EAAU4E,kBAAoB,OAAO2H,QACjF,KAAKV,GAAYG,GACf,OAAOvB,OAAO6B,WAAW,eAAiBtM,EAAU8E,kBAAoB,OAAOyH,QACjF,KAAKV,GAAYI,GACf,OAAOxB,OAAO6B,WAAW,eAAiBtM,EAAUgF,kBAAoB,OAAOuH,QACjF,KAAKV,GAAYK,GACjB,QACE,OAAOzB,OAAO6B,WAAW,eAAiBtM,EAAUkF,kBAAoB,OAAOqH,SAY5EG,CAA6Bb,GAAYG,I,ymEC1ClD,IAAMW,GAAcC,YAAOC,IAAPD,CAAH,MAEC,SAAAtF,GAAK,OAAIA,EAAMC,MAAMmC,+BAIjCoD,GAAkBF,YAAOG,IAAPH,CAAH,MAER,SAAAtF,GAAK,OAAIA,EAAMC,MAAMgB,gBAKfvI,EAAUyD,aACZzD,EAAU+D,uBAKrBiJ,GAAcJ,YAAOK,IAAPL,CAAH,KAEE5M,EAAUyD,cAMvByJ,GAAiBN,YAAOO,IAAPP,CAAH,KAEN5M,EAAUwG,2BAA6B,MAC/C,qBAAGiG,aACYZ,GAAYC,IAA3B,4BACY9L,EAAUuG,oBAAsB,KAD5C,gBASA6G,GAAeR,YAAOO,IAAPP,CAAH,MAMZS,GAAkBT,YAAOU,IAAPV,CAAH,MAED,SAAAtF,GAAK,OAAIA,EAAMC,MAAMoC,uBAC5B,SAAArC,GAAK,OAAIA,EAAMC,MAAMgB,gBACfvI,EAAUyD,aACZzD,EAAUmE,2BAOrB,qBAAGsI,aACYZ,GAAYC,IAA3B,+BACe9L,EAAUyE,mBADzB,gBAOA8I,GAAkBX,YAAOS,GAAPT,CAAH,MAIR,SAAAtF,GAAK,OAAIA,EAAMC,MAAMiB,oBAK5BgF,GAAaZ,YAAOa,IAAPb,CAAH,MAEH,SAAAtF,GAAK,OAAIA,EAAMC,MAAMkB,qBAQ5BiF,GAAiBd,YAAOO,IAAPP,CAAH,MAMde,GAAkBf,YAAOS,GAAPT,CAAH,MAKR,SAAAtF,GAAK,OAAIA,EAAMC,MAAMqC,qBAyOnBgE,G,kDAzKb,aAAe,IAAD,8BACZ,gBAEKC,KAAO,GAHA,E,qDAWL,MAE2DlD,KAAKrD,MAA/DmF,EAFD,EAECA,WAAYqB,EAFb,EAEaA,aAAcC,EAF3B,EAE2BA,UAAWC,EAFtC,EAEsCA,UAAWC,EAFjD,EAEiDA,MACxD,OACE,kBAACtB,GAAD,CAAauB,UAAW,GACtB,kBAACpB,GAAD,KAAkBmB,GAClB,kBAACjB,GAAD,KACE,kCACGc,EAAaK,KAAI,SAACC,EAAOC,GAGxB,OACE,yBAAKC,IAAKD,EAAOD,MAAOA,QAI9B,kBAACG,EAAA,EAAD,KACE,kBAACrB,GAAD,CAAgBT,WAAYA,GACzBuB,EAAUG,KAAI,SAACK,EAAMH,GACpB,OAGE,kBAACd,GAAD,CACEd,WAAYA,EACZ6B,IAAKD,EACLI,MAAOD,EAAKE,UAAY,QAAU,UAClCC,QAAQ,WACRC,KAAK,SAEO,MAAbJ,EAAKK,KACJ,kBAACrB,GAAD,CAAYsB,GAAIN,EAAKK,MAAOL,EAAKO,OACjCP,EAAKO,YAOf,kBAACC,EAAA,EAAD,KACGrE,KAAKsE,sBAER,kBAACC,EAAA,EAAD,KACE,kBAACxB,GAAD,KACGK,EAAUI,KAAI,SAACK,EAAMH,GACpB,OACE,kBAACV,GAAD,CACElB,WAAYA,EACZ6B,IAAKD,EACLI,MAAOD,EAAKE,UAAY,QAAU,UAClCC,QAAQ,WACRC,KAAK,SAEO,MAAbJ,EAAKK,KACJ,kBAACrB,GAAD,CAAYsB,GAAIN,EAAKK,MAAOL,EAAKO,OACjCP,EAAKO,gB,2CAiBD,IAAD,SACiCpE,KAAKrD,MAAjDmF,EADW,EACXA,WAAY0C,EADD,EACCA,YAAaC,EADd,EACcA,QAASC,EADvB,EACuBA,MACpCC,EAAY7C,IAAeZ,GAAYC,GAC3C9L,EAAUuG,oBAAsBvG,EAAUwG,2BAS5C,MAHiC,YAA7B+I,SAASC,kBACX7E,KAAKkD,KAAOsB,IAAcM,MAAM,EAAGL,IAEjCC,EAKA,kBAAC,cAAD,CACEK,MAAO/E,KAAKkD,KACZ8B,KAAM,SAAAC,GAAO,OAAIA,EAAQC,QACzBC,KAAM,CAAEC,OAAQ,EAAGC,QAAS,GAC5BC,MAAO,CAAEF,OAAQT,EAAWU,QAAS,GACrCE,MAAO,CAAEH,OAAQ,EAAGC,QAAS,KAG5B,SAACJ,EAASO,EAAO9B,GAAjB,OAA2B,SAAA+B,GAAK,OAAI,EAAKC,kBAAkBT,EAASO,EAAO9B,EAAO+B,OAKhFzF,KAAKkD,KAAKM,KAAI,SAACyB,EAASvB,GAE7B,OACE,kBAAC,IAAD,CACEC,IAAKsB,EAAQC,OACbS,IAAI,EACJC,QAAS,KAER,EAAKF,kBAAkBT,EAAS,SAAUvB,EAAO,CAAE0B,OAAQT,U,wCAgBpDM,EAASO,EAAOK,EAAUJ,GAAQ,IAC1C3D,EAAe9B,KAAKrD,MAApBmF,WACR,OACE,kBAACW,GAAD,KACGwC,EAAQa,MAAMtC,KAAI,SAACK,EAAMH,GACxB,OACE,kBAAChB,GAAD,CACEZ,WAAYA,EACZ6B,IAAKD,EACLM,QAAQ,WACRC,KAAK,QAELwB,MAAiB,UAAVD,EAAoB,CAACO,kBAAmB,UAAY,MAE3D,kBAACC,EAAA,EAAD,CAAMC,WAAS,EACbC,UAAU,MACVC,QAAStC,EAAKE,UAAY,WAAa,aACvCqC,WAAW,SACXX,MAAOA,GAEO,MAAb5B,EAAKK,KACJ,kBAACrB,GAAD,CAAYsB,GAAIN,EAAKK,MAAOL,EAAKO,OACjCP,EAAKO,gB,GAtNIjE,a,2PCtH3B,IAWekG,GAXKC,KAAH,M,mNCAjB,IAaeC,GAbWD,KAAH,MCKjBE,G,kDAoBJ,aAAe,IAAD,8BACZ,gBAEKC,iBAAkB,EACvB,EAAKC,sBAAwB,EAG7B,EAAKC,qBAAuB,EAAKA,qBAAqBhH,KAA1B,gBAPhB,E,qDAeJ,IAAD,SACuBK,KAAKrD,MAA5BmF,EADA,EACAA,WAAY2C,EADZ,EACYA,QACnB,OACE,kBAAC,IAAD,CACEmC,MAAOP,GACPQ,UAAW,CAAEC,MAAOrC,GACpBsC,YAAa/G,KAAK2G,qBAClBK,aAAc3R,EAAU4G,eAAiB5G,EAAU+G,qBAAuB,OAEzE,YAAgD,IAA7C6K,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBAClBC,EACJhS,EAAU4G,eAAiB,KAAO,kBAAM,EAAKoL,sBAAsBD,IACrE,OAAIH,EAEA,kBAAC,GAAD,CACEK,OAAQ,GACRD,sBAAuBA,EACvBvF,WAAYA,EACZ2C,QAASA,EACTwC,SAAO,IAGJC,EAEL,kBAAC,GAAD,CACEI,OAAQ,GACRD,sBAAuBA,EACvBvF,WAAYA,EACZ2C,QAASA,EACTyC,OAAK,KAcL7R,EAAU4G,gBAAkB,EAAKyK,wBAA0BS,EAAKG,OAAO,GAAGlC,SACxE,EAAKsB,uBAAyB,EAAK/J,MAAM4K,mBAC3CC,YAAW,WAAQ,EAAK7K,MAAM4K,kBAAkBJ,EAAKG,OAAO,OAC9D,EAAKZ,sBAAwBS,EAAKG,OAAO,GAAGlC,QAI5C,kBAAC,GAAD,CACEkC,OAAQH,EAAKG,OACbD,sBAAuBA,EACvBvF,WAAYA,EACZ2C,QAASA,U,2CAcF0C,IACdnH,KAAKyG,iBAAmBU,EAAKG,OAAOG,QACvCzH,KAAKyG,iBAAkB,EAGnBzG,KAAKrD,MAAM4K,mBACbvH,KAAKrD,MAAM4K,kBAAkBJ,EAAKG,OAAO,KAEpCjS,EAAU4G,gBAIb+D,KAAKrD,MAAM4K,mBACbvH,KAAKrD,MAAM4K,kBAAkBJ,EAAKG,OAAO,M,4CAWzBF,GAAkB,IAAD,OACrCA,EAAgB,CACdxC,SAAU2B,GACVmB,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,OAAKA,EAAiBT,MAIlB,EAAKxK,MAAM4K,mBACb,EAAK5K,MAAM4K,kBAAkBK,EAAiBT,KAAKU,MAAMC,MAIpD,CACLR,OAAQ,CACNM,EAAiBT,KAAKU,MAAMC,MADtB,mBAEM,MAARH,EAAeA,EAAKL,OAAS,KACjCxC,MAAM,EAAG,EAAKnI,MAAM8H,WAZfkD,S,GApIsBxH,aA2JjC4H,G,kDAgCJ,aAAe,IAAD,8BACZ,gBAGKvD,YAAc,EAAKA,YAAY7E,KAAjB,gBAJP,E,gEAaRK,KAAKrD,MAAM0K,uBACbrH,KAAKrD,MAAM0K,0B,+BAQL,IAAD,EACyCrH,KAAKrD,MAA7CmF,EADD,EACCA,WAAYoF,EADb,EACaA,MAAOD,EADpB,EACoBA,QAASxC,EAD7B,EAC6BA,QACpC,OACE,kBAAC,GAAD,CACE3C,WAAYA,EACZwB,MAAM,SACNH,aAAc,CAAC,MAAO,MAAO,OAC7BsB,QAASA,EACTpB,UAAW,CACT,CAACe,MAAO,SAAUL,WAAW,GAC7B,CAACK,MAAO,YAAaL,WAAW,GAChC,CAACK,MAAO,eAAgBL,WAAW,IAErCS,YAAaxE,KAAKwE,YAClBpB,UAAW,CACT,CAACgB,MAAO,KAAML,WAAW,GACzB,CAACK,MAAO,KAAML,WAAW,GACzB,CAACK,MAAO,mBAAoBL,WAAW,IAEzCW,OAAQuC,IAAYC,M,oCAgBX,IAAD,EACuBlH,KAAKrD,MAAhC2K,EADI,EACJA,OAAQL,EADJ,EACIA,QAASC,EADb,EACaA,MACzB,OAAID,EACK,CAAC,CAAC/B,OAAQ,UAAWY,MAAO,CAAC,CAAC1B,MAAO,aAAcL,WAAW,EAAOG,KAAM,SAC3EgD,EACA,CAAC,CAAChC,OAAQ,QAASY,MAAO,CAAC,CAAC1B,MAAO,gBAAiBL,WAAW,EAAOG,KAAM,SAEpEoD,EAAO9D,KAAI,SAACqE,GACzB,IAAMG,EAAO,IAAIC,KAAKJ,EAAMK,WAC5B,MAAO,CACLhD,OAAQ2C,EAAMzC,OACdU,MAAO,CACL,CACE1B,MAAOyD,EAAMzC,OAAO+C,iBACpBpE,WAAW,EACXG,KAAK,UAAD,OAAY2D,EAAMzC,SAExB,CAAChB,MAAO4D,EAAKG,iBAAkBpE,WAAW,EAAOG,KAAM,MACvD,CAACE,MAAOyD,EAAMO,gBAAgBD,iBAAkBpE,WAAW,EAAMG,KAAM,e,GA3GpD/D,aAoHhBqG,M,0NCpRf,IAUe6B,GAVW/B,KAAH,M,2LCAvB,IAYegC,GAZiBhC,KAAH,MCCd,SAASiC,GAAcC,EAAMC,GAI1C,YAHkBC,IAAdD,IACFA,EAAY,IACdD,EAAO,KAAOA,EACI,IAAdC,GAAmBD,EAAKf,OAASgB,EACrBD,EAAKG,UAAU,EAAGF,EAAY,GAE7B,MADFD,EAAKI,OAAOJ,EAAKf,OAAS,GAIhCe,E,ICLLK,G,kDAoBJ,aAAe,IAAD,8BACZ,gBAEKnC,sBAAwB,EAHjB,E,qDAWJ,IAAD,SAC8C1G,KAAKrD,MAAnDmF,EADA,EACAA,WAAY2C,EADZ,EACYA,QAASiC,EADrB,EACqBA,sBAC5B,OACE,kBAAC,IAAD,CACEE,MAAOyB,GACPxB,UAAW,CAAEC,MAAOrC,KAEnB,YAAyD,IAAtDwC,EAAqD,EAArDA,QAASC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,KAAM2B,EAA+B,EAA/BA,QAAS1B,EAAsB,EAAtBA,gBAC3BC,EACJhS,EAAU4G,eAAiB,KAAO,kBAAM,EAAKoL,sBAAsBD,IAQrE,OALI/R,EAAU4G,gBAAkB,EAAKyK,wBAA0BA,IAC7D,EAAKA,sBAAwBA,EAC7BoC,KAGE7B,EAEA,kBAAC,GAAD,CACE8B,aAAc,GACd1B,sBAAuBA,EACvBvF,WAAYA,EACZ2C,QAASA,EACTwC,SAAO,IAGJC,EAEL,kBAAC,GAAD,CACE6B,aAAc,GACd1B,sBAAuBA,EACvBvF,WAAYA,EACZ2C,QAASA,EACTyC,OAAK,IAKP,kBAAC,GAAD,CACE6B,aAAc5B,EAAK4B,aACnB1B,sBAAuBA,EACvBvF,WAAYA,EACZ2C,QAASA,S,4CAgBD2C,GAAkB,IAAD,OACrCA,EAAgB,CACdxC,SAAU0D,GACVZ,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,OAAKA,EAAiBT,KAKf,CACL4B,aAAc,CACZnB,EAAiBT,KAAK6B,YAAYlB,MADtB,mBAEA,MAARH,EAAeA,EAAKoB,aAAe,KACvCjE,MAAM,EAAG,EAAKnI,MAAM8H,UARfkD,S,GA/F2BxH,aAiHtC8I,G,kDAgCJ,aAAe,IAAD,8BACZ,gBAGKzE,YAAc,EAAKA,YAAY7E,KAAjB,gBAJP,E,gEAaRK,KAAKrD,MAAM0K,uBACbrH,KAAKrD,MAAM0K,0B,+BAQL,IAAD,EACyBrH,KAAKrD,MAA7BmF,EADD,EACCA,WAAY2C,EADb,EACaA,QACpB,OACE,kBAAC,GAAD,CACE3C,WAAYA,EACZwB,MAAM,eACNH,aAAc,CAAC,MAAO,OACtBsB,QAASA,EACTpB,UAAW,CACT,CAACe,MAAO,OAAQL,WAAW,GAC3B,CAACK,MAAO,SAAUL,WAAW,IAE/BS,YAAaxE,KAAKwE,YAClBpB,UAAW,CACT,CAACgB,MAAO,KAAML,WAAW,GACzB,CAACK,MAAO,mBAAoBL,WAAW,Q,oCAiBhC,IAAD,EAC6B/D,KAAKrD,MAAtCoM,EADI,EACJA,aAAc9B,EADV,EACUA,QAASC,EADnB,EACmBA,MAC/B,OAAID,EACK,CAAC,CAAC/B,OAAQ,UAAWY,MAAO,CAAC,CAAC1B,MAAO,aAAcL,WAAW,EAAOG,KAAM,SAC3EgD,EACA,CAAC,CAAChC,OAAQ,QAASY,MAAO,CAAC,CAAC1B,MAAO,gBAAiBL,WAAW,EAAOG,KAAM,SAEpE6E,EAAavF,KAAI,SAACwF,GAC/B,MAAO,CACL9D,OAAQ8D,EAAYR,KACpB1C,MAAO,CACL,CACE1B,MAAOmE,GAAcS,EAAYR,MACjCzE,WAAW,EACXG,KAAK,SAAD,OAAW8E,EAAYR,OAE7B,CAACpE,MAAO4E,EAAYE,OAAOC,QAAQ,GAAGC,WAAa,OAAQrF,WAAW,EAAMG,KAAM,e,GAtG1D/D,aA+GrB0I,M,sxBCjOf,IAAMQ,GAAapH,YAAO+D,IAAP/D,CAAH,MAOVqH,GAAcrH,YAAOsH,KAAPtH,CAAH,MAKF,SAAAtF,GAAK,OAAIA,EAAMC,MAAMqB,4BACvB,SAAAtB,GAAK,OAAIA,EAAMC,MAAMoB,kBAAkBrB,EAAM6M,cAIpDrH,GAAkBF,YAAOG,IAAPH,CAAH,KAEF5M,EAAUyD,cAMvB2Q,GAAkBxH,YAAOG,IAAPH,CAAH,KAEF5M,EAAUyD,cA6Fd4Q,G,kLAjDP1J,KAAKrD,MAAM0K,uBACbrH,KAAKrD,MAAM0K,0B,+BAQL,IAAD,EAOHrH,KAAKrD,MALPgN,EAFK,EAELA,UACAC,EAHK,EAGLA,UACAC,EAJK,EAILA,YACAvG,EALK,EAKLA,MACAc,EANK,EAMLA,MAGF,OACE,kBAAClC,EAAA,EAAD,CAAO0H,UAAWA,EAAWrG,UAAW,GACtC,kBAACyC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,aAAaC,WAAW,SAAS0D,KAAK,UAC5E,kBAAC9D,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAACT,GAAD,CAAaE,UAAWG,GACtB,0BAAMK,EAAGH,MAGb,kBAACR,GAAD,CAAYpD,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,cAEnE,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,aAAaC,WAAW,UAC9D,kBAACiD,GAAD,CAAYU,MAAI,GACd,kBAAC,GAAD,CAAiBH,UAAWA,EAAWK,QAAM,GAC1C3G,KAIP,kBAAC0C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,aAAaC,WAAW,UAC9D,kBAACiD,GAAD,CAAYU,MAAI,GACd,kBAACN,GAAD,CAAiBG,UAAWA,EAAWK,QAAM,GAC1C7F,Y,GAzEIjE,a,4KCzCvB,IAUe+J,GAVW5D,KAAH,M,sNCAvB,IAYe6D,GAZkB7D,KAAH,MC4Ef8D,G,uKArDH,IAAD,SACwBpK,KAAKrD,MAA9BgN,EADC,EACDA,UAAWC,EADV,EACUA,UAEjB,OACE,kBAAC,IAAD,CACEhD,MAAOsD,GACPlD,aACE3R,EAAU4G,eAAiB5G,EAAUgH,sCAAwC,OAEhF,YAAgD,IAG3CgO,EAHFpD,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBAClBC,EACJhS,EAAU4G,eAAiB,KAAO,kBAAM,EAAKoL,sBAAsBD,IAQrE,OALEiD,EADEpD,EACgB,aACXC,EACW,gBAEAC,EAAKmD,aAAaD,gBAAgBlB,QAAQ,GAAK,KAEjE,kBAAC,GAAD,CACES,UAAWA,EACXD,UAAWA,EACXrG,MAAM,iBACNc,MAAOiG,EACPR,YAAaxU,EAAU6F,yBACvBmM,sBAAuBA,S,4CAeXD,GACpBA,EAAgB,CACdxC,SAAUuF,GACVzC,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,OAAKA,EAAiBT,KAEf,CAACmD,aAAc1C,EAAiBT,KAAKmD,aAAaxC,MADhDH,S,GAhEWxH,aCuEboK,G,uKArDH,IAAD,SACwBvK,KAAKrD,MAA9BgN,EADC,EACDA,UAAWC,EADV,EACUA,UAEjB,OACE,kBAAC,IAAD,CACEhD,MAAOsD,GACPlD,aACE3R,EAAU4G,eAAiB5G,EAAUgH,sCAAwC,OAEhF,YAAgD,IAG3CmO,EAHFvD,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBAClBC,EACJhS,EAAU4G,eAAiB,KAAO,kBAAM,EAAKoL,sBAAsBD,IAQrE,OALEoD,EADEvD,EACsB,aACjBC,EACiB,gBAEAC,EAAKmD,aAAaE,sBAAsBrB,QAAQ,GAAK,OAE7E,kBAAC,GAAD,CACES,UAAWA,EACXD,UAAWA,EACXrG,MAAM,mBACNc,MAAOoG,EACPX,YAAaxU,EAAUwF,kBACvBwM,sBAAuBA,S,4CAeXD,GACpBA,EAAgB,CACdxC,SAAUuF,GACVzC,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,OAAKA,EAAiBT,KAEf,CAACmD,aAAc1C,EAAiBT,KAAKmD,aAAaxC,MADhDH,S,GAhEcxH,a,8HCL/B,IASesK,GATInE,KAAH,M,sKCAhB,IAWeoE,GAXWpE,KAAH,MC4ERqE,G,uKArDH,IAAD,SACwB3K,KAAKrD,MAA9BgN,EADC,EACDA,UAAWC,EADV,EACUA,UAEjB,OACE,kBAAC,IAAD,CACEhD,MAAO6D,GACPzD,aACE3R,EAAU4G,eAAiB5G,EAAUiH,8BAAgC,OAEtE,YAAgD,IAG3CsO,EAHF3D,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBAClBC,EACJhS,EAAU4G,eAAiB,KAAO,kBAAM,EAAKoL,sBAAsBD,IAQrE,OALEwD,EADE3D,EACM,aACDC,EACC,gBAEA,IAAMC,EAAKyD,MAAMA,MAAMzB,QAAQ,GAEvC,kBAAC,GAAD,CACES,UAAWA,EACXD,UAAWA,EACXrG,MAAM,QACNc,MAAOwG,EACPf,YAAaxU,EAAU4F,oBACvBoM,sBAAuBA,S,4CAebD,GACpBA,EAAgB,CACdxC,SAAU8F,GACVhD,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,OAAKA,EAAiBT,KAEf,CAACyD,MAAOhD,EAAiBT,KAAKyD,MAAM9C,MADlCH,S,GAhEOxH,a,6mBCSxB,IAAM6B,GAAcC,YAAOC,IAAPD,CAAH,MAEC,SAAAtF,GAAK,OAAIA,EAAMC,MAAM2B,wBAMjC4D,GAAkBF,YAAOG,IAAPH,CAAH,MAER,SAAAtF,GAAK,OAAIA,EAAMC,MAAMgB,gBAKfvI,EAAUyD,aACZzD,EAAU+D,uBAErB,qBAAG0I,aACYZ,GAAYC,IAA3B,+BACe9L,EAAU+D,sBADzB,gBAOAyR,GAAkB5I,YAAO6I,KAAP7I,CAAH,KAEF5M,EAAUyD,aACZzD,EAAUqE,4BA2MZqR,G,uKA9KH,IAAD,SACoC/K,KAAKrD,MAAxCmF,EADD,EACCA,WAAYkJ,EADb,EACaA,YAAapO,EAD1B,EAC0BA,MAC3BuK,EAAOnH,KAAKiL,UAElB,OACE,kBAAC,GAAD,CAAa1H,UAAW,GACtB,kBAAC,GAAD,CAAiBzB,WAAYA,GAAa9B,KAAKkL,YAC7C/D,EAAKM,OAAS,GACd,kBAAC,KAAD,CAAqBhE,MAAM,OAAO2B,OAAQ4F,GACxC,kBAACH,GAAD,CACE1D,KAAMA,EACNgE,OAAQ,CAAEC,IAAK,EAAGC,MAAO,EAAGC,KAAM,EAAGC,OAAQ,GAI7C9F,MAAO,CAAChC,MAAO,IAEf,8BACE,oCAAgB+H,GAAG,SAASC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAClD,0BAAMC,OAAO,KAAKC,UAAWlP,EAAMgC,eAAgBmN,YAAa,KAChE,0BAAMF,OAAO,MAAMC,UAAWlP,EAAMgC,eAAgBmN,YAAa,OAGrE,kBAAC,KAAD,CACEC,OAAQpP,EAAM8B,eACduN,UAAU,IAEZ,kBAAC,KAAD,CACEC,QAASlM,KAAKmM,cACdH,OAAQpP,EAAM6B,eACd2N,KAAM,CAAEC,KAAMzP,EAAM+B,gBACpB2N,cAAe,SAACF,GAAD,OAAU,EAAKG,YAAYH,IAC1CI,WAAY,EACZC,SAAU,IAEZ,kBAAC,KAAD,CACEC,OAAQ,CACN,SAAAC,GAAO,OAAI,EAAKC,cAAcD,IAC9B,SAAAE,GAAO,OAAI,EAAKC,cAAcD,KAEhCb,OAAQpP,EAAM6B,eACd2N,KAAM,CAAEC,KAAMzP,EAAM+B,gBACpB2N,cAAe,SAACF,GAAD,OAAU,EAAKW,YAAYX,IAC1CY,UAAU,IAEZ,kBAAC,KAAD,CACEC,eAAgB,SAAC7I,GAAD,OAAW,EAAK8I,eAAe9I,IAC/C+I,UAAW,SAAC/I,GAAD,MAAW,CAAC,EAAKgJ,eAAehJ,KAC3CiJ,aAAc,CACZC,WAAY1Q,EAAM4B,4BAClB+O,OAAQ,KACRC,aAAc,EACdC,SAAUpY,EAAUmE,0BACpBkU,UAAWC,KAlDA,IAoDbC,UAAW,CAAEC,MAAOjR,EAAMgC,gBAC1BkP,WAAY,CAAED,MAAOjR,EAAMgB,eAC3BmQ,OAAQ,CAAE/B,OAAQpP,EAAM8B,gBACxBsP,kBAAmB,MAErB,kBAAC,KAAD,CACEC,KAAK,WACL/B,QAASlM,KAAKkO,cACdlC,OAAQpP,EAAMgC,eACduP,YAAa,EACbC,YAAa,EACb/B,KAAK,eACLgC,UAAW,CAAErC,OAAQpP,EAAMiC,0BAA2ByP,EAAG,GACzDN,kBAAmB,W,iCAe/B,MAAM,IAAIO,MAAM,2C,gCAShB,MAAM,IAAIA,MAAM,0C,oCAShB,MAAM,IAAIA,MAAM,8C,oCAShB,MAAM,IAAIA,MAAM,8C,oCASJ5B,GACZ,MAAM,IAAI4B,MAAM,gD,oCASJ1B,GACZ,MAAM,IAAI0B,MAAM,gD,kCASNnK,GACV,MAAM,IAAImK,MAAM,8C,kCASNnK,GACV,MAAM,IAAImK,MAAM,8C,qCASHnK,GACb,MAAM,IAAImK,MAAM,iD,qCASHnK,GACb,MAAM,IAAImK,MAAM,mD,GA/LIpO,a,kRCnDxB,IAWeqO,GAXkBlI,KAAH,MCIxBmI,G,uKAqBM,IAAD,EACoCzO,KAAKrD,MAAxCmF,EADD,EACCA,WAAYkJ,EADb,EACaA,YAAapO,EAD1B,EAC0BA,MACjC,OACE,kBAAC,IAAD,CACEgK,MAAO4H,GAEP3H,UAAW,CAAE6H,KAAM,MAElB,YAA+B,IAA5BzH,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClB,OAAIF,EAEA,kBAAC,GAAD,CACE0H,oBAAqB,GACrB3D,YAAaA,EACbpO,MAAOA,EACPqK,SAAO,EACPnF,WAAYA,IAIToF,EAEL,kBAAC,GAAD,CACEyH,oBAAqB,GACrB3D,YAAaA,EACbpO,MAAOA,EACPsK,OAAK,EACLpF,WAAYA,IAMd,kBAAC,GAAD,CACE6M,oBAAqBxH,EAAKwH,oBAC1B3D,YAAaA,EACbpO,MAAOA,EACPkF,WAAYA,W,GA1DY3B,aAuElCyO,G,yKAiCQ,IAENtL,EAAQ,sBAGZ,OAJkBtD,KAAKrD,MAAfuK,QAGN5D,GAAS,oBACJA,I,gCAUP,OADgCtD,KAAKrD,MAA7BgS,sB,oCAUR,MAAO,S,oCASP,MAAO,oB,oCASKhC,GACZ,OAAqC,IAA9BkC,KAAKC,MAAMnC,EAAU,O,oCAShBE,GACZ,OAAoC,IAA7BgC,KAAKE,KAAKlC,EAAU,O,kCASjBzI,GACV,OAAO,IAAI6D,KAAK7D,GAAO4K,mBAAmB,UAAW,CAAEC,SAAU,U,kCASvD7K,GACV,GAAIA,GAAS,IAAM,CACjB,IAAM8K,EAAI9K,EAAQ,IAClB,OAAO8K,EAAE/F,QAAQgG,OAAOC,UAAUF,GAAK,EAAI,GAAK,IAGhD,OAAO9K,I,qCASIA,GACb,OAAO,IAAI6D,KAAK7D,GAAO4K,mBAAmB,UAAW,CAAEC,SAAU,U,qCASpD7K,GACb,MAAM,iBAAN,OAAwBA,EAAM+D,sB,GAnIF4C,IAA1B6D,GACGS,UAAY,CAIjBvN,WAAYwN,IAAUC,OAAOC,WAI7BxE,YAAasE,IAAUC,OAAOC,WAI9Bb,oBAAqBW,IAAUG,MAAMD,WAIrCtI,MAAOoI,IAAUI,KAIjBzI,QAASqI,IAAUI,KAInB9S,MAAO0S,IAAUK,OAAOH,YA+GbI,mBAAUnB,I,oQCnNzB,IAaeoB,GAbMvJ,KAAH,MCIZwJ,G,kDAoBJ,WAAYnT,GAAQ,IAAD,8BACjB,cAAMA,IAEDoT,UAAY,IAAI9H,KACrB,EAAK8H,UAAUC,QAAQ,EAAKD,UAAUE,UAAY,IAClD,EAAKC,QAAU,IAAIjI,KALF,E,qDAaT,IAAD,EACoCjI,KAAKrD,MAAxCmF,EADD,EACCA,WAAYkJ,EADb,EACaA,YAAapO,EAD1B,EAC0BA,MACjC,OACE,kBAAC,IAAD,CACEgK,MAAOiJ,GACPhJ,UAAW,CAAEsJ,MAAOnQ,KAAK+P,UAAUK,cAAeC,IAAKrQ,KAAKkQ,QAAQE,iBAEnE,YAA+B,IAA5BnJ,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClB,OAAIF,EAEA,kBAAC,GAAD,CACEqJ,QAAS,GACTtF,YAAaA,EACbpO,MAAOA,EACPqK,SAAO,EACPnF,WAAYA,IAIToF,EAEL,kBAAC,GAAD,CACEoJ,QAAS,GACTtF,YAAaA,EACbpO,MAAOA,EACPsK,OAAK,EACLpF,WAAYA,IAMd,kBAAC,GAAD,CACEwO,QAASnJ,EAAKmJ,QACdtF,YAAaA,EACbpO,MAAOA,EACPkF,WAAYA,W,GArEK3B,aAkF3BoQ,G,yKAiCQ,IAENjN,EAAQ,gBAGZ,OAJkBtD,KAAKrD,MAAfuK,QAGN5D,GAAS,oBACJA,I,gCAUP,OADoBtD,KAAKrD,MAAjB2T,U,oCAUR,MAAO,c,oCASP,MAAO,U,oCASK3D,GACZ,OAAOkC,KAAKC,MAAMnC,K,oCASNE,GACZ,OAAOgC,KAAKE,KAAKlC,K,kCASPzI,GACV,OAAO,IAAI6D,KAAK7D,GAAO4K,mBAAmB,UAAW,CAAEC,SAAU,U,kCASvD7K,GACV,MAAM,IAAN,OAAWA,EAAM+E,QAAQ,M,qCASZ/E,GACb,OAAO,IAAI6D,KAAK7D,GAAO4K,mBAAmB,UAAW,CAAEC,SAAU,U,qCASpD7K,GACb,MAAM,eAAN,OAAsBA,EAAM+E,QAAQ,Q,GA9Hf4B,IAAnBwF,GACGlB,UAAY,CAIjBvN,WAAYwN,IAAUC,OAAOC,WAI7Bc,QAAShB,IAAUG,MAAMD,WAIzBxE,YAAasE,IAAUC,OAAOC,WAI9BtI,MAAOoI,IAAUI,KAIjBzI,QAASqI,IAAUI,KAInB9S,MAAO0S,IAAUK,OAAOH,YA0GbI,mBAAUE,I,4mCC3MzB,IAAMU,GAAcvO,YAAO+D,IAAP/D,CAAH,KAEG5M,EAAUsG,2BAA6B,KACtCtG,EAAUsG,2BAA6B,KAC1C,WAAa8U,WAASC,SAAW,MAAQC,SAAOC,WAC5D,qBAAG9O,aACYZ,GAAYC,IAA3B,kCACkB9L,EAAUqG,oBAAsB,KADlD,qCAEmBrG,EAAUqG,oBAAsB,KAFnD,gBAQAmV,GAAoB5O,YAAOuO,GAAPvO,CAAH,KAED5M,EAAUsG,2BAA6B,MAIvDmV,GAAW7O,YAAO+D,IAAP/D,CAAH,KAEK5M,EAAUsG,2BAA6B,MACpD,gBAAGmG,EAAH,EAAGA,WAAH,OACEA,IAAeZ,GAAYK,IAAMO,IAAeZ,GAAYI,KAA7D,sCAC0D,EAArCjM,EAAUsG,2BAA6B,EAAI,KADhE,gBAGCmG,IAAeZ,GAAYG,IAAMS,IAAeZ,GAAYE,KAA7D,sCACqB/L,EAAUsG,2BAA2B,EAAI,KAD9D,eAGAmG,IAAeZ,GAAYC,IAA3B,iCACgB9L,EAAUqG,oBAAsB,KADhD,sCAQDqV,GAAY9O,YAAO+D,IAAP/D,CAAH,KAEI5M,EAAUsG,2BAA6B,MACpD,gBAAGmG,EAAH,EAAGA,WAAH,OACEA,IAAeZ,GAAYK,IAAMO,IAAeZ,GAAYI,IAAMQ,IAAeZ,GAAYG,KAA9F,sCACqBhM,EAAUsG,2BAA2B,EAAI,KAD9D,gBAGCmG,IAAeZ,GAAYE,IAAMU,IAAeZ,GAAYC,KAA7D,oCAOD6P,GAAY/O,YAAO+D,IAAP/D,CAAH,KAEI5M,EAAUsG,2BAA6B,MACpD,gBAAGmG,EAAH,EAAGA,WAAH,OACEA,IAAeZ,GAAYK,IAAMO,IAAeZ,GAAYI,IAAMQ,IAAeZ,GAAYG,KAA9F,sCACqBhM,EAAUsG,2BAA2B,EAAI,KAD9D,gBAGCmG,IAAeZ,GAAYE,IAAMU,IAAeZ,GAAYC,KAA7D,oCAOD8P,GAAahP,YAAOyH,GAAPzH,CAAH,MAEE,SAAAtF,GAAK,OAAIA,EAAMC,MAAMmB,2BAC1B,SAAApB,GAAK,OAAIA,EAAMC,MAAMgB,iBAI5BsT,GAAgBjP,YAAOmI,GAAPnI,CAAH,MAED,SAAAtF,GAAK,OAAIA,EAAMC,MAAMmB,2BAC1B,SAAApB,GAAK,OAAIA,EAAMC,MAAMgB,iBAI5BuT,GAAmBlP,YAAOsI,GAAPtI,CAAH,MAEJ,SAAAtF,GAAK,OAAIA,EAAMC,MAAMmB,2BAC1B,SAAApB,GAAK,OAAIA,EAAMC,MAAMgB,iBAI5BwT,GAAYnP,YAAO0I,GAAP1I,CAAH,MAEG,SAAAtF,GAAK,OAAIA,EAAMC,MAAMmB,2BAC1B,SAAApB,GAAK,OAAIA,EAAMC,MAAMgB,iBAO5ByT,G,kDAYJ,WAAY1U,GAAQ,IAAD,8BACjB,cAAMA,IACD6I,MAAQ,CACX8L,YAAa,GAIf,EAAK/J,kBAAoB,EAAKA,kBAAkB5H,KAAvB,gBAPR,E,qDAgBjB,OACE,6BACGK,KAAKuR,kBACLvR,KAAKwR,mBACLxR,KAAKyR,sB,wCAWX,IACS3P,EAAe9B,KAAKrD,MAApBmF,WACAwP,EAAgBtR,KAAKwF,MAArB8L,YAER,OACE,kBAACd,GAAD,CAAavK,WAAS,EACpBC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXtE,WAAYA,GAEZ,kBAACgP,GAAD,CAAU/G,MAAI,EAACjI,WAAYA,GACzB,kBAAC,IAAD,CACE8D,QAAS,KAET,kBAACqL,GAAD,CACEtH,UAAW,EACXrG,MAAM,SACNc,MAAOkN,EAAcA,EAAYnJ,iBAAmB,aACpD0B,YAAaxU,EAAU2F,wBAI7B,kBAAC8V,GAAD,CAAU/G,MAAI,EAACjI,WAAYA,GACzB,kBAAC,IAAD,CACE4P,MAAO,GACP9L,QAAS,KAET,kBAACsL,GAAD,CAAevH,UAAW,MAG9B,kBAACmH,GAAD,CAAU/G,MAAI,EAACjI,WAAYA,GACzB,kBAAC,IAAD,CACE4P,MAAO,IACP9L,QAAS,KAET,kBAACuL,GAAD,CAAkBxH,UAAW,MAGjC,kBAACmH,GAAD,CAAU/G,MAAI,EAACjI,WAAYA,GACzB,kBAAC,IAAD,CACE4P,MAAO,IACP9L,QAAS,KAET,kBAACwL,GAAD,CAAWzH,UAAW,S,yCAa/B,IACS7H,EAAe9B,KAAKrD,MAApBmF,WAGR,OACE,kBAAC0O,GAAD,CAAavK,WAAS,EACpBC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXtE,WAAYA,GAEZ,kBAACiP,GAAD,CAAWhH,MAAI,EAACjI,WAAYA,GAC1B,kBAAC,IAAD,CACE8D,QAAS,KAET,kBAAC,GAAD,CAAmBoF,YAZP,IAYiClJ,WAAYA,MAG7D,kBAACiP,GAAD,CAAWhH,MAAI,EAACjI,WAAYA,GAC1B,kBAAC,IAAD,CACE4P,MAAO,GACP9L,QAAS,KAET,kBAAC,GAAD,CAAYoF,YApBA,IAoB0BlJ,WAAYA,S,yCAa3D,IACSA,EAAe9B,KAAKrD,MAApBmF,WACAwP,EAAgBtR,KAAKwF,MAArB8L,YAER,OACE,kBAACT,GAAD,CAAmB5K,WAAS,EAC1BC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXtE,WAAYA,GAEZ,kBAACkP,GAAD,CAAWjH,MAAI,EAACjI,WAAYA,GAC1B,kBAAC,IAAD,CACE8D,QAAS,KAET,kBAAC,GAAD,CACE9D,WAAYA,EACZ2C,QAAS,EACT8C,kBAAmBvH,KAAKuH,sBAI9B,kBAACyJ,GAAD,CAAWjH,MAAI,EAACjI,WAAYA,GAC1B,kBAAC,IAAD,CACE4P,MAAO,GACP9L,QAAS,KAET,kBAAC,GAAD,CACE9D,WAAYA,EACZ2C,QAAS,EACTiC,sBAAuBrR,EAAU4G,eAAiBqV,EAAc,Y,wCAa1DzJ,GAChB7H,KAAK2R,SAAS,CACZL,YAAazJ,EAAMzC,a,GArLFhF,GAAjBiR,GACGhC,UAAY,CAIjBvN,WAAYwN,IAAUC,OAAOC,YAqLlB6B,U,iWCtSf,IAAMO,GAAoB3P,YAAOG,IAAPH,CAAH,KAEJ5M,EAAUyD,aACZzD,EAAU6D,uBAEd,SAAAyD,GAAK,OAAIA,EAAMC,MAAMgB,iBAC5B,qBAAGkE,aACYZ,GAAYC,IAA3B,+BACe9L,EAAU8D,sBADzB,uBAOA0Y,GAAiB5P,YAAOG,IAAPH,CAAH,KAED5M,EAAUyD,aACZzD,EAAUkE,2BAEd,SAAAoD,GAAK,OAAIA,EAAMC,MAAMiB,oBAgBnBiU,G,uKAXH,IACAhQ,EAAe9B,KAAKrD,MAApBmF,WACR,OACE,yBAAK2D,MAAO,CAAEsM,UAAW,OAAQC,WAAY,SAC3C,kBAACJ,GAAD,CAAmB9P,WAAYA,GAA/B,YACA,kBAAC+P,GAAD,wC,GANmBzR,G,+/ECX3B,IAAMsC,GAAkBT,YAAOU,IAAPV,CAAH,MASfgQ,GAAgBhQ,YAAOiQ,KAAPjQ,CAAH,MAEN,SAAAtF,GAAK,OAAIA,EAAMC,MAAMiB,oBAO5BsU,GAAoBlQ,YAAOG,IAAPH,CAAH,KAEJ5M,EAAUyD,aACZzD,EAAUqE,4BAGrB,qBAAGoI,aACYZ,GAAYC,IAA3B,4CAOAiR,GAAiBnQ,YAAOkQ,GAAPlQ,CAAH,MAKd,gBAAGH,EAAH,EAAGA,WAAH,OACCA,IAAeZ,GAAYE,IAAMU,IAAeZ,GAAYC,KAA7D,0CAOAkR,GAAkBpQ,YAAOkQ,GAAPlQ,CAAH,MAIf,gBAAGH,EAAH,EAAGA,WAAH,OACCA,IAAeZ,GAAYE,GAA3B,uCAGAU,IAAeZ,GAAYC,IAA3B,sEAQDmR,GAAerQ,aAAO,gBAAMsQ,EAAN,2BACxB,kBAACC,GAAA,EAAD,eACEC,QAAS,CACPC,KAAM,OACNC,KAAM,OACNC,WAAY,eAEVL,MAPWtQ,CAAH,MAWL,SAAAtF,GAAK,OAAIA,EAAMC,MAAMiB,mBAEfxI,EAAUyD,aACZzD,EAAUqE,4BAEZ,SAAAiD,GAAK,OAAIA,EAAMC,MAAMiB,oBAE5B,qBAAGiE,aACYZ,GAAYC,IAA3B,qCAsBF0R,GAAiB5Q,YAAO6Q,KAAP7Q,CAAH,MAEP,SAAAtF,GAAK,OAAIA,EAAMC,MAAMiB,mBACfxI,EAAUyD,aACZzD,EAAUmE,2BAIrBuZ,GAAmB9Q,YAAO+Q,KAAP/Q,CAAH,MAGd5M,EAAUwG,2BAA6BxG,EAAUwE,mCAAqC,EAAK,MAE7F,qBAAGiI,aACYZ,GAAYC,IAA3B,8BAEM9L,EAAUuG,oBAAsBvG,EAAUwE,mCAAqC,EAAK,KAF1F,gBAOS,SAAA8C,GAAK,OAAIsW,gBAAKtW,EAAMC,MAAMiB,iBAAkBlB,EAAMC,MAAM0C,0BAGnD,SAAA3C,GAAK,OAAIsW,gBAAKtW,EAAMC,MAAMkC,qBAAsBnC,EAAMC,MAAM2C,uBACjE,SAAA5C,GAAK,OAAIA,EAAMC,MAAMkC,wBAU9BoU,GAA0BjR,YAAO8Q,GAAP9Q,CAAH,MAWvBkR,G,uKAgCM,IAAD,EAQHnT,KAAKrD,MANPmF,EAFK,EAELA,WACAsR,EAHK,EAGLA,MACAC,EAJK,EAILA,aACArS,EALK,EAKLA,KACAsS,EANK,EAMLA,YACGf,EAPE,2EAUDgB,EAAW1E,KAAKE,KAAKqE,EAAQE,GAAe,EAClD,OACE,wBAASf,EACP,kBAACW,GAAD,CACEpR,WAAYA,EACZ+L,MAAM,UACN2F,QAAS,SAAAC,GAAK,OAAIJ,EAAaI,EAAO,IACtCC,SAAmB,IAAT1S,EACV2S,aAAW,cAEX,kBAAC,KAAD,OAEF,kBAACT,GAAD,CACEpR,WAAYA,EACZ+L,MAAM,UACN2F,QAAS,SAAAC,GAAK,OAAIJ,EAAaI,EAAOzS,EAAO,IAC7C0S,SAAmB,IAAT1S,EACV2S,aAAW,iBAEX,kBAAC,KAAD,OAEF,kBAACT,GAAD,CACEpR,WAAYA,EACZ+L,MAAM,UACN2F,QAAS,SAAAC,GAAK,OAAIJ,EAAaI,EAAOzS,EAAO,IAC7C0S,SAAU1S,GAAQuS,EAClBI,aAAW,aAEX,kBAAC,KAAD,OAEF,kBAACZ,GAAD,CACEjR,WAAYA,EACZ+L,MAAM,UACN2F,QAAS,SAAAC,GAAK,OAAIJ,EAAaI,EAAO5E,KAAK+E,IAAI,EAAGL,KAClDG,SAAU1S,GAAQuS,EAClBI,aAAW,aAEX,kBAAC,KAAD,Y,GA/EsBxT,aA+F1B0T,G,mLA+CkB,IAAD,EACgC7T,KAAKrD,MAAhDyW,EADW,EACXA,MAAOC,EADI,EACJA,aAAcrS,EADV,EACUA,KAAMsS,EADhB,EACgBA,YAC7BQ,EAAcjF,KAAK+E,IAAI,EAAG/E,KAAKE,KAAKqE,EAAQE,GAAe,GAC7DtS,EAAO8S,GACTT,EAAa,KAAMS,K,+BAWrB,OACE,kBAAC,GAAD,CAAiBC,QAFH,IAEqB/P,QAAQ,YACxChE,KAAKgU,gB,mCAYV,OADuBhU,KAAKrD,MAApBmF,aAESZ,GAAYC,GAEzB,kBAAC8Q,GAAD,KACE,kBAACjM,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,aAAaC,WAAW,UACjE,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAAS0D,KAAK,UACvE9J,KAAKiU,sBAER,kBAACjO,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAAS0D,KAAK,UACvE9J,KAAKkU,gBAKZ,kBAACjC,GAAD,KACE,kBAACjM,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,WAAWC,WAAW,SAAS0D,KAAK,UACzE9J,KAAKiU,qBACLjU,KAAKkU,iB,2CAWM,IAAD,EAOflU,KAAKrD,MALPmF,EAFiB,EAEjBA,WACAqS,EAHiB,EAGjBA,oBACAb,EAJiB,EAIjBA,YACAc,EALiB,EAKjBA,mBACAxX,EANiB,EAMjBA,MAEIyX,EAAYvS,IAAeZ,GAAYE,IAAMU,IAAeZ,GAAYC,GAC5E,QAAU,iBACZ,OACE,kBAAC,WAAD,KACGiT,EAAmB3M,OAAS,GAC3B,kBAAC,WAAD,KACE,kBAAC2K,GAAD,CAAgBtQ,WAAYA,EAAY+L,MAAM,WAC3CwG,GAEH,kBAAC/B,GAAD,CACExQ,WAAYA,EACZwS,MAAO,kBAACC,GAAA,EAAD,MACPnQ,MAAOkP,EACPkB,SAAUL,EAEVM,UAAW,CACTC,WAAY,CAACjP,MAAO,CAAC6H,WAAY1Q,EAAMmC,gCAGxCqV,EAAmB5Q,KAAI,SAAAmR,GAAiB,OACvC,kBAAC9B,GAAD,CACElP,IAAKgR,EACLvQ,MAAOuQ,GAENA,QAMX,kBAACtC,GAAD,CAAiBvQ,WAAYA,EAAY+L,MAAM,WAC5C7N,KAAK4U,mB,qCAWE,IAWVC,EAXS,EAMT7U,KAAKrD,MAJPmF,EAFW,EAEXA,WACAsR,EAHW,EAGXA,MACApS,EAJW,EAIXA,KACAsS,EALW,EAKXA,YAGInO,EAAiB,IAAViO,EAAc,EAAIpS,EAAOsS,EAAc,EAC9CnP,EAAK0K,KAAKiG,IAAI1B,GAAQpS,EAAO,GAAKsS,GAGxC,GAAIxR,IAAeZ,GAAYE,IAAMU,IAAeZ,GAAYC,GAC9D,GAAIiS,GAAS,IAAY,CACvB,IAAM2B,EAAI3B,EAAQ,IAClByB,EAAQE,EAAE5L,QAAQgG,OAAOC,UAAU2F,GAAK,EAAI,GAAK,SAE9C,GAAI3B,GAAS,IAAS,CACzB,IAAM4B,EAAI5B,EAAQ,IAClByB,EAAQG,EAAE7L,QAAQgG,OAAOC,UAAU4F,GAAK,EAAI,GAAK,SAE9C,GAAI5B,GAAS,IAAM,CACtB,IAAMlE,EAAIkE,EAAQ,IAClByB,EAAQ3F,EAAE/F,QAAQgG,OAAOC,UAAUF,GAAK,EAAI,GAAK,SAGnD2F,EAAQzB,EAAMjK,QAAQ,QAGtB0L,EAAQzB,EAAMjL,iBAEhB,MAAM,GAAN,OAAUhD,EAAKgD,iBAAf,YAAmChE,EAAGgE,iBAAtC,eAA6D0M,K,mCAQjD,IAAD,EAOP7U,KAAKrD,MALPmF,EAFS,EAETA,WACAsR,EAHS,EAGTA,MACAC,EAJS,EAITA,aACArS,EALS,EAKTA,KACAsS,EANS,EAMTA,YAEF,OACE,kBAAC,GAAD,CACExR,WAAYA,EACZsR,MAAOA,EACPC,aAAcA,EACdrS,KAAMA,EACNsS,YAAaA,Q,GA/MInT,aAsNVyP,eAAUiE,I,wzDCtczB,IAAM7R,GAAcC,YAAOC,IAAPD,CAAH,MAEC,SAAAtF,GAAK,OAAIA,EAAMC,MAAMmC,+BAIjCoD,GAAkBF,YAAOG,IAAPH,CAAH,MAER,SAAAtF,GAAK,OAAIA,EAAMC,MAAMgB,gBAKfvI,EAAUyD,aACZzD,EAAU+D,uBAKrB6b,GAAsBhT,IAAOiT,IAAV,KAIVC,KAAOC,OAEhB,qBAAGtT,aACYZ,GAAYC,IAA3B,6CAOAkU,GAAyBpT,YAAOqT,KAAPrT,CAAH,MAEf,SAAAtF,GAAK,OAAIA,EAAMC,MAAMY,6BAI5B6E,GAAcJ,YAAOK,IAAPL,CAAH,KAGC,WAAawO,WAASC,SAAW,MAAQC,SAAOC,WACnD,SAAAjU,GAAK,OAAIA,EAAMsK,QAAU,GAAM,IAC3B5R,EAAUyD,cAIvByc,GAAiBtT,YAAOO,IAAPP,CAAH,KAEN5M,EAAUwG,2BAA6B,MAC/C,qBAAGiG,aACYZ,GAAYC,IAA3B,4BACY9L,EAAUuG,oBAAsB,KAD5C,gBAOAmH,GAAiBd,YAAOsT,GAAPtT,CAAH,MAEI,SAAAtF,GAAK,OAAIA,EAAMC,MAAMoC,uBAMvC0D,GAAkBT,YAAOU,IAAPV,CAAH,MAED,SAAAtF,GAAK,OAAIA,EAAMC,MAAMoC,uBAC5B,SAAArC,GAAK,OAAIA,EAAMC,MAAMgB,gBACfvI,EAAUyD,aACZzD,EAAUmE,2BAErB,qBAAGsI,aACYZ,GAAYC,IAA3B,+BACe9L,EAAUyE,mBADzB,gBAOA8I,GAAkBX,YAAOS,GAAPT,CAAH,MAIR,SAAAtF,GAAK,OAAIA,EAAMC,MAAMiB,oBAK5BgF,GAAaZ,YAAOa,IAAPb,CAAH,MAEH,SAAAtF,GAAK,OAAIA,EAAMC,MAAMkB,qBA+VnB0X,G,kDA7Rb,aAAe,IAAD,8BACZ,gBACKhQ,MAAQ,CACXiQ,UAAW,EACXC,eAAgB,EAChBC,iBAAkB,KAClBC,eAAgB,KAChBtC,YAAa,IAGf,EAAKnM,KAAO,KACZ,EAAKiM,MAAQ,EACb,EAAKyC,QAAU,KACf,EAAKC,YAAc,KACnB,EAAKC,UAAY,KAGjB,EAAKC,iBAAmB,EAAKA,iBAAiBrW,KAAtB,gBACxB,EAAKsW,wBAA0B,EAAKA,wBAAwBtW,KAA7B,gBAlBnB,E,qDA0BJ,IACA2D,EAAUtD,KAAKrD,MAAf2G,MACR,OACE,kBAAC,GAAD,CAAaC,UAAW,GACtB,kBAAC,GAAD,KAAkBD,GACjBtD,KAAKkW,sB,yCAUQ,IAKdrP,EALa,SAC0D7G,KAAKrD,MAAxEmF,EADS,EACTA,WAAYqB,EADH,EACGA,aAAcgT,EADjB,EACiBA,kBAAmBvP,EADpC,EACoCA,MAAOwP,EAD3C,EAC2CA,WAD3C,EAEoEpW,KAAKwF,MAAlFiQ,EAFS,EAETA,UAAWC,EAFF,EAEEA,eAAgBC,EAFlB,EAEkBA,iBAAkBC,EAFpC,EAEoCA,eAAgBtC,EAFpD,EAEoDA,YAI/D+C,EAA0B,IAAfrW,KAAKoT,MACtB,GAAIiD,EACFxP,EAAY,CAACC,MAAOwM,OACjB,CACH,IAAMgD,EAAgBzH,KAAKE,KAAK/O,KAAKoT,MAAQE,GAAe,EAC5D,GAAImC,IAAcC,EAAiB,EACjC7O,EAAY,CAAC0P,MAAOX,EAAgB9O,MAAOwM,QACxC,GAAImC,IAAcC,EAAiB,EACtC7O,EAAY,CAAC2P,OAAQb,EAAkBjH,KAAM4E,QAC1C,GAAImC,IAAca,EAAe,CAEpCzP,EAAY,CAAC6H,KADQ1O,KAAKoT,MAAQqC,EAAYnC,QAQ9CzM,EAAY,CAACC,MAAOwM,GAKxB,OACE,kBAAC,IAAD,CAEEmD,YAAaJ,EAAW,eAAiB,KACzCzP,MAAOA,EACPC,UAAWA,IAEV,YAA+B,IAA5BI,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClB,IAAKF,IAAYC,EAAO,CACtB,EAAKC,KAAOA,EACZ,IAAMuP,EAAaP,EAAkB,EAAKhP,MACrB,OAAjB,EAAK0O,SAAoBa,EAAWC,MAAMlP,SAC5C,EAAKoO,QAAUa,EAAWC,MAAM,GAAG7O,KAAK0D,IAC1C,EAAKsK,YAAcY,EAAWE,SAASd,YACvC,EAAKC,UAAYW,EAAWE,SAASb,UAGvC,OACE,kBAAC,IAAD,CAEEU,YAAaJ,EAAW,eAAiB,KACzCzP,MAAOwP,EACPS,KAAuB,OAAjB,EAAKhB,QACXhP,UAAW,CAACiQ,MAAO,CAAEC,OAAQ,EAAKlB,YAEjC,YAAoE,IAAxDmB,EAAuD,EAAhE/P,QAA8BgQ,EAAkC,EAAzC/P,MAAyBgQ,EAAgB,EAAtB/P,KAC5C,GAAiB,MAAb+P,IAAsBF,IAAiBC,EAAY,CACrD,IAAMP,EAAaP,EAAkBe,GACrC,EAAK9D,MAAQsD,EAAWS,UAAU/D,MAEpC,OACE,kBAACpN,EAAA,EAAD,CAAMC,WAAS,EACbC,UAAU,SACVC,QAAQ,SACRC,WAAW,UAEX,kBAAC,IAAD,CAAMT,GAAIsB,EAASrB,QAAS6K,WAASC,SAAU0G,cAAY,EAACC,eAAa,GACvE,kBAACpC,GAAD,CAAqBnT,WAAYA,GAC/B,kBAACuT,GAAD,CAAwBpR,KAAM5O,EAAUuE,qCAG5C,kBAAC,GAAD,CAAaqN,QAASA,EAAU,EAAI,GAClC,kCACG9D,EAAaK,KAAI,SAACC,EAAOC,GAGxB,OACE,yBAAKC,IAAKD,EAAOD,MAAOA,QAI9B,kBAACG,EAAA,EAAD,KACG,EAAK0T,uBAER,kBAACjT,EAAA,EAAD,KACG,EAAKC,sBAER,kBAACC,EAAA,EAAD,KACG,EAAKgT,oBAAoBP,EAAcC,EAAYC,c,4CAkBnD,IAAD,EACclX,KAAKrD,MAA/BmF,EADY,EACZA,WAAYuB,EADA,EACAA,UACpB,OACE,kBAACkS,GAAD,CAAgBzT,WAAYA,GACzBuB,EAAUG,KAAI,SAACK,EAAMH,GACpB,OAGE,kBAAC,GAAD,CACE5B,WAAYA,EACZ6B,IAAKD,EACLI,MAAOD,EAAKE,UAAY,QAAU,UAClCC,QAAQ,WACRC,KAAK,SAES,MAAbJ,EAAKK,KACJ,kBAAC,GAAD,CAAYC,GAAIN,EAAKK,MAAOL,EAAKO,OACjCP,EAAKO,a,2CAcG,IAAD,OACXI,EAAgBxE,KAAKrD,MAArB6H,YACR,OAAIxE,KAAKmH,KACI3C,EAAYxE,KAAKmH,MAChB3D,KAAI,SAACyB,EAASvB,GACxB,OAAO,EAAKgC,kBAAkBT,MAIzB,O,wCASOA,GAAU,IAClBnD,EAAe9B,KAAKrD,MAApBmF,WACR,OACE,kBAACyT,GAAD,CAAgBzT,WAAYA,EAAY6B,IAAKsB,EAAQC,QAClDD,EAAQa,MAAMtC,KAAI,SAACK,EAAMH,GACxB,OACE,kBAAC,GAAD,CACE5B,WAAYA,EACZ6B,IAAKD,EACLI,MAAOD,EAAKE,UAAY,QAAU,UAClCC,QAAQ,WACRC,KAAK,SAES,MAAbJ,EAAKK,KACJ,kBAAC,GAAD,CAAYC,GAAIN,EAAKK,MAAOL,EAAKO,OACjCP,EAAKO,a,4CAcI,IACbtC,EAAe9B,KAAKrD,MAApBmF,WADY,EAEe9B,KAAKwF,MAAhCiQ,EAFY,EAEZA,UAAWnC,EAFC,EAEDA,YACbkE,EAAOxX,KAAKoT,MAAQ,EAC1B,OACE,kBAAC,IAAD,CAAMzN,GAAI6R,EAAM5R,QAAS6K,WAASC,UAChC,kBAAC,GAAD,CAAgB5O,WAAYA,GAC1B,kBAAC,GAAD,CACEA,WAAYA,EACZsS,mBAAoB,CAAC,GAAI,GAAI,IAC7Bd,YAAaA,EACbtS,KAAMyU,EACNrC,MAAOpT,KAAKoT,MACZC,aAAcrT,KAAKgW,iBACnB7B,oBAAqBnU,KAAKiW,8B,uCAanBxC,EAAOzS,GAAO,IAAD,OAC5BhB,KAAK2R,UAAS,SAAA8F,GAAS,MAAK,CAC1BhC,UAAWzU,EACX0U,eAAgB+B,EAAUhC,UAC1BE,iBAAkB,EAAKG,YACvBF,eAAgB,EAAKG,gB,8CASDtC,GAEEzT,KAAKwF,MAArB8N,cACYG,EAAMiE,OAAOtT,QAC/BpE,KAAKmH,KAAO,KACZnH,KAAKoT,MAAQ,EACbpT,KAAK6V,QAAU,KACf7V,KAAK8V,YAAc,KACnB9V,KAAK+V,UAAY,KACjB/V,KAAK2R,SAAS,CACZ8D,UAAW,EACXC,eAAgB,EAChBC,iBAAkB,KAClBC,eAAgB,KAChBtC,YAAaG,EAAMiE,OAAOtT,a,GA9UTjE,a,ijBC1HzB,IAsBewX,GAtBerR,KAAH,M,4NCA3B,IAUesR,GAVUtR,KAAH,MCgFPuR,G,kDAjEb,aAAe,IAAD,8BACZ,gBAGKrT,YAAc,EAAKA,YAAY7E,KAAjB,gBAJP,E,qDAYJ,IACAmC,EAAe9B,KAAKrD,MAApBmF,WACR,OACE,kBAAC,GAAD,CACEA,WAAYA,EACZwB,MAAM,SACNH,aAAc,CAAC,MAAO,MAAO,OAC7BE,UAAW,CACT,CAACe,MAAO,SAAUL,WAAW,GAC7B,CAACK,MAAO,YAAaL,WAAW,GAChC,CAACK,MAAO,eAAgBL,WAAW,IAErC6C,MAAO+Q,GACPvB,WAAYwB,GACZzB,kBAAmB,SAAAhP,GAAI,OAAIA,EAAK2Q,kBAChCtT,YAAaxE,KAAKwE,gB,kCAiBZ2C,GAiBV,OAhBeA,EAAK2Q,iBAAiBnB,MAAMnT,KAAI,SAACuU,GAC9C,IAAMlQ,EAAQkQ,EAAKjQ,KACbE,EAAO,IAAIC,KAAKJ,EAAMK,WAC5B,MAAO,CACLhD,OAAQ2C,EAAMzC,OACdU,MAAO,CACL,CACE1B,MAAOyD,EAAMzC,OAAO+C,iBACpBpE,WAAW,EACXG,KAAK,UAAD,OAAY2D,EAAMzC,SAExB,CAAChB,MAAO4D,EAAKG,iBAAkBpE,WAAW,GAC1C,CAACK,MAAOyD,EAAMO,gBAAgBD,iBAAkBpE,WAAW,Y,GArEtC5D,a,gPCG/B,IAAMqQ,GAAcvO,YAAO+D,IAAP/D,CAAH,KAEF5M,EAAUsG,2BAA6B,KACpC,WAAa8U,WAASC,SAAW,MAAQC,SAAOC,WAC5D,qBAAG9O,aACYZ,GAAYC,IAA3B,iCACiB9L,EAAUqG,oBAAsB,KADjD,sCAEoBrG,EAAUsG,2BAA6B,KAF3D,oCAGkBtG,EAAUqG,oBAAsB,KAHlD,qCAImBrG,EAAUqG,oBAAsB,KAJnD,gBAUAsc,GAAiB/V,YAAO+D,IAAP/D,CAAH,MA+BLgW,G,uKAnBH,IACAnW,EAAe9B,KAAKrD,MAApBmF,WACR,OACE,kBAAC,GAAD,CAAamE,WAAS,EACpBC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXtE,WAAYA,GAEZ,kBAACkW,GAAD,CAAgBjO,MAAI,EAACjI,WAAYA,GAC/B,kBAAC,IAAD,CAAM8D,QAAS,KACb,kBAAC,GAAD,CAAkB9D,WAAYA,W,GAjBjB1B,GC8DV8X,G,kDAnEb,aAAe,IAAD,8BACZ,gBAGK1T,YAAc,EAAKA,YAAY7E,KAAjB,gBAJP,E,qDAYJ,IAAD,EACyBK,KAAKrD,MAA7BmF,EADD,EACCA,WAAY2C,EADb,EACaA,QACpB,OACE,kBAAC,GAAD,CACE3C,WAAYA,EACZwB,MAAM,eACNH,aAAc,CAAC,MAAO,OACtBsB,QAASA,EACTpB,UAAW,CACT,CAACe,MAAO,OAAQL,WAAW,GAC3B,CAACK,MAAO,SAAUL,WAAW,IAE/BS,YAAaxE,KAAKwE,YAClBpB,UAAW,CACT,CAACgB,MAAO,KAAML,WAAW,GACzB,CAACK,MAAO,mBAAoBL,WAAW,Q,oCAiBhC,IACLgF,EAAiB/I,KAAKrD,MAAtBoM,aACR,OAAIA,EACaA,EAAavF,KAAI,SAACwF,GAC/B,MAAO,CACL9D,OAAQ8D,EAAYR,KACpB1C,MAAO,CACL,CACE1B,MAAOmE,GAAcS,EAAYR,MACjCzE,WAAW,EACXG,KAAK,SAAD,OAAW8E,EAAYR,OAE7B,CAACpE,MAAO4E,EAAYE,OAAOC,QAAQ,GAAGC,WAAa,OAAQrF,WAAW,EAAMG,KAAM,WAOjF,O,GAnFwB/D,a,4RCDrC,IAgBegY,GAhBI7R,KAAH,M,gqBCQhB,IAAMkK,GAAcvO,YAAO+D,IAAP/D,CAAH,KAEE5M,EAAUsG,2BAA6B,KACpCtG,EAAUsG,2BAA6B,KACzCtG,EAAUsG,2BAA6B,KACtCtG,EAAUsG,2BAA6B,KAC1C,WAAa8U,WAASC,SAAW,MAAQC,SAAOC,WAC5D,qBAAG9O,aACYZ,GAAYC,IAA3B,iCACiB9L,EAAUqG,oBAAsB,KADjD,sCAEoBrG,EAAUqG,oBAAsB,KAFpD,oCAGkBrG,EAAUqG,oBAAsB,KAHlD,qCAImBrG,EAAUqG,oBAAsB,KAJnD,gBAUAsV,GAAY/O,YAAO+D,IAAP/D,CAAH,MAMT2P,GAAoB3P,YAAOG,IAAPH,CAAH,KAEJ5M,EAAUyD,aACZzD,EAAU6D,uBAEd,SAAAyD,GAAK,OAAIA,EAAMC,MAAMgB,iBAC5B,qBAAGkE,aACYZ,GAAYC,IAA3B,+BACe9L,EAAU8D,sBADzB,uBAOA0Y,GAAiB5P,YAAOG,IAAPH,CAAH,KAED5M,EAAUyD,aACZzD,EAAUkE,2BAEd,SAAAoD,GAAK,OAAIA,EAAMC,MAAMiB,oBAO5Bua,G,uKAiBM,IACAtW,EAAe9B,KAAKrD,MAApBmF,WAEFsD,EAASiT,SAASrY,KAAKrD,MAAM2b,MAAMC,OAAOnT,OAAQ,IACxD,OACE,kBAAC,GAAD,CAAaa,WAAS,EACpBC,UAAU,SACVC,QAAQ,aACRC,WAAW,aACXtE,WAAYA,GAEZ,kBAACkE,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAAC,GAAD,CAAmBjI,WAAYA,GAA/B,kBAEF,kBAAC,IAAD,CAAO8E,MAAOuR,GAAYtR,UAAW,CAAEzB,YACpC,YAA+B,IAA5B6B,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClB,GAAIF,EACF,OACE,kBAACjB,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAAC,GAAD,sBAGD,GAAI7C,EACP,OACE,kBAAClB,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAAC,GAAD,uBAGD,GAAI5C,EAAKU,MAAO,CACnB,IAAMG,EAAO,IAAIC,KAAKd,EAAKU,MAAMK,WACjC,OACE,kBAAC,WAAD,KACE,kBAAClC,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAAC,GAAD,gBACW5C,EAAKU,MAAMzC,OAAO+C,kBAE7B,kBAAC,GAAD,mBACcH,EAAKG,mBAGrB,6BACA,kBAAC,GAAD,CAAW4B,MAAI,GACb,kBAAC,GAAD,CACEjI,WAAYA,EACZ2C,QAAS,IACTsE,aAAc5B,EAAKU,MAAMkB,iBAOjC,OACE,kBAAC/C,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAAC,GAAD,kC,GAvEa3J,GAAzBgY,GACG/I,UAAY,CAIjBvN,WAAYwN,IAAUC,OAAOC,WAI7B8I,MAAOhJ,IAAUK,OAAOH,YAwEb4I,U,2iBC5If,IAsBeI,GAtBqBlS,KAAH,M,8OCAjC,IAUemS,GAVgBnS,KAAH,MC+EboS,G,kDA/Db,aAAe,IAAD,8BACZ,gBAGKlU,YAAc,EAAKA,YAAY7E,KAAjB,gBAJP,E,qDAYJ,IACAmC,EAAe9B,KAAKrD,MAApBmF,WACR,OACE,kBAAC,GAAD,CACEA,WAAYA,EACZwB,MAAM,eACNH,aAAc,CAAC,MAAO,OACtBE,UAAW,CACT,CAACe,MAAO,OAAQL,WAAW,GAC3B,CAACK,MAAO,SAAUL,WAAW,IAE/B6C,MAAO4R,GACPpC,WAAYqC,GACZtC,kBAAmB,SAAAhP,GAAI,OAAIA,EAAKwR,wBAChCnU,YAAaxE,KAAKwE,gB,kCAiBZ2C,GAeV,OAdeA,EAAKwR,uBAAuBhC,MAAMnT,KAAI,SAACuU,GACpD,IAAM/O,EAAc+O,EAAKjQ,KACzB,MAAO,CACL5C,OAAQ8D,EAAYR,KACpB1C,MAAO,CACL,CACE1B,MAAOmE,GAAcS,EAAYR,MACjCzE,WAAW,EACXG,KAAK,SAAD,OAAW8E,EAAYR,OAE7B,CAACpE,MAAO4E,EAAYE,OAAOC,QAAQ,GAAGC,WAAa,OAAQrF,WAAW,Y,GAlE3C5D,a,gPCErC,IAAMqQ,GAAcvO,YAAO+D,IAAP/D,CAAH,KAEF5M,EAAUsG,2BAA6B,KACpC,WAAa8U,WAASC,SAAW,MAAQC,SAAOC,WAC5D,qBAAG9O,aACYZ,GAAYC,IAA3B,iCACiB9L,EAAUqG,oBAAsB,KADjD,sCAEoBrG,EAAUsG,2BAA6B,KAF3D,oCAGkBtG,EAAUqG,oBAAsB,KAHlD,qCAImBrG,EAAUqG,oBAAsB,KAJnD,gBAUAsc,GAAiB/V,YAAO+D,IAAP/D,CAAH,MA+BL2W,G,uKAnBH,IACA9W,EAAe9B,KAAKrD,MAApBmF,WACR,OACE,kBAAC,GAAD,CAAamE,WAAS,EACpBC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXtE,WAAYA,GAEZ,kBAAC,GAAD,CAAgBiI,MAAI,EAACjI,WAAYA,GAC/B,kBAAC,IAAD,CAAM8D,QAAS,KACb,kBAAC,GAAD,CAAwB9D,WAAYA,W,GAjBjB1B,G,oPC1B/B,IAceyY,GAdUvS,KAAH,M,ovBCStB,IAAMkK,GAAcvO,YAAO+D,IAAP/D,CAAH,KAEE5M,EAAUsG,2BAA6B,KACpCtG,EAAUsG,2BAA6B,KACzCtG,EAAUsG,2BAA6B,KACtCtG,EAAUsG,2BAA6B,KAC1C,WAAa8U,WAASC,SAAW,MAAQC,SAAOC,WAC5D,qBAAG9O,aACYZ,GAAYC,IAA3B,iCACiB9L,EAAUqG,oBAAsB,KADjD,sCAEoBrG,EAAUqG,oBAAsB,KAFpD,oCAGkBrG,EAAUqG,oBAAsB,KAHlD,qCAImBrG,EAAUqG,oBAAsB,KAJnD,gBAUAkW,GAAoB3P,YAAOG,IAAPH,CAAH,KAEJ5M,EAAUyD,aACZzD,EAAU6D,uBAEd,SAAAyD,GAAK,OAAIA,EAAMC,MAAMgB,iBAC5B,qBAAGkE,aACYZ,GAAYC,IAA3B,+BACe9L,EAAU8D,sBADzB,uBAOA0Y,GAAiB5P,YAAOG,IAAPH,CAAH,KAED5M,EAAUyD,aACZzD,EAAUkE,2BAEd,SAAAoD,GAAK,OAAIA,EAAMC,MAAMiB,oBAI5BgF,GAAaZ,YAAOa,IAAPb,CAAH,MAEH,SAAAtF,GAAK,OAAIA,EAAMC,MAAMkB,qBAW5Bgb,G,uKAiBM,IACAhX,EAAe9B,KAAKrD,MAApBmF,WACA0G,EAASxI,KAAKrD,MAAM2b,MAAMC,OAA1B/P,KAEFuQ,EAAgBjX,IAAeZ,GAAYC,IAAMW,IAAeZ,GAAYE,GAAK,GAAK,EAC5F,OACE,kBAAC,GAAD,CAAa6E,WAAS,EACpBC,UAAU,SACVC,QAAQ,aACRC,WAAW,aACXtE,WAAYA,GAEZ,kBAAC,GAAD,CAAmBA,WAAYA,GAA/B,uBACA,kBAAC,IAAD,CAAO8E,MAAOiS,GAAkBhS,UAAW,CAAE2B,UAC1C,YAA+B,IAA5BvB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClB,OAAIF,EAEA,kBAACjB,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAAC,GAAD,sBAGG7C,EAEL,kBAAClB,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAAC,GAAD,uBAGG5C,EAAK6B,YAEV,kBAAChD,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAAC,GAAD,KACG,SACAxB,GAAcpB,EAAK6B,YAAYR,KAAMuQ,IAExC,kBAAC,GAAD,KACG,WACA5R,EAAK6B,YAAYE,OAAOC,QAAQ,GAAGC,WACnC,QAEH,kBAAC,GAAD,KACG,iBACD,kBAAC,GAAD,CAAYjF,GAAE,iBAAYgD,EAAK6B,YAAYnB,MAAMzC,SAC9C+B,EAAK6B,YAAYnB,MAAMzC,OAAO+C,oBAOrC,kBAACnC,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAAC,GAAD,wC,GAnEmB3J,GAA/B0Y,GACGzJ,UAAY,CAIjBvN,WAAYwN,IAAUC,OAAOC,WAI7B8I,MAAOhJ,IAAUK,OAAOH,YAoEbsJ,U,uJC3IA,SAASE,GAAa7I,EAAOE,GAC1C,OAAOxB,KAAKC,MCFC,SAAyBqB,EAAOE,GAC7C,OAAOxB,KAAKoK,UAAY5I,EAAMF,GAASA,EDCrB+I,CAAgB/I,EAAOE,I,IEkyB5B8I,G,kDAxwBb,WAAYxc,GAAQ,IAAD,8BACjB,cAAMA,IAGDyc,YAAc,EAAKA,YAAYzZ,KAAjB,gBACnB,EAAK0Z,QAAU,EAAKA,QAAQ1Z,KAAb,gBACf,EAAK2Z,UAAY,EAAKA,UAAU3Z,KAAf,gBACjB,EAAKyM,KAAO,EAAKA,KAAKzM,KAAV,gBACZ,EAAK4Z,OAAS,EAAKA,OAAO5Z,KAAZ,gBAWd,EAAK6Z,MAAQ,KACb,EAAKC,SAAW,KAChB,EAAKC,cAAgB,KAKrB,EAAKC,gBAAkB,EAAKhd,MAAMid,SAAW,IAAM,IACnD,EAAKC,iBAAmB,IACxB,EAAKC,sBAAwB,EAE7B,EAAKC,QAAU,EAAKJ,gBAAkB,EACtC,EAAKK,QAAU,EAAKH,iBAAmB,EACvC,EAAKI,cAAgB,EAAKN,gBAAkB,EAAI,GAKhD,EAAKO,eAAiB,EAAKvd,MAAMid,SAAW,GAAK,GACjD,EAAKO,YAAc,EAAKxd,MAAMid,SAAW,GAAK,EAC9C,EAAKQ,SAAW,EAAKF,eAAiB,EAAKC,YAO3C,EAAKE,iCAAmC,EACxC,EAAKC,oCAAsC,EAAK3d,MAAMid,UAAY,MAAQ,EAI1E,EAAKW,aAAe,EAAK5d,MAAMid,SAAW,GAAK,GAG/C,EAAKY,gBAAkB,EACvB,EAAKC,WAAa,IAClB,EAAKC,mBAAqB,EAAK/d,MAAMid,SAAW,GAAK,IAGrD,EAAKe,2BAA6B,CAAC,IAAK,IAAK,KAC7C,EAAKC,6BAA+B,CAAC,IAAK,IAAK,KAC/C,EAAKC,YAAc,GACnB,EAAKC,oBAAsB,IAC3B,EAAKC,gBAAkB,EAAKpe,MAAMid,SAAW,EAAI,EACjD,EAAKoB,mCAAqC,EAAKre,MAAMid,SAAW,IAAM,EAItE,EAAKqB,uBAAyB,EAAKte,MAAMid,SAAW,MAAQ,SAI5D,EAAKsB,aAAe,EAAKhB,eAAiB,EAAI,IAG9C,EAAKiB,aAAe,KAGhB,EAAKxe,MAAMid,SACb,EAAKwB,aAAe,EACb,EAAKze,MAAM0e,WAClB,EAAKD,aAAe,KAEpB,EAAKA,aAAe,MAGtB,EAAKE,mBAAqB,EAG1B,EAAKC,sBAAwB,KAC7B,EAAKC,uBAAyB,KAC9B,EAAKC,oBAAsB,IAC3B,EAAKC,qBAAuB,KA5FX,E,gEAyGjB1b,KAAK8Z,sBAAwB9Z,KAAKrD,MAAM8G,MAAQzD,KAAKrD,MAAM8G,MAAQzD,KAAK2Z,gBAAkB,EAG1F3Z,KAAK2b,S,6CASL3b,KAAKyZ,SAASmC,UACd5b,KAAKwZ,MAAMoC,Y,2CAQS,IAAD,OAEb9B,EAAwB9Z,KAAKrD,MAAM8G,MAAQzD,KAAKrD,MAAM8G,MAAQzD,KAAK2Z,gBAAkB,EACvF3Z,KAAK8Z,wBAA0BA,IACjC9Z,KAAK8Z,sBAAwBA,EAG7B9Z,KAAK6b,qBAGD7b,KAAK8b,WACP9b,KAAK8b,UAAUC,SAAQ,SAACjU,GAAW,EAAKkU,aAAalU,S,+BAUjD,IAAD,OACP,OAAO,yBAAKmU,IAAK,SAACC,GAAS,EAAKC,QAAUD,O,6BAS1Clc,KAAKoc,WACLpc,KAAKqc,WAGLrc,KAAKsc,mBAGLtc,KAAKuc,c,oCASL,GAAIvc,KAAKub,sBAAuB,CAC5B,IAAMzT,EAAO9H,KAAK8b,UAAU9b,KAAKsb,mBACjCtb,KAAKgc,aAAalU,GAItB9H,KAAKsb,kBAAoBtC,GAAa,EAAGhZ,KAAKoa,SAAW,GACzDpa,KAAKub,sBAAwBvb,KAAKwb,uBAAyB,IAAIvT,O,iCAW/DjI,KAAK8b,UAAY,GACjB,IAAK,IAAIU,EAAI,EAAGA,EAAIxc,KAAKka,eAAgBsC,IAAK,CAC5C,IAAMC,EAAMzc,KAAK0c,gBAAgBF,GACjCxc,KAAK8b,UAAUa,KAAK,CAClB,GAAOF,EAAI,GACX,GAAOA,EAAI,GACX,IAAQA,EAAI,GACZ,IAAQA,EAAI,GACZ,UAAc,IAIlB,IAAK,IAAID,EAAIxc,KAAKka,eAAgBsC,EAAIxc,KAAKoa,SAAUoC,IACnDxc,KAAK8b,UAAUa,KAAK,CAAC,UAAc,M,sCAUvBjZ,GACd,IAAMqR,EACJ,EAAIlG,KAAK+N,KAAOlZ,EAAQ1D,KAAKkb,cAAgBlb,KAAKka,gBAAkBla,KAAKka,eACrE2C,EAAQ7c,KAAKrD,MAAM0e,WAAa,GAAM,GAAK,EAAIxM,KAAKiO,IAAI,EAAI/H,IAOlE,MAAO,CANI/U,KAAK+Z,QAAU8C,EAAQhO,KAAKiO,IAAI/H,GAAK/U,KAAKia,cAEnDja,KAAKga,SACJha,KAAKrD,MAAM0e,WACVwB,EAAQhO,KAAKkO,IAAIhI,GAAK/U,KAAKia,cAC3B4C,EAAQhO,KAAKkO,IAAI,EAAIhI,GAAK/U,KAAKib,uBAAyB,EAAIjb,KAAKia,kB,iCASrEja,KAAKgd,UAAY,GACjB,IAAK,IAAIR,EAAI,EAAGA,EAAIxc,KAAKka,eAAgBsC,IAAK,CAE5C,IAAMS,EAAcT,EACdU,GAAmBV,EAAI,GAAKxc,KAAKka,eACvCla,KAAKmd,QAAQF,EAAaC,EAAiB,EAAG,GAG9C,IAAME,EAAiBpd,KAAKma,YAAc,EACpCkD,EAAgBD,EAAiBpd,KAAKka,eAAiBsC,EACvDc,EACJF,EAAiBpd,KAAKka,gBAAkBsC,EAAI,GAAKxc,KAAKka,eACxDla,KAAKmd,QAAQE,EAAeC,EAAmB,EAAG,GAOlD,IACMC,GADuBH,EAAiB,GACKpd,KAAKka,eAAiBsC,EACzExc,KAAKmd,QAAQI,EAAqBN,EAAa,EAAG,GAElD,IAAK,IAAIO,EAAI,EAAGA,EAAIxd,KAAKma,YAAaqD,IAAK,CAEzC,IAAM9Z,EAAQ8Z,EAAIxd,KAAKka,eAAiBsC,EAClCiB,GAAkB/Z,EAAQ1D,KAAKka,gBAAkBla,KAAKoa,SAC5Dpa,KAAKmd,QAAQzZ,EAAO+Z,EAAgB,EAAG,IAIvC,IAAMC,GACHF,EAAI,GAAKxd,KAAKma,YAAcna,KAAKka,gBAAkBsC,EAAI,GAAKxc,KAAKka,eACpEla,KAAKmd,QAAQzZ,EAAOga,EAAiB,IAAM,IAC3C1d,KAAKmd,QAAQzZ,EAAOga,EAAiB,IAAM,Q,8BAazCC,EAAaC,EAAaC,EAAUxY,GAC1CrF,KAAKgd,UAAUL,KAAK,CAClB,OAAUgB,EAAYvU,WACtB,OAAUwU,EAAYxU,WACtB,UAAcyU,EACd,QAAYxY,EACZ,SAAaA,IACfrF,KAAK8b,UAAU6B,GAAaG,YAC5B9d,KAAK8b,UAAU8B,GAAaE,c,yCAQV,IAAD,OAEjB9d,KAAK+d,WAAaC,KAAmBhe,KAAK8b,WAG1C9b,KAAK+d,WACFE,MAAM,SAAUD,OACdH,UAAS,SAAC7T,GACT,OAAOA,EAAEtG,MAAQ,EAAKwW,eACpB,EAAKG,iCAAmC,EAAKC,wCAElD2D,MAAM,SAAUD,KAAehe,KAAK2Z,gBAAkB,EAAG3Z,KAAK6Z,iBAAmB,IAIpF,IAAMqE,EAAcF,KAAahe,KAAKgd,WACnCa,UAAS,SAAC7T,GACT,OAAOA,EAAEmU,UAAY,EACnBnU,EAAEmU,UACF,EAAItP,KAAKiG,IAAI9K,EAAEoU,OAAON,UAAW9T,EAAE0N,OAAOoG,cAE7CO,SAASre,KAAKua,cACfva,KAAK+d,WAAWE,MAAM,QAASC,GAGjCle,KAAK+d,WAAWO,GAAG,OAAQte,KAAKoM,MAGhCpM,KAAK+d,WAAWQ,WAAW,GAGvBve,KAAKob,cACP4C,KAAYhe,KAAKuZ,OAAQvZ,KAAKmb,gB,kCAOrB,IAAD,OAEVqD,SAAWC,YAKXze,KAAKwZ,MAAQ,IAAIgF,aACjBxe,KAAKyZ,SAAW+E,sBACdxe,KAAK2Z,gBAAkB3Z,KAAK8Z,sBAC5B9Z,KAAK6Z,iBAAmB7Z,KAAK8Z,sBAC7B,CAAC4E,WAAW,EAAMC,aAAa,EAAMC,WAAY,IAEnD5e,KAAKyZ,SAASoF,YAAa,EAC3B7e,KAAK6b,qBACL7b,KAAKmc,QAAQ2C,YAAY9e,KAAKyZ,SAASsF,MAGvC/e,KAAK8b,UAAUC,SAAQ,SAACjU,GACtBA,EAAKkX,SAAW,IAAIR,YACpB,EAAKxC,aAAalU,GAClB,EAAK0R,MAAMyF,SAASnX,EAAKkX,aAI3BhB,KAAUhe,KAAKyZ,SAASsF,MACrBG,KAAKlB,OACH/X,UAAUjG,KAAKyZ,SAASsF,MACxBI,SAAQ,kBAAM,EAAKpB,WAAWqB,KAAKpB,KAASqB,EAAGrB,KAASsB,MACxDhB,GAAG,QAASte,KAAKoZ,aACjBkF,GAAG,OAAQte,KAAKqZ,SAChBiF,GAAG,MAAOte,KAAKsZ,YAGpBtZ,KAAK0Z,cAAgB,IAAI8E,YACzBxe,KAAKwZ,MAAMyF,SAASjf,KAAK0Z,iB,2CAQzB1Z,KAAKyZ,SAAS8F,OACZvf,KAAK2Z,gBAAkB3Z,KAAK8Z,sBAC5B9Z,KAAK6Z,iBAAmB7Z,KAAK8Z,yB,mCAQpBhS,GAAO,IACZuX,EAAmBvX,EAAnBuX,EAAGC,EAAgBxX,EAAhBwX,EAAgBxX,EAAbkX,SACHQ,SACP,IAAIhB,SAAWa,EAAIrf,KAAK8Z,sBAAuBwF,EAAItf,KAAK8Z,yB,mCAW/ChS,GAAkC,IACzC2X,EACAC,EACA7E,EACAJ,EAJakF,EAA2B,uDAAH,EAKrCA,GAEFF,EAAkBzf,KAAK4f,mBACrB5f,KAAK6f,cACH7f,KAAK4a,6BACL5a,KAAK8f,wBAAwBhY,GAC7B6X,IACJD,EAAgB1f,KAAK4f,mBACnB5f,KAAK6f,cACH7f,KAAK2a,2BAEL3a,KAAK8f,wBAAwBhY,GAE7B6X,IACJ9E,EACE7a,KAAK6a,aAAe7a,KAAK8a,oBAAsB9a,KAAK6a,aAAe8E,EACrElF,EACEza,KAAKya,YAAcza,KAAK0a,mBAAqB1a,KAAKya,YAAckF,IAKlED,EAFAD,EAAkBzf,KAAK4f,mBAAmB5f,KAAK8f,wBAAwBhY,IAOvE+S,EAAc7a,KAAK6a,YACnBJ,EAAaza,KAAKya,YAGpB3S,EAAKkX,SAASe,QACdjY,EAAKkX,SAASgB,UACZhgB,KAAKwa,gBAAkBxa,KAAK8Z,sBAC5B2F,EACA5E,GACF/S,EAAKkX,SAASiB,UAAUP,EAAe7E,GAErC/S,EAAKkX,SAASkB,QADZP,EACsB,CACtB,IAAIO,KACF,EACA,EAAIP,EACJ,EACAF,EACA,KAIoB,KAC1B3X,EAAKkX,SAASmB,WAAW,EAAG,EAAG1F,EAAaza,KAAK8Z,yB,mCAUtC5V,EAAMkc,GAAgB,IAC3BhC,EAA4Bla,EAA5Bka,OAAQ1G,EAAoBxT,EAApBwT,OACR2I,EAD4Bnc,EAAZmB,QACQ,KAAQrF,KAAKrD,MAAMid,SAAW,EAAIwG,GAChEpgB,KAAK0Z,cAAc4G,MAAQD,EAC3BrgB,KAAK0Z,cAAcsG,WAChBhgB,KAAK+a,gBAAkB/a,KAAKgb,mCAAqCoF,GAChEpgB,KAAK8Z,sBACP9Z,KAAK4f,mBAAmB5f,KAAKugB,cAAcrc,EAAKR,MAAO1D,KAAKgd,UAAUvV,UACtEzH,KAAK0Z,cAAc8G,OACjBpC,EAAOiB,EAAIrf,KAAK8Z,sBAAuBsE,EAAOkB,EAAItf,KAAK8Z,uBACzD9Z,KAAK0Z,cAAc+G,OACjB/I,EAAO2H,EAAIrf,KAAK8Z,sBAAuBpC,EAAO4H,EAAItf,KAAK8Z,yB,oCAU/CpW,EAAOgd,GACnB,OAAI1gB,KAAKrD,MAAM0e,WACNrb,KAAK2gB,oBAAoBjd,EAAOgd,GAEhC1gB,KAAK4gB,sBAAsBld,EAAOgd,K,0CAUzBhd,EAAOgd,GACzB,IAAMG,EAAe,CAAC,EAAG,IAAK,KACxBC,EAAc,CAAC,EAAG,IAAK,KAEvBC,EADoB,IACAL,EAEpBM,EAA8B,GAAbN,EAAmBK,EACpCE,EACJD,EAAiBD,EAAiC,GAAbL,EAAmBK,EAG1D,GAAIrd,GAASsd,EACX,OAAOH,EACJ,GAAInd,GAASsd,EAAiBD,EACnC,CACE,IAAMG,GAAcxd,EAAQsd,GAAkBD,EAC9C,OAAO/gB,KAAK6f,cAAciB,EAAaD,EAAcK,GAElD,GAAIxd,GAASud,EAChB,OAAOH,EAGP,IAAMI,GAAcxd,EAAQud,GAAiBF,EAC7C,OAAO/gB,KAAK6f,cAAcgB,EAAcC,EAAaI,K,4CAWnCxd,EAAOgd,GAE3B,IAAMS,EAAS,CAAC,GAAG,GAAG,KAChBC,EAAO,CAAC,IAAI,GAAG,KACfC,EAAa,CAAC,IAAI,GAAG,IACrBC,EAAc,CAAC,IAAI,IAAI,IACvBC,EAAO,CAAC,GAAG,IAAI,KAKfC,EAFyB,IAEAd,EACzBe,EAF2B,GAEAf,EAG3BgB,EAA+B,IAAbhB,EAAoBe,EACtCE,EACJD,EAAkBD,EAAwC,IAAbf,EAAoBc,EAC7DI,EACJD,EAAgBH,EAAsC,IAAbd,EAAoBe,EACzDI,EACJD,EAAsBH,EAAwC,IAAbf,EAAoBc,EACjEM,EACJD,EAAuBL,EAAsC,GAAbd,EAAmBc,EAGrE,GAAI9d,GAASge,EACX,OAAOP,EACJ,GAAIzd,GAASge,EAAkBD,EACpC,CACE,IAAMP,GAAcxd,EAAQge,GAAmBD,EAC/C,OAAOzhB,KAAK6f,cAAcuB,EAAMD,EAAQD,GAErC,GAAIxd,GAASie,EAChB,OAAOP,EACJ,GAAI1d,GAASie,EAAgBH,EAClC,CACE,IAAMN,GAAcxd,EAAQie,GAAiBH,EAC7C,OAAOxhB,KAAK6f,cAAcwB,EAAYD,EAAMF,GAEzC,GAAIxd,GAASke,EAChB,OAAOP,EACJ,GAAI3d,GAASke,EAAsBH,EACxC,CACE,IAAMP,GAAcxd,EAAQke,GAAuBH,EACnD,OAAOzhB,KAAK6f,cAAcyB,EAAaD,EAAYH,GAEhD,GAAIxd,GAASme,EAChB,OAAOP,EACJ,GAAI5d,GAASme,EAAuBL,EACzC,CACE,IAAMN,GAAcxd,EAAQme,GAAwBL,EACpD,OAAOxhB,KAAK6f,cAAc0B,EAAMD,EAAaJ,GAE1C,GAAIxd,GAASoe,EAChB,OAAOP,EAGP,IAAML,GAAcxd,EAAQoe,GAAiBN,EAC7C,OAAOxhB,KAAK6f,cAAcsB,EAAQI,EAAML,K,oCAY9Ba,EAAQC,EAAQC,GAC5B,IAAMC,EAAKD,EACLE,EAAK,EAAID,EAKf,MAJY,CACVrT,KAAKuT,MAAML,EAAO,GAAKG,EAAKF,EAAO,GAAKG,GACxCtT,KAAKuT,MAAML,EAAO,GAAKG,EAAKF,EAAO,GAAKG,GACxCtT,KAAKuT,MAAML,EAAO,GAAKG,EAAKF,EAAO,GAAKG,M,yCAUzB1S,GACjB,IAAI5B,EAAQ,EAIZ,OAHA4B,EAAMsM,SAAQ,SAAAI,GACZtO,GAASA,GAAS,GAAKsO,KAElBhN,OAAOtB,K,8CASQ/F,GACtB,OAAO9H,KAAKugB,cAAczY,EAAKpE,MAAQ1D,KAAKka,eAAgBla,KAAKka,kB,kCAQvDlQ,GAEyB,IAA/BhK,KAAK8Z,wBAGoD,IAAjC9Z,KAAK+d,WAAWQ,cAErCP,KAASqE,QACZriB,KAAK+d,WAAWuE,YAAY,IAAKC,UAErCvE,KAASmB,QAAQqD,GAAKxE,KAASmB,QAAQE,EACvCrB,KAASmB,QAAQsD,GAAKzE,KAASmB,QAAQG,K,8BAQjCtV,GAE6B,IAA/BhK,KAAK8Z,wBAGTkE,KAASmB,QAAQqD,GAAKxE,KAASqB,EAC/BrB,KAASmB,QAAQsD,GAAKzE,KAASsB,K,gCAQvBtV,GAE2B,IAA/BhK,KAAK8Z,wBAGoD,IAAjC9Z,KAAK+d,WAAWQ,cAErCP,KAASqE,QACZriB,KAAK+d,WAAWuE,YAAY,GAEhCtE,KAASmB,QAAQqD,GAAKxE,KAASmB,QAAQuD,IACvC1E,KAASmB,QAAQsD,GAAKzE,KAASmB,QAAQwD,O,6BAOjC,IAAD,OAML,GAJA3iB,KAAK8b,UAAUC,SAAQ,SAACjU,GAAW,EAAK8a,aAAa9a,MAInB,MAA9B9H,KAAKub,sBAA+B,CACtC,IAAMzT,EAAO9H,KAAK8b,UAAU9b,KAAKsb,mBAC3BuH,EAAY,IAAI5a,KAASjI,KAAKub,sBACpC,GAAIsH,EAAY7iB,KAAKyb,oBAEnBzb,KAAKgc,aAAalU,GAGlB9H,KAAKub,sBAAwB,SAE1B,CAEH,IAAMoE,GACHkD,GAAa7iB,KAAKyb,oBAAsB,EACvCoH,EACA7iB,KAAKyb,oBAAsBoH,IAC5B7iB,KAAKyb,oBAAsB,GAG9Bzb,KAAKgc,aAAalU,EAAM6X,IAK5B,IAAIS,EAAgB,EACpB,GAAmC,MAA/BpgB,KAAKwb,uBAAgC,CACvC,IAAMqH,EAAY,IAAI5a,KAASjI,KAAKwb,uBAChCqH,EAAY7iB,KAAK0b,qBAEnB1b,KAAKwb,uBAAyB,KAI9B4E,EACEyC,GAAa7iB,KAAK0b,qBAAuB,EACvCmH,GAAa7iB,KAAK0b,qBAAuB,IACxC1b,KAAK0b,qBAAuBmH,IACE,EAA5B7iB,KAAK0b,qBAA2B,GAK3C1b,KAAK0Z,cAAcqG,QACnB/f,KAAKgd,UAAUjB,SAAQ,SAAC7X,GACtB,EAAK4e,aAAa5e,EAAMkc,MAE1BpgB,KAAK0Z,cAAcqJ,UAEnB/iB,KAAKyZ,SAASuJ,OAAOhjB,KAAKwZ,S,6BAQrByJ,GAUL,IAAK,IAAIzG,EAAI,EAAGA,EAAIxc,KAAKka,eAAgBsC,IAAK,CAC5Cxc,KAAKkb,cAAgBlb,KAAKob,aAC1B,IAAMqB,EAAMzc,KAAK0c,gBAAgBF,GACjCxc,KAAK8b,UAAUU,GAAGgG,GAAKxiB,KAAK8b,UAAUU,GAAGkG,IAAMjG,EAAI,GACnDzc,KAAK8b,UAAUU,GAAGiG,GAAKziB,KAAK8b,UAAUU,GAAGmG,IAAMlG,EAAI,Q,GA5xBlCtc,aCiNR+iB,G,kDA/Kb,aAAe,IAAD,8BACZ,gBAEK1d,MAAQ,CAAC2d,OAAQ,GAAIC,UAAW,GAHzB,E,gEAWZpjB,KAAKqjB,gC,yCASY1iB,GAEjB,IAAI2iB,GAAkB,EACdC,EAAevjB,KAAKrD,MAApB4mB,WACJA,EAAW9b,SAAW9G,EAAU4iB,WAAW9b,OAC7C8b,EAAWxH,SAAQ,SAACyH,EAAW9f,GACzB8f,EAAUC,MAAQ9iB,EAAU4iB,WAAW7f,GAAO+f,KAC9CD,EAAUpe,SAAWzE,EAAU4iB,WAAW7f,GAAO0B,SACnDke,GAAkB,MAItBA,GAAkB,EAIhBA,GACFtjB,KAAKqjB,gC,+BAmCP,IA3BQ,IAAD,EAOHrjB,KAAKrD,MALPiN,EAFK,EAELA,UACA2Z,EAHK,EAGLA,WACAG,EAJK,EAILA,WACAC,EALK,EAKLA,kBACAC,EANK,EAMLA,OAEMT,EAAWnjB,KAAKwF,MAAhB2d,OAKFU,EAAkB7jB,KAAKwF,MAAM4d,UAAY,EAY3CU,EAAgB,GAChBC,EAAiBC,MAAMJ,GAAQvX,KAAK,GAC/BmQ,EAAI,EAAGA,EAAI+G,EAAW9b,QAAS,CAGtC,IAFA,IAAIwc,EAAM,GACJC,EAAaX,EAAW9b,OAAS+U,EAAIoH,EAClCpG,EAAI,EAAGA,EAAIoG,GAAUpH,EAAI+G,EAAW9b,OAAQ+V,KAE9C0G,GAAcf,EAAO3G,KACxBuH,EAAevG,GAAK3O,KAAK+E,IAAIuP,EAAO3G,GAAIuH,EAAevG,KACzDyG,EAAItH,KAAK4G,EAAW/G,MAEtBsH,EAAcnH,KAAKsH,GAGrB,OACE,yBAAKra,UAAWA,GACbka,EAActgB,KAAI,SAACygB,EAAKpe,GACvB,IAAMqe,EAAaD,EAAIxc,OAASmc,EAChC,OACE,kBAAC5d,EAAA,EAAD,CAAMC,WAAS,EACbC,UAAU,MAEVC,QAAS+d,EAAa,eAAkBR,GAAc,gBACtDtd,WAAW,SACXzC,IAAKkC,EACLJ,MAAO,CAAEsM,UAAYlM,GAAY8d,EAAqBA,EAAoB,IAEzEM,EAAIzgB,KAAI,SAACggB,EAAWW,GACnB,IAAMzgB,EAAQmC,EAAW+d,EAASO,EAClC,OACE,kBAACne,EAAA,EAAD,CAAMC,WAAS,EACbC,UAAU,SACVC,QAAQ,SACRC,WAAW,SACXzC,IAAKwgB,EAGL1e,MAAO,CACLhC,MAAOygB,EAAaf,EAAOzf,GAASqgB,EAAeI,GACnD/e,OAAQye,IAGV,kBAAC7d,EAAA,EAAD,CAAM+D,MAAI,GACR,uBAAGqa,KAAMZ,EAAUY,KAAM1M,OAAO,SAAS2M,IAAI,uBAC3C,kBAAC,IAAD,CACE9Y,QAAM,EACNmG,MAAe,GAARhO,EACPkC,QAAS,KAET,yBACE6d,IAAKD,EAAUC,IACfre,OAAQoe,EAAUpe,OAClBkf,IAAKd,EAAUc,oB,oDAqBV,IAAD,OACpBf,EAAevjB,KAAKrD,MAApB4mB,WACRvjB,KAAK2R,SAAS,CACZwR,OAAQa,MAAMT,EAAW9b,QAAQ4E,KAAK,GACtC+W,UAAW,IAIbG,EAAWxH,SAAQ,SAACyH,EAAW9f,GAC7B,IAAM6gB,EAAM,IAAIC,MAChBD,EAAIE,OAAS,SAAAhR,GAAU,IAAD,EACoBA,EAAMiR,cAAtCC,EADY,EACZA,aAAcC,EADF,EACEA,cACtB,GAAIA,EAAe,CAEjB,IAAMnhB,EAAQ+f,EAAUpe,OAASwf,EAAgBD,EACjD,EAAKhT,UAAS,SAAA8F,GAAS,MAAK,CAC1B0L,OAAO,GAAD,mBACD1L,EAAU0L,OAAOre,MAAM,EAAGpB,IADzB,CAEJD,GAFI,YAGDgU,EAAU0L,OAAOre,MAAMpB,EAAQ,KAEpC0f,UAAWvU,KAAK+E,IAAI4P,EAAUpe,OAAQqS,EAAU2L,iBAMtDmB,EAAId,IAAMD,EAAUC,W,GA5MEtjB,a,i5HC8B5B,IAAM0kB,GAAgB5iB,YAAOC,IAAPD,CAAH,MAED,SAAAtF,GAAK,OAAIA,EAAMC,MAAMC,uBAMjCioB,GAAe7iB,YAAO+D,IAAP/D,CAAH,MAGZ,qBAAGH,aACYZ,GAAYC,IAA3B,6CAOA4jB,GAAqB9iB,YAAOG,IAAPH,CAAH,KAEL5M,EAAUyD,aACZzD,EAAU6D,uBAEd,SAAAyD,GAAK,OAAIA,EAAMC,MAAMM,wBAC5B,gBAAG4E,EAAH,EAAGA,WAAH,OACEA,IAAeZ,GAAYK,IAAMO,IAAeZ,GAAYI,KAA7D,kCACiBjM,EAAUoG,qBAAuB,KADlD,qCAEkBpG,EAAUoG,qBAAuB,KAFnD,cAIAqG,IAAeZ,GAAYG,IAA3B,kCACiBhM,EAAUmG,qBAAuB,KADlD,qCAEkBnG,EAAUmG,qBAAuB,KAFnD,cAIAsG,IAAeZ,GAAYE,IAA3B,kCACiB/L,EAAUkG,qBAAuB,KADlD,qCAEkBlG,EAAUkG,qBAAuB,KAFnD,cAIAuG,IAAeZ,GAAYC,IAA3B,kCACiB9L,EAAUiG,qBAAuB,KADlD,qCAEkBjG,EAAUiG,qBAAuB,KAFnD,iCAGcjG,EAAU8D,sBAHxB,gBASDqX,GAAcvO,YAAO+D,IAAP/D,CAAH,KAIC,WAAawO,WAASC,SAAW,MAAQC,SAAOC,WAC5D,gBAAG9O,EAAH,EAAGA,WAAH,OACEA,IAAeZ,GAAYK,IAAMO,IAAeZ,GAAYI,KAA7D,kCACiBjM,EAAUoG,qBAAuB,KADlD,qCAEkBpG,EAAUoG,qBAAuB,KAFnD,cAIAqG,IAAeZ,GAAYG,IAA3B,kCACiBhM,EAAUmG,qBAAuB,KADlD,qCAEkBnG,EAAUmG,qBAAuB,KAFnD,cAIAsG,IAAeZ,GAAYE,IAA3B,kCACiB/L,EAAUkG,qBAAuB,KADlD,qCAEkBlG,EAAUkG,qBAAuB,KAFnD,cAIAuG,IAAeZ,GAAYC,IAA3B,6FAGiB9L,EAAUiG,qBAAuB,KAHlD,qCAIkBjG,EAAUiG,qBAAuB,KAJnD,gBAUD0pB,GAAqB/iB,YAAOuO,GAAPvO,CAAH,MAEN,SAAAtF,GAAK,OAAIA,EAAMC,MAAMI,+BAIjCioB,GAAuBhjB,YAAOuO,GAAPvO,CAAH,MAER,SAAAtF,GAAK,OAAIA,EAAMC,MAAMK,iCAIjCioB,GAAWjjB,YAAO+D,IAAP/D,CAAH,MAER,gBAAGH,EAAH,EAAGA,WAAH,OACEA,IAAeZ,GAAYK,IAAMO,IAAeZ,GAAYI,KAA7D,sCACqBjM,EAAUoG,qBAAqB,EAAI,KADxD,eAGAqG,IAAeZ,GAAYG,IAA3B,sCACqBhM,EAAUmG,qBAAqB,EAAI,KADxD,gBAGCsG,IAAeZ,GAAYE,IAAMU,IAAeZ,GAAYC,KAA7D,oCAODgkB,GAAgBljB,YAAOijB,GAAPjjB,CAAH,MAMbmjB,GAAiBnjB,YAAOijB,GAAPjjB,CAAH,MAGd,gBAAGH,EAAH,EAAGA,WAAH,OACCA,IAAeZ,GAAYE,IAAMU,IAAeZ,GAAYC,KAA7D,iCAOAkkB,GAAiBpjB,YAAOkjB,GAAPljB,CAAH,MAEd,qBAAGH,aACYZ,GAAYC,IAA3B,8EAQAmkB,GAAWrjB,YAAOijB,GAAPjjB,CAAH,MAER,gBAAGH,EAAH,EAAGA,WAAH,OACDA,IAAeZ,GAAYE,IAAMU,IAAeZ,GAAYC,KAA7D,yCAOEokB,GAAetjB,YAAOqjB,GAAPrjB,CAAH,MAGZ,gBAAGH,EAAH,EAAGA,WAAH,OACCA,IAAeZ,GAAYE,IAAMU,IAAeZ,GAAYC,KAA7D,iCAOAqkB,GAAgBvjB,YAAOqjB,GAAPrjB,CAAH,MAGb,gBAAGH,EAAH,EAAGA,WAAH,OACCA,IAAeZ,GAAYE,IAAMU,IAAeZ,GAAYC,KAA7D,iCAOAyQ,GAAoB3P,YAAOG,IAAPH,CAAH,KAEJ5M,EAAUyD,aACZzD,EAAU6D,uBAEd,SAAAyD,GAAK,OAAIA,EAAMC,MAAMgB,iBAC5B,qBAAGkE,aACYZ,GAAYC,IAA3B,+BACe9L,EAAU8D,sBADzB,uBASA0Y,GAAiB5P,YAAOG,IAAPH,CAAH,KAED5M,EAAUyD,aACZzD,EAAUkE,2BAEd,SAAAoD,GAAK,OAAIA,EAAMC,MAAMiB,oBAI5B4nB,GAAUxjB,IAAOyjB,EAAV,MAEA,SAAA/oB,GAAK,OAAIA,EAAMC,MAAMkB,qBAS5B6nB,GAAa1jB,IAAOsiB,IAAV,MAOVqB,GAAkB3jB,YAAO4jB,KAAP5jB,CAAH,KAOF5M,EAAUyD,aACZzD,EAAUoE,2BAGT,SAAAkD,GAAK,OAAIA,EAAMC,MAAMY,6BAC1B,SAAAb,GAAK,OAAIA,EAAMC,MAAMa,uBAEd,SAAAd,GAAK,OAAIA,EAAMC,MAAMc,kCAC1B,SAAAf,GAAK,OAAIA,EAAMC,MAAMe,4BAK9BmoB,GAAiB7jB,YAAO8jB,KAAP9jB,CAAH,MAMd+jB,GAAY/jB,IAAOgkB,KAAV,MAEF,SAAAtpB,GAAK,OAAIA,EAAMC,MAAMkB,qBAI5BooB,GAAejkB,YAAOkkB,KAAPlkB,CAAH,KAQC5M,EAAUyD,aACZzD,EAAUoE,2BAET,SAAAkD,GAAK,OAAIA,EAAMC,MAAMY,6BAC1B,SAAAb,GAAK,OAAIA,EAAMC,MAAMa,uBAGd,SAAAd,GAAK,OAAIA,EAAMC,MAAMc,kCAC1B,SAAAf,GAAK,OAAIA,EAAMC,MAAMe,4BAK9ByoB,GAAgBnkB,YAAOsH,KAAPtH,CAAH,MAMbokB,GAAepkB,YAAOC,IAAPD,CAAH,MAEA,SAAAtF,GAAK,OAAIA,EAAMC,MAAMO,+BACjC,gBAAG2E,EAAH,EAAGA,WAAH,OACCA,IAAeZ,GAAYE,IAAMU,IAAeZ,GAAYC,KAA7D,gEAQAmlB,GAAsBrkB,YAAOihB,GAAPjhB,CAAH,KAEP5M,EAAUyG,gCAAgC,EAAI,MAO1DyqB,G,uKAsBF,OACE,6BACGvmB,KAAKwmB,YACLxmB,KAAKymB,oBACLzmB,KAAK0mB,uBACL1mB,KAAK2mB,sBACL3mB,KAAK4mB,yBACL5mB,KAAK6mB,sB,kCAWX,IACS/kB,EAAe9B,KAAKrD,MAApBmF,WAER,OACE,kBAAC+iB,GAAD,CAAethB,UAAW,GACxB,kBAAC,IAAD,CAAMqC,QAAS,MACb,kBAAC,YAAD,CAAUkhB,QAASC,KAAgBC,WAAW,SAASC,aAAc,CAAClV,UAAW,UAAW8L,SAAU,KACpG,kBAACiH,GAAD,CAAc7e,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,aAAatE,WAAYA,GAC9F,kBAACkE,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAACgb,GAAD,CAAoBjjB,WAAYA,GAAhC,mD,0CAiBb,IAAD,EACsC9B,KAAKrD,MAAjCmF,EADV,EACUA,WAAYolB,EADtB,EACsBA,YAEpB,OACE,kBAAClC,GAAD,CAAoB/e,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,SAAStE,WAAYA,GACpG,kBAACujB,GAAD,CAAgBtb,MAAI,EAACjI,WAAYA,GAC/B,kBAACkE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D,kBAAC,GAAD,CACE3C,MAAOzD,KAAKmnB,mBACZD,YAAaA,EACb7L,YAAY,MAIlB,kBAACmK,GAAD,CAAezb,MAAI,EAACjI,WAAYA,GAC9B,kBAAC,IAAD,CAAMyJ,QAAM,EAAC3F,QAAS,KACpB,kBAAC,GAAD,CAAmB9D,WAAYA,GAA/B,WAGA,6BACA,kBAAC,GAAD,KACG,sEACA,8DACA,mFACA,uC,6CAcZ,IACSA,EAAe9B,KAAKrD,MAApBmF,WAER,OACE,kBAACmjB,GAAD,CAAsBhf,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,SAAStE,WAAYA,GACtG,kBAACyjB,GAAD,CAAcxb,MAAI,EAACjI,WAAYA,GAC7B,kBAAC,IAAD,CAAMyJ,QAAM,EAAC3F,QAAS,KACpB,kBAAC,GAAD,CAAmB9D,WAAYA,GAA/B,8BAGA,6BACA,kBAAC,GAAD,KACG,2DACD,kBAAC2jB,GAAD,CAASrB,KAAM/uB,EAAUoB,uBAAwBihB,OAAO,SAAS2M,IAAI,uBAArE,eACC,wDAEH,6BACA,kBAAC,GAAD,KACG,oFACA,mFACA,qEAIP,kBAACe,GAAD,CAAgBrb,MAAI,EAACjI,WAAYA,GAC/B,kBAACkE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D,kBAAC,KAAD,CAAMiF,OAAK,EAACzF,QAAS,KACnB,kBAAC+f,GAAD,CACElC,IAAK2D,KACL9C,IAAI,e,4CAejB,IAAD,EACsCtkB,KAAKrD,MAAjCmF,EADV,EACUA,WAEFlF,EAHR,EACsBsqB,YAEQ,OAAS,QACrC,OACE,kBAAClC,GAAD,CAAoB/e,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,SAAStE,WAAYA,GACpG,kBAACqjB,GAAD,CAAepb,MAAI,EAACjI,WAAYA,GAC9B,kBAAC,IAAD,CAAM8D,QAAS,KAEb,kBAACygB,GAAD,CAAc9iB,UAAW,EAAGzB,WAAYA,GACtC,kBAAC,KAAD,CACEulB,WAAW,UACXC,WAAW,WACX1qB,MAAOA,EACP2qB,QAAS,CAACniB,OAAQ,KAMlBzB,IAAK/G,EACL4qB,UAAQ,EACR7I,aAAW,OAKnB,kBAAC6G,GAAD,CAAezb,MAAI,EAACjI,WAAYA,GAC9B,kBAAC,IAAD,CAAMyJ,QAAM,EAAC3F,QAAS,KACpB,kBAAC,GAAD,CAAmB9D,WAAYA,GAA/B,aAGA,6BACA,kBAAC,GAAD,KACG,UACD,kBAAC2jB,GAAD,CAASrB,KAAM/uB,EAAUsB,gCAAiC+gB,OAAO,SAAS2M,IAAI,uBAA9E,aACC,uDAEH,6BACA,kBAAC,GAAD,KACG,mCACD,kBAACoB,GAAD,CAASrB,KAAM/uB,EAAUiB,uCAAwCohB,OAAO,SAAS2M,IAAI,uBAArF,UACC,eACD,kBAACoB,GAAD,CAASrB,KAAM/uB,EAAUkB,oCAAqCmhB,OAAO,SAAS2M,IAAI,uBAAlF,QACC,KAEDhvB,EAAU4G,eACV,kBAAC,WAAD,MACA,kBAAC,WAAD,KACE,6BACA,kBAAC,GAAD,KACG,iFACA,yFAGH,0BAAMwrB,OAAO,wGAA4GC,OAAO,OAAOlc,GAAG,6BAA6Bmc,KAAK,6BAA6B/d,UAAU,WAAW8N,OAAO,SAAS2M,IAAI,sBAAsBuD,YAAU,GAEhR,yBAAKniB,MAAO,CAAE+Z,SAAU,WAAYlU,KAAM,WAAauc,cAAY,QACjE,2BAAO5Z,KAAK,OAAO0Z,KAAK,yCAAyCG,SAAS,KAAKC,aAAa,MAE9F,yBAAKne,UAAU,SACb,kBAACgc,GAAD,CAAiB3X,KAAK,UACpB,kBAAC6X,GAAD,MADF,iC,+CAqBjB,IACShkB,EAAe9B,KAAKrD,MAApBmF,WAER,OACE,kBAACmjB,GAAD,CAAsBhf,WAAS,EAC7BC,UAAU,MACVC,QAAQ,gBACRC,WAAW,SACXtE,WAAYA,GAEZ,kBAACyjB,GAAD,CAAcxb,MAAI,EAACjI,WAAYA,GAC7B,kBAAC,IAAD,CAAMyJ,QAAM,EAAC3F,QAAS,KACpB,kBAAC,GAAD,CAAmB9D,WAAYA,GAA/B,gBAGA,6BACA,kBAAC,GAAD,KACG,0DACD,kBAACkkB,GAAD,eACC,OACD,kBAACP,GAAD,CAASrB,KAAM/uB,EAAUmB,iBAAkBkhB,OAAO,SAAS2M,IAAI,uBAA/D,aACC,KACD,kBAACoB,GAAD,CAASrB,KAAM/uB,EAAUqB,gBAAiBghB,OAAO,SAAS2M,IAAI,uBAA9D,iBACC,6BACD,kBAACoB,GAAD,CAASrB,KAAM/uB,EAAUgB,wBAAyBqhB,OAAO,SAAS2M,IAAI,uBAAtE,gBACC,KAEDhvB,EAAU4G,eACV,kBAAC,WAAD,MACA,kBAAC,WAAD,KACE,6BACA,kBAAC,GAAD,KACG,mFACA,sCAEH,kBAACiqB,GAAD,CAAc8B,WAAY3yB,EAAU0G,sBAClC,kBAACiK,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,aAAaC,WAAW,UAC9D,kBAACJ,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAACqc,GAAD,KACE,0BAAMpc,EAAG3U,EAAUgG,0BAGvB,kBAAC2K,EAAA,EAAD,CAAM+D,MAAI,GAAV,2BASZ,kBAACqb,GAAD,CAAgBrb,MAAI,EAACjI,WAAYA,GAC/B,kBAACkE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D,kBAAC,KAAD,CAAYiF,OAAK,EAACzF,QAAS,KACzB,kBAAC+f,GAAD,CACElC,IAAKwE,KACL3D,IAAI,yB,yCAcC,IAoEb4D,EApEa,EAEmBloB,KAAKrD,MAAjCmF,EAFS,EAETA,WAAYolB,EAFH,EAEGA,YAIdiB,EAA0D,IAA5C9yB,EAAUyG,gCACxBssB,EAAqE,IAA5C/yB,EAAUyG,gCACnCusB,EAAmBhzB,EAAUyG,gCAC7BwsB,EAA2D,GAA5CjzB,EAAUyG,gCACzBysB,EAAelzB,EAAUyG,gCACzB0sB,EAA4D,IAA5CnzB,EAAUyG,gCAC1B2sB,EAAepzB,EAAUyG,gCACzB4sB,EAA0D,IAA5CrzB,EAAUyG,gCAGxBynB,EAAa,CACjB,CACEE,IAAKkF,KACLvjB,OAAQ+iB,EACR7D,IAAK,aACLF,KAAM/uB,EAAUc,iBAElB,CACEstB,IAAKyD,EAAc0B,KAA2BC,KAC9CzjB,OAAQgjB,EACR9D,IAAK,yBACLF,KAAM/uB,EAAUe,6BAElB,CACEqtB,IAAKqF,KACL1jB,OAAQijB,EACR/D,IAAK,mBACLF,KAAM/uB,EAAUW,uBAElB,CACEytB,IAAKyD,EAAc6B,KAAiBC,KACpC5jB,OAAQkjB,EACRhE,IAAK,cACLF,KAAM/uB,EAAUQ,kBAElB,CACE4tB,IAAKyD,EAAc+B,KAAiBC,KACpC9jB,OAAQmjB,EACRjE,IAAK,cACLF,KAAM/uB,EAAUO,kBAElB,CACE6tB,IAAK0F,KACL/jB,OAAQojB,EACRlE,IAAK,eACLF,KAAM/uB,EAAUS,mBAElB,CACE2tB,IAAKyD,EAAckC,KAAiBC,KACpCjkB,OAAQqjB,EACRnE,IAAK,cACLF,KAAM/uB,EAAUa,kBAElB,CACEutB,IAAK6F,KACLlkB,OAAQsjB,EACRpE,IAAK,aACLF,KAAM/uB,EAAUY,mBAMpB,OAAQ6L,GACN,KAAKZ,GAAYC,GACf+mB,EAAe,EACf,MACF,KAAKhnB,GAAYE,GACf8mB,EAAe,EACf,MACF,QACEA,EAAe,EAInB,OACE,kBAAClD,GAAD,CAAoB/e,WAAS,EAC3BC,UAAU,SACVC,QAAQ,aACRC,WAAW,UACXtE,WAAYA,GAEZ,kBAACkE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D,kBAACJ,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAAC,IAAD,CAAMwB,QAAM,EAAC3F,QAAS,KACpB,kBAAC,GAAD,CAAmB9D,WAAYA,GAA/B,yBAIN,kBAACkE,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAACuc,GAAD,CACE/C,WAAYA,EACZK,OAAQsE,EACRxE,WAAY5hB,IAAeZ,GAAYC,GAAK,SAAW,gBACvDwiB,kBAAmBtuB,EAAUyG,gCAAkC,Q,yCAYrD,IAId2H,EAJa,EAC2BzD,KAAKrD,MAAzCmF,EADS,EACTA,WAAYL,EADH,EACGA,oBACd8nB,EAAgBzpB,OAAO0pB,YAAc/nB,EAAsBpM,EAAUoF,aAAe,GAG1F,OAAQqH,GACN,KAAKZ,GAAYC,GACfsC,EAAQ8lB,EAA8C,EAA/Bl0B,EAAUiG,qBACjC,MACF,KAAK4F,GAAYE,GACfqC,EAAQ8lB,EAA8C,EAA/Bl0B,EAAUkG,qBACjC,MACF,KAAK2F,GAAYG,GACfoC,EAAqB,GAAb8lB,EAAkD,EAA/Bl0B,EAAUmG,qBAAuB,EAG5DiI,GAAS,IACT,MACF,QACEA,EAAqB,GAAb8lB,EAAkD,EAA/Bl0B,EAAUoG,qBAAuB,EAC5DgI,GAAS,IAGb,OAAOA,M,GAnbarD,GAAlBmmB,GACGlX,UAAY,CAIjBvN,WAAYwN,IAAUC,OAAOC,WAI7B/N,oBAAqB6N,IAAUI,KAAKF,WAIpC0X,YAAa5X,IAAUI,KAAKF,YA0ajB+W,U,+KCvvBf,IAQekD,GARYnjB,KAAH,M,iWCOxB,IAAMsL,GAAoB3P,YAAOG,IAAPH,CAAH,KAEJ5M,EAAUyD,aACZzD,EAAU6D,uBAEd,SAAAyD,GAAK,OAAIA,EAAMC,MAAMgB,iBAC5B,qBAAGkE,aACYZ,GAAYC,IAA3B,+BACe9L,EAAU8D,sBADzB,uBAOA0Y,GAAiB5P,YAAOG,IAAPH,CAAH,KAED5M,EAAUyD,aACZzD,EAAUkE,2BAEd,SAAAoD,GAAK,OAAIA,EAAMC,MAAMiB,oBAO5B6rB,G,uKAaM,IACA5nB,EAAe9B,KAAKrD,MAApBmF,WACA8E,EAAU5G,KAAKrD,MAAM2b,MAAMC,OAA3B3R,MACR,OACE,yBAAKnB,MAAO,CAAEsM,UAAW,OAAQC,WAAY,SAC3C,kBAAC,GAAD,CAAmBlQ,WAAYA,GAA/B,UACA,kBAAC,IAAD,CAAO8E,MAAO6iB,GAAoB5iB,UAAW,CAAED,WAC5C,YAA+B,IAA5BK,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClB,OAAIF,EAEA,kBAAC,GAAD,qBAEKC,EAEL,kBAAC,GAAD,sBAEiC,UAA5BC,EAAKwiB,cAAc1b,KAExB,kBAAC,IAAD,CAAU9J,GAAI,CAAE3D,SAAS,UAAD,OAAYoG,MAEH,gBAA5BO,EAAKwiB,cAAc1b,KAExB,kBAAC,IAAD,CAAU9J,GAAI,CAAE3D,SAAS,OAAD,OAASoG,MAIjC,kBAAC,GAAD,yD,GAvCSxG,GAAnBspB,GACGra,UAAY,CAIjBiJ,MAAOhJ,IAAUK,OAAOH,YA2Cbka,U,udCjFf,IAQeE,GARiBtjB,KAAH,M,27ICwC7B,IAAMujB,GAAe5nB,YAAO6nB,KAAP7nB,CAAH,MAEA,SAAAtF,GAAK,OAAIA,EAAMC,MAAMQ,wBAExB+X,KAAO4U,OAAS,GAIzBC,GAAe/nB,YAAO6nB,KAAP7nB,CAAH,KAIHkT,KAAO4U,OAAS,GAIzB9X,GAAgBhQ,YAAOiQ,KAAPjQ,CAAH,MAIb,qBAAGH,aACYZ,GAAYC,IAA3B,uEAQA8oB,GAAgBhoB,YAAOiQ,KAAPjQ,CAAH,MAMb,qBAAGH,aACYZ,GAAYC,IAA3B,gIAUA+oB,GAAiBjoB,IAAOsiB,IAAV,MAGd,qBAAGziB,aACYZ,GAAYC,IAA3B,yCASAgpB,GAAoBloB,YAAOG,IAAPH,CAAH,MAOjB,qBAAGH,aACYZ,GAAYC,IAA3B,wCAOAipB,GAAkBnoB,YAAOkoB,GAAPloB,CAAH,MAIR,SAAAtF,GAAK,OAAIA,EAAMC,MAAMU,uBAC5B,qBAAGwE,aACYZ,GAAYC,IAA3B,2EAaAkpB,GAAmBpoB,IAAOiT,IAAV,MAIF,SAAAvY,GAAK,MAAI,aAAeA,EAAMC,MAAMU,uBAClD,qBAAGwE,aACYZ,GAAYC,IAA3B,uCAOAmpB,GAAqBroB,YAAOkoB,GAAPloB,CAAH,MAIX,SAAAtF,GAAK,OAAIA,EAAMC,MAAMW,2BAC5B,qBAAGuE,aACYZ,GAAYC,IAA3B,4EAQAopB,GAActoB,YAAOuoB,KAAPvoB,CAAH,MAQJ,SAAAtF,GAAK,OAAIA,EAAMC,MAAMwC,kBACf/J,EAAUyD,aACZzD,EAAU+D,uBACrB,gBAAG0I,EAAH,EAAGA,WAAH,OACCA,IAAeZ,GAAYE,IAA3B,kLAIc/L,EAAUmE,0BAJxB,cAMAsI,IAAeZ,GAAYC,IAA3B,8DAEc9L,EAAUmE,0BAFxB,gBAWDixB,GAAaxoB,YAAOyoB,KAAPzoB,CAAH,KAKG5M,EAAUyD,aACZzD,EAAUkE,2BACb,SAAAoD,GAAK,OAAIA,EAAMC,MAAMwC,mBAC7B,gBAAG0C,EAAH,EAAGA,WAAH,OACCA,IAAeZ,GAAYE,IAA3B,+BACc/L,EAAUmE,0BADxB,cAGAsI,IAAeZ,GAAYC,IAA3B,olBAmBDwpB,GAAiB1oB,YAAO2oB,KAAP3oB,CAAH,MAKF,SAAAtF,GAAK,OAAIA,EAAMkuB,YAAcx1B,EAAUwD,oBAAsB,aAOzEiyB,GAAqB7oB,YAAO8oB,KAAP9oB,CAAH,MAGlB,gBAAGH,EAAH,EAAGA,WAAH,OACCA,IAAeZ,GAAYE,GAA3B,qCAGAU,IAAeZ,GAAYC,IAA3B,wCAUD6pB,GAAuB/oB,YAAOgpB,KAAPhpB,CAAH,MAEb,SAAAtF,GAAK,OAAIA,EAAMC,MAAMyC,kBAErBhK,EAAUkE,0BACTlE,EAAUkE,2BAMlB,gBAAGuI,EAAH,EAAGA,WAAH,OACCA,IAAeZ,GAAYE,IAA3B,2BACU/L,EAAUmE,0BADpB,8BAEWnE,EAAUmE,0BAFrB,cAIAsI,IAAeZ,GAAYC,IAA3B,6JAUD4R,GAAmB9Q,YAAO+Q,KAAP/Q,CAAH,MAET,SAAAtF,GAAK,OAAIA,EAAMC,MAAMS,yBAGd,SAAAV,GAAK,OAAIsW,gBAAKtW,EAAMC,MAAMkC,qBAAsBnC,EAAMC,MAAM2C,uBACjE,SAAA5C,GAAK,OAAIA,EAAMC,MAAMkC,wBAInB,SAAAnC,GAAK,OAAIA,EAAMC,MAAMS,yBAMhC6tB,GAAiBjpB,YAAOkpB,KAAPlpB,CAAH,MAOdmpB,GAAmBnpB,YAAOgpB,KAAPhpB,CAAH,MAIhB,qBAAGH,aACYZ,GAAYC,IAA3B,2DAQAkqB,GAAkBppB,YAAOqpB,KAAPrpB,CAAH,MAIf,qBAAGH,aACYZ,GAAYC,IAA3B,2DAQAoqB,GAAwBtpB,aAAO,gBAAMsQ,EAAN,2BACnC,kBAACiZ,GAAA,EAAD,iBAAqBjZ,EAArB,CAA4BE,QAAS,CAAEgZ,MAAO,cADlBxpB,CAAH,KAId5M,EAAUoF,aAAe,MACpB,SAAAkC,GAAK,OAAIA,EAAMC,MAAMsB,yBAIjCwtB,GAAezpB,aAAO,gBAAMsQ,EAAN,2BAC1B,kBAACoZ,GAAA,EAAD,iBAAYpZ,EAAZ,CAAmBE,QAAS,CAAEgZ,MAAO,cADlBxpB,CAAH,KAIL5M,EAAUoF,aAAe,MACpB,SAAAkC,GAAK,OAAIA,EAAMC,MAAMsB,yBAE/B,SAAAvB,GAAK,OAAIA,EAAMC,MAAMG,OAAZ,oBAAkCJ,EAAMC,MAAMC,qBAAwB,SAIjF+uB,GAAgB3pB,YAAO4pB,KAAP5pB,CAAH,MAED,SAAAtF,GAAK,OAAIA,EAAMC,MAAMuB,sBAIjC2tB,GAAqB7pB,YAAO8oB,KAAP9oB,CAAH,MAElB8pB,GAAqB9pB,aAAO,gBAAMsQ,EAAN,2BAChC,kBAACyZ,GAAA,EAAD,iBAAkBzZ,EAAlB,CAAyBE,QAAS,CAAEwZ,QAAS,gBADpBhqB,CAAH,MAIlBiqB,GAAiBjqB,YAAO2oB,KAAP3oB,CAAH,KAId6pB,IAGE,SAAAnvB,GAAK,OAAIA,EAAMwvB,SACbxvB,EAAMC,MAAMyB,4BACZ1B,EAAMC,MAAMwB,kBAGhB2tB,GAGiB12B,EAAUyD,aACZzD,EAAUoE,2BACR,SAAAkD,GAAK,OAAIA,EAAMwvB,SAAW,IAAM,OAE7C,SAAAxvB,GAAK,OAAIA,EAAMwvB,SACbxvB,EAAMC,MAAMyB,4BACZ1B,EAAMC,MAAM0B,mBAoClB8tB,G,kDAoCJ,aAAe,IAAD,8BACZ,gBAEK5mB,MAAQ,CACX6mB,YAAY,EACZC,YAAa,IAGf,EAAKC,cAAgBC,IAAMC,YAE3B,EAAKC,2BAA6B,EAGlC,EAAKC,kBAAoB,EAAKA,kBAAkBhtB,KAAvB,gBACzB,EAAKitB,iBAAmB,EAAKA,iBAAiBjtB,KAAtB,gBACxB,EAAKktB,2BAA6B,EAAKA,2BAA2BltB,KAAhC,gBAClC,EAAKmtB,sBAAwB,EAAKA,sBAAsBntB,KAA3B,gBAC7B,EAAKotB,mBAAqB,EAAKA,mBAAmBptB,KAAxB,gBAC1B,EAAKqtB,cAAgB,EAAKA,cAAcrtB,KAAnB,gBAlBT,E,qDA0BJ,IACA0sB,EAAersB,KAAKwF,MAApB6mB,WACR,OACE,kBAAC,WAAD,KAEE,yBAAKpQ,IAAKjc,KAAKusB,eACb,kBAACra,GAAA,EAAD,OAEF,kBAAC,IAAD,CAAMvM,GAAI0mB,EAAYzmB,QAAS,IAAKwR,cAAY,EAACC,eAAa,GAC5D,kBAAC2S,GAAD,CAAczmB,UAAW,GACtBvD,KAAKitB,4BAGV,kBAAC,IAAD,CAAMtnB,IAAK0mB,EAAYzmB,QAAS,IAAKwR,cAAY,EAACC,eAAa,GAC7D,kBAACwS,GAAD,CAActmB,UAAW,GACtBvD,KAAKktB,6BAGTltB,KAAKmtB,e,0CAUV,0EAGIntB,KAAKrD,MAAMywB,oBACbptB,KAAKrD,MAAMywB,mBAAmBptB,KAAKusB,cAAcc,QAAQC,gB,2CAQ3D,2EAGIttB,KAAKrD,MAAMywB,oBACbptB,KAAKrD,MAAMywB,mBAAmBptB,KAAKusB,cAAcc,QAAQC,cAIvDzrB,MAAyB7B,KAAKrD,MAAM4wB,oBACtCvtB,KAAKrD,MAAM6wB,gC,gDAQY,IAAD,OAClB1rB,EAAaN,KACnB,OACE,kBAACyoB,GAAD,CAAewD,QAAQ,QAAQ3rB,WAAYA,GACzC,kBAACkE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,aAAa0D,KAAK,UACnF,kBAAC9D,EAAA,EAAD,CAAM+D,MAAI,EAACtE,MAAO,CAAEioB,SAAU,MAC5B,kBAAC,KAAD,CACEC,cAAe3tB,KAAK6sB,2BACpBrY,SAAUxU,KAAK8sB,sBACfc,aAAc5tB,KAAKwF,MAAM8mB,cAExB,gBACCuB,EADD,EACCA,cACAC,EAFD,EAECA,aACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,OACAC,EALD,EAKCA,WACAC,EAND,EAMCA,iBAND,OAQC,6BACE,0BAAMC,SAAU,EAAKpB,oBACnB,kBAACxC,GAAD,iBACMsD,EAAc,CAChBO,WAAW,EACXC,kBAAkB,EAClBC,WAAW,EACXC,YAAa,8CALjB,CAOEzsB,WAAYA,MAGhB,kBAAC,IAAD,CACE8E,MAAOgjB,GACP/iB,UAAW,CAAED,MAAOqnB,EAAYnnB,MAAO,EAAK4lB,8BAE3C,YAA+B,IAA5BzlB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClB,OAAIF,GAAWC,IAAUC,EAAKqnB,qBAAuBR,EAC5C,kBAACvD,GAAD,CAAY3oB,WAAYA,IAE/B,kBAAC2oB,GAAD,iBAAgBsD,IAAhB,CAAgCjsB,WAAYA,IACzCqF,EAAKqnB,mBAAmBzpB,MAAMvB,KAAI,SAACuG,EAAMrG,GAAP,OACjC,kBAACinB,GAAD,eACE8D,gBAAc,EAGd5D,YAAaqD,IAAqBxqB,EAAQ,EAAI,GAC1CoqB,EAAa,CACfnqB,IAAKoG,EACLrG,QACAqG,UAGF,kBAAC+gB,GAAD,CAAoBhpB,WAAYA,GAC9B,kBAACkpB,GAAD,CAAsBlpB,WAAYA,KAEnCiI,eAWrB,kBAAC/D,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAAC2kB,GAAA,EAAD,CAAM/oB,IAAI,EAAMC,QAAS,KACvB,kBAACoN,GAAA,EAAD,CAAYQ,QAASxT,KAAK4sB,kBACxB,kBAACvB,GAAD,CAAiBvpB,WAAYA,W,iDAezC,IAAMA,EAAaN,KACnB,OACE,kBAAC,GAAD,CAAeM,WAAYA,GACzB,kBAACkE,EAAA,EAAD,CAAMC,WAAS,EAACG,WAAW,SAAS0D,KAAK,UACvC,kBAAC9D,EAAA,EAAD,CAAM+D,MAAI,GACP/J,KAAK2uB,iBAEP3uB,KAAK4uB,cACN,kBAAC5oB,EAAA,EAAD,CAAMC,WAAS,EAACG,WAAW,SAASD,QAAQ,WAAW2D,KAAK,UAC1D,kBAAC9D,EAAA,EAAD,CAAM+D,MAAI,GACP/J,KAAK6uB,wB,sCAaD,IAAD,EACwD7uB,KAAKrD,MAAnE6wB,EADM,EACNA,4BAA6BsB,EADvB,EACuBA,6BACrC,OACE,kBAACJ,GAAA,EAAD,CAAM/oB,IAAI,EAAMC,QAAS,KACvB,kBAAC,GAAD,CACE4N,QACE3R,KAAwBitB,EAA+BtB,GAGzD,kBAACtC,GAAD,U,oCAYN,IAAMppB,EAAaN,KACnB,OACE,kBAAC,IAAD,CACEiE,MAAO,CAAEspB,eAAgB,QACzB5qB,GAAG,KAEH,kBAAC6B,EAAA,EAAD,CAAMC,WAAS,EAACG,WAAW,SAASD,QAAQ,aAAa2D,KAAK,UAC5D,kBAAC,IAAD,CAAYlE,QAAS,KACnB,kBAACI,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAACmgB,GAAD,CACEzG,IAAK2D,KACLhiB,OAAQpF,KAAKgvB,uBACb1K,IAAI,OACJxiB,WAAYA,KAIhB,kBAACkE,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAACqgB,GAAD,CAAiBtoB,WAAYA,GAA7B,UAEF,kBAAC,KAAD,CAAY8D,QAAS,KACnB,kBAACI,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAACsgB,GAAD,CAAkBvoB,WAAYA,MAGlC,kBAACkE,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAACugB,GAAD,CAAoBxoB,WAAYA,GAAhC,kB,6CAcV,O/C1nBG,SAAmCA,GACxC,OAAQA,GACN,KAAKZ,GAAYC,GACf,OAAOrB,OAAO6B,WAAW,eAAiBtM,EAAU2E,kBAAoB,OAAO4H,QACjF,KAAKV,GAAYE,GACf,OAAOtB,OAAO6B,WAAW,eAAiBtM,EAAU6E,kBAAoB,OAAO0H,QACjF,KAAKV,GAAYG,GACf,OAAOvB,OAAO6B,WAAW,eAAiBtM,EAAU+E,kBAAoB,OAAOwH,QACjF,KAAKV,GAAYI,GACf,OAAOxB,OAAO6B,WAAW,eAAiBtM,EAAUiF,kBAAoB,OAAOsH,QACjF,KAAKV,GAAYK,GACjB,QACE,OAAOzB,OAAO6B,WAAW,eAAiBtM,EAAU45B,kBAAoB,OAAOrtB,S+C8mB7EstB,CAA0BhuB,GAAYC,IACjC,KAEA,K,kCAYT,OAAIU,KAEA,kBAAC6pB,GAAD,CAAc+B,QAAQ,aAAa0B,KAAMnvB,KAAKrD,MAAM8E,qBACjDzB,KAAKovB,oBAMR,kBAAC7D,GAAD,CACE4D,KAAMnvB,KAAKrD,MAAM4wB,mBACjB8B,OAAQrvB,KAAKrD,MAAM6wB,4BACnB8B,QAAStvB,KAAKrD,MAAM6wB,6BAEpB,yBAAKha,QAASxT,KAAKrD,MAAM6wB,6BACtBxtB,KAAKovB,uB,yCAcd,OACE,kBAAC,WAAD,KAEE,kBAACld,GAAA,EAAD,MACA,kBAACwY,GAAA,EAAD,KAKE,kBAACwB,GAAD,CAAgBqD,QAAM,EAACC,UAAW1sB,IAAMqB,GAAG,IAAIgoB,SAAUnsB,KAAKgtB,cAAc,MAC1E,kBAAClB,GAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAD,CAAoBE,QAAQ,OAAOE,SAAUnsB,KAAKgtB,cAAc,QAElE,kBAACpB,GAAD,MACA,kBAACM,GAAD,CAAgBqD,QAAM,EAACC,UAAW1sB,IAAMqB,GAAG,UAAUgoB,SAAUnsB,KAAKgtB,cAAc,YAChF,kBAAClB,GAAD,KACE,kBAACviB,GAAA,EAAD,KACE,0BAAMS,EAAG3U,EAAU2F,wBAGvB,kBAAC+wB,GAAD,CAAoBE,QAAQ,SAASE,SAAUnsB,KAAKgtB,cAAc,cAEpE,kBAACd,GAAD,CAAgBqD,QAAM,EAACC,UAAW1sB,IAAMqB,GAAG,OAAOgoB,SAAUnsB,KAAKgtB,cAAc,SAC7E,kBAAClB,GAAD,KACE,kBAACviB,GAAA,EAAD,KACE,0BAAMS,EAAG3U,EAAUwF,sBAGvB,kBAACkxB,GAAD,CAAoBE,QAAQ,kBAE9B,kBAACC,GAAD,CAAgBqD,QAAM,EAACC,UAAW1sB,IAAMqB,GAAG,YAAYgoB,SAAUnsB,KAAKgtB,cAAc,cAClF,kBAAClB,GAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAD,CAAoBE,QAAQ,cAE9B,kBAACL,GAAD,MACA,kBAACM,GAAD,CAAgBqD,QAAM,EAACC,UAAW1sB,IAAMqB,GAAG,SAASgoB,SAAUnsB,KAAKgtB,cAAc,WAC/E,kBAAClB,GAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAD,CAAoBE,QAAQ,e,wCAapC,IAAMnqB,EAAaN,KACnB,OACE,kBAACktB,GAAA,EAAD,CAAM/oB,IAAI,EAAMC,QAAS,KACvB,kBAAC,GAAD,CAAkB4N,QAASxT,KAAK2sB,mBAC9B,kBAACvB,GAAD,CAAkBtpB,WAAYA,Q,0CAWpC9B,KAAK2R,SAAS,CACZ0a,YAAY,M,yCASdrsB,KAAK2R,SAAS,CACZ0a,YAAY,M,iDASWoD,GAAU,IAC3BxB,EAAewB,EAAfxB,WACJA,GACFjuB,KAAK2R,SAAS,CACZ2a,YAAa2B,M,4CAUGL,GACpB5tB,KAAK0vB,cAAc9B,K,yCAQFna,GACjBA,EAAMkc,iBACN3vB,KAAK0vB,cAAc1vB,KAAKwF,MAAM8mB,e,oCAQlBA,GACZtsB,KAAK2R,SAAS,CACZ0a,YAAY,EACZC,YAAa,KAEXtsB,KAAKrD,MAAMizB,WACb5vB,KAAKrD,MAAMizB,UAAUC,QAAQlT,KAA7B,kBAA6C2P,M,oCASnCwD,GACZ,OAAO9vB,KAAKrD,MAAM4D,SAASC,WAAasvB,M,GAvdrBrwB,GAAjB2sB,GACG/c,UAAY,CAIjB+d,mBAAoB9d,IAAUygB,KAI9BjB,6BAA8Bxf,IAAUygB,KAAKvgB,WAI7Cge,4BAA6Ble,IAAUygB,KAAKvgB,WAI5C/N,oBAAqB6N,IAAUI,KAAKF,WAIpC+d,mBAAoBje,IAAUI,KAAKF,WAInCjP,SAAU+O,IAAUK,OAAOH,WAI3BogB,UAAWtgB,IAAUK,QA8bVqgB,mBAAW5D,I,s4DC32B1B,IAAM6D,GAAgBhuB,YAAOiQ,KAAPjQ,CAAH,KAKL5M,EAAUqF,cAAgB,MAItB,SAAAiC,GAAK,OAAIA,EAAMC,MAAMsC,yBAC1B,SAAAvC,GAAK,OAAIA,EAAMC,MAAMuC,uBAI5B+wB,GAAejuB,YAAO+D,IAAP/D,CAAH,MAMZkuB,GAAgBluB,YAAOiuB,GAAPjuB,CAAH,KAEA5M,EAAUuF,wBAA0B,MACjD,qBAAGkH,aACYZ,GAAYC,IAA3B,iCACiB9L,EAAUsF,iBAAmB,KAD9C,gBAOAy1B,GAAiBnuB,YAAOiuB,GAAPjuB,CAAH,KAEA5M,EAAUuF,wBAA0B,MAClD,qBAAGkH,aACYZ,GAAYC,IAA3B,kCACkB9L,EAAUsF,iBAAmB,KAD/C,gBAOA01B,GAAmBpuB,YAAOG,IAAPH,CAAH,KAEH5M,EAAUyD,cAKvBw3B,GAAUruB,IAAOyjB,EAAV,MAEA,SAAA/oB,GAAK,OAAIA,EAAMC,MAAMuC,uBAQ5BoxB,GAAwBtuB,YAAO+D,IAAP/D,CAAH,MAGrB,qBAAGH,aACYZ,GAAYC,IAA3B,wCAOAqvB,GAAoBvuB,YAAO+Q,KAAP/Q,CAAH,MAGH,SAAAtF,GAAK,OAAIsW,gBAAKtW,EAAMC,MAAMkC,qBAAsBnC,EAAMC,MAAM2C,uBACjE,SAAA5C,GAAK,OAAIA,EAAMC,MAAMkC,wBAU9B2xB,GAAcxuB,YAAOyuB,KAAPzuB,CAAH,MAMX0uB,GAAgB1uB,YAAO2uB,KAAP3uB,CAAH,MAIN,SAAAtF,GAAK,OAAIA,EAAMC,MAAMuC,uBAEd,SAAAxC,GAAK,OAAIsW,gBAAKtW,EAAMC,MAAMkC,qBAAsBnC,EAAMC,MAAM2C,uBACjE,SAAA5C,GAAK,OAAIA,EAAMC,MAAMkC,wBAInB,SAAAnC,GAAK,OAAIA,EAAMC,MAAMuC,uBAMhC0xB,GAAe5uB,YAAOsH,KAAPtH,CAAH,MAUZ6uB,G,kLAqBF,0EAEAC,kBAAQ17B,EAAUK,qBAAsBkP,SAASosB,cAAc,2B,+BAS/D,IAAMlvB,EAAaN,KACnB,OACE,kBAACyuB,GAAD,KACE,kBAACE,GAAD,CACElqB,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,SACXtE,WAAYA,GAEZ,kBAACkE,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAACsmB,GAAD,CAAkBxiB,MAAM,WACrB7N,KAAKixB,sBAIZ,kBAACf,GAAD,CAAcjqB,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,UACrE,kBAACJ,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAACsmB,GAAD,CAAkBxiB,MAAM,WACrB7N,KAAKkxB,qBAGyB,MAAjClxB,KAAKrD,MAAM4D,SAASC,WACnBnL,EAAU4G,gBACX,kBAAC+J,EAAA,EAAD,CAAM+D,MAAI,GACR,kBAACsmB,GAAD,CAAkBxiB,MAAM,WACrB,IACA7N,KAAKmxB,2BACN,kBAACb,GAAD,CAASlM,KAAM/uB,EAAUQ,iBAAkB6hB,OAAO,SAAS2M,IAAI,uBAC5DrkB,KAAKoxB,qBAEP,OAKT,kBAAChB,GAAD,CACEnqB,WAAS,EAACC,UAAU,MACpBC,QAAQ,WACRC,WAAW,SACX0D,KAAK,SACLhI,WAAYA,GAEZ,kBAACyuB,GAAD,CAAuBxmB,MAAI,EAACjI,WAAYA,GACtC,kBAAC0uB,GAAD,CACE3iB,MAAM,UACNuW,KAAM/uB,EAAUsB,gCAChB+gB,OAAO,SACP2M,IAAI,uBAEJ,kBAACoM,GAAD,CAAa7mB,UAAU,oBAG3B,kBAAC2mB,GAAD,CAAuBxmB,MAAI,EAACjI,WAAYA,GACtC,kBAAC0uB,GAAD,CACE3iB,MAAM,UACNuW,KAAM/uB,EAAUiB,uCAChBohB,OAAO,SACP2M,IAAI,uBAEJ,kBAACoM,GAAD,CAAa7mB,UAAU,mBAG3B,kBAAC2mB,GAAD,CAAuBxmB,MAAI,EAACjI,WAAYA,GACtC,kBAAC6uB,GAAD,CACE9iB,MAAM,UACNwjB,QAASrxB,KAAKrD,MAAMuqB,YACpBxU,KACE,kBAACme,GAAD,KACE,0BAAM7mB,EAAG3U,EAAU8F,6BAGvBm2B,YACE,kBAACT,GAAD,KACE,0BAAM7mB,EAAG3U,EAAU+F,4BAGvBoZ,SAAUxU,KAAKrD,MAAM40B,yB,yCAe/B,OADmB/vB,MAEjB,KAAKN,GAAYC,GACf,MAAO,8BACT,KAAKD,GAAYE,GACf,MAAO,2CACT,QACE,MAAO,oE,yCAWX,OADmBI,MAEjB,KAAKN,GAAYC,GACf,MAAO,mBACT,KAAKD,GAAYE,GACf,MAAO,sBACT,QACE,MAAO,iC,iDAWX,OADmBI,MAEjB,KAAKN,GAAYC,GACf,MAAO,2BACT,QACE,MAAO,kD,0CAWX,OADmBK,MAEjB,KAAKN,GAAYC,GACf,MAAO,aACT,QACE,MAAO,sC,GAjLM1B,GAAfqxB,GACGzhB,UAAY,CAIjB6X,YAAa5X,IAAUI,KAAKF,WAI5B+hB,kBAAmBjiB,IAAUygB,KAAKvgB,WAIlCjP,SAAU+O,IAAUK,OAAOH,YAyKhBwgB,mBAAWc,I,UCnTX5X,OAJf,SAAyB/I,EAAOE,GAC9B,OAAOxB,KAAKoK,UAAY5I,EAAMF,GAASA,GCK1B6I,OAJf,SAAsB7I,EAAOE,GAC3B,OAAOxB,KAAKC,MAAMoK,GAAgB/I,EAAOE,EAAM,OC+rBlCmhB,G,WA5rBb,aAAe,oBAEb,IAAMC,EAAY,IAAIxpB,KAChBypB,EAAY,IAAIzpB,KACpBwpB,EAAUE,cACVF,EAAUG,WAAav8B,EAAU6G,iCACjC,GACI2mB,EAAY4O,EAAUI,UAAYH,EAAUG,UAClD7xB,KAAKsR,YAAczC,KAAKC,MAAM+T,EAAYxtB,EAAU+G,sBAGpD4D,KAAKsH,OAAS,GACdtH,KAAK8xB,kBAAoB,IAAIC,IAC7B/xB,KAAK+I,aAAe,GACpB/I,KAAKgyB,sBAAwB,IAAID,IACjC/xB,KAAKiyB,oBAAsB,CACzB,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,QACFjyB,KAAKkyB,OAAS,CACZ,WAAY,YAAa,YAAa,YAAa,YAAa,YAAa,YAC7E,WAAY,YAAa,YAAa,YAAa,YAAa,WAAY,YAC5E,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAC9E,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAC9E,WAAY,YAAa,YAAa,YAAa,YAAa,YAAa,YAC7E,WAAY,YAAa,YAAa,YAAa,YAAa,YAAa,YAC7E,YAAa,WAAY,YAAa,YAAa,YAAa,YAAa,WAC7E,YAAa,YAAa,YAAa,WAAY,YAAa,YAAa,YAC7E,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAC9E,WAAY,YAAa,WAAY,YAAa,YAAa,YAAa,YAC5E,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAC9E,YAAa,YAAa,YAAa,UAAW,YAAa,YAAa,YAC5E,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAC9E,YAAa,YAAa,YAAa,YAAa,YAAa,YAAa,YAC9E,YAAa,aAEflyB,KAAK4K,MAAQ,EAIb,IAAK,IAAI4R,EAAI,EAAGA,EAAInnB,EAAU8G,kBAAmBqgB,IAAK,CAEpD,IAAMxU,EACJ,IAAIC,KAAKA,KAAKkqB,MAAQ98B,EAAU+G,sBAAwB/G,EAAU8G,kBAAoBqgB,IACxFxc,KAAKoyB,SAASpqB,I,+DAgBClB,EAAOurB,GAMxB,OAFAryB,KAAKoyB,SAAS,IAAInqB,MAEL,MAATnB,EACa9G,KAAKsyB,sBAAsBtyB,KAAKsH,OAAQR,EAAO,MAChDtD,KAAI,SAACqE,GACjB,MAAO,CACL2D,GAAI3D,EAAM2D,GACVpG,OAAQyC,EAAMzC,OACd8C,UAAWL,EAAMK,UAAUqqB,cAC3BnqB,gBAAiBP,EAAMkB,aAAatB,WAKjC,K,mDAkCkBqP,EAAOub,EAASxb,EAAMN,EAAOC,EAAQ1P,EAAO4H,GACvE,GAAa,MAAToI,GAAiC,MAAhBA,EAAMC,OAEzB,MAAO,CACLI,UAAW,CACT/D,MAHUpT,KAAKwyB,eAAe1b,EAAMC,QAAU,IASlD,IAOMJ,GANO,MAAT7P,EACO9G,KAAKsyB,sBAAsBtyB,KAAKsH,OAAQR,EAAOyP,GACzC,MAAR7H,EACE1O,KAAKyyB,uBAAuBzyB,KAAKsH,OAAQoH,EAAM8H,GAE/C,IACUhT,KAAI,SAACqE,GACxB,MAAO,CACLC,KAAM,CACJ0D,GAAI3D,EAAM2D,GACVpG,OAAQyC,EAAMzC,OACd8C,UAAWL,EAAMK,UAAUqqB,cAC3BnqB,gBAAiBP,EAAMkB,aAAatB,YAI1C,MAAO,CACLmP,SAAU,CACRd,YAAaa,EAAM,GAAG7O,KAAK0D,GAC3BuK,UAAWY,EAAMA,EAAMlP,OAAS,GAAGK,KAAK0D,IAE1CmL,MAAOA,K,wCAeKvR,GAChB,IAAMyC,EAAQ7H,KAAK8xB,kBAAkBY,IAAIttB,GACzC,QAAcsD,IAAVb,EACF,OAAO,KAEP,IAAMkB,EAAelB,EAAMkB,aAAavF,KAAI,SAACwF,GAC3C,MAAO,CACLwC,GAAIxC,EAAYwC,GAChBhD,KAAMQ,EAAYR,KAClBU,OAAQF,EAAYE,WAGxB,MAAO,CACLsC,GAAI3D,EAAM2D,GACVpG,OAAQyC,EAAMzC,OACd8C,UAAWL,EAAMK,UAAUqqB,cAC3BnqB,gBAAiBW,EAAatB,OAC9BsB,aAAcA,K,+CAiBKjC,EAAOurB,GAC9B,OAAa,MAATvrB,EACmB9G,KAAKsyB,sBAAsBtyB,KAAK+I,aAAcjC,EAAO,MACtDtD,KAAI,SAACwF,GACvB,MAAO,CACLwC,GAAIxC,EAAYwC,GAChBhD,KAAMQ,EAAYR,KAClBU,OAAQF,EAAYE,WAKjB,K,yDAkCwB4N,EAAOub,EAASxb,EAAMN,EAAOC,EAAQ1P,EAAO4H,GAC7E,GAAa,MAAToI,GAAiC,MAAhBA,EAAMC,OAEzB,MAAO,CACLI,UAAW,CACT/D,MAHUpT,KAAKwyB,eAAe1b,EAAMC,QAAU,IASlD,IAOMJ,GANO,MAAT7P,EACa9G,KAAKsyB,sBAAsBtyB,KAAK+I,aAAcjC,EAAOyP,GACrD,MAAR7H,EACQ1O,KAAKyyB,uBAAuBzyB,KAAK+I,aAAc2F,EAAM8H,GAErD,IACUhT,KAAI,SAACwF,GAC9B,MAAO,CACLlB,KAAM,CACJ0D,GAAIxC,EAAYwC,GAChBhD,KAAMQ,EAAYR,KAClBU,OAAQF,EAAYE,YAI1B,MAAO,CACL0N,SAAU,CACRd,YAAaa,EAAM,GAAG7O,KAAK0D,GAC3BuK,UAAWY,EAAMA,EAAMlP,OAAS,GAAGK,KAAK0D,IAE1CmL,MAAOA,K,8CAeWgc,GACtB,IAAMnqB,EAAOxI,KAAK4yB,mBAAmBD,GAC/B3pB,EAAchJ,KAAKgyB,sBAAsBU,IAAIlqB,GACnD,YAAoBE,IAAhBM,EACK,KAEA,CACLwC,GAAIxC,EAAYwC,GAChBhD,KAAMQ,EAAYR,KAClBU,OAAQF,EAAYE,OACpBrB,MAAO,CACL2D,GAAIxC,EAAYnB,MAAM2D,GACtBpG,OAAQ4D,EAAYnB,MAAMzC,W,gDAoBRwB,GAQxB,MAAO,CACLqH,KAPErH,EAAMisB,WAAW,MACZ,cACA1jB,OAAOC,UAAUD,OAAOvI,IACxB,QAEA,M,qDA0CoBA,EAAOE,GACpC,IAAI/B,EACJ,GAAI6B,EAAMisB,WAAW,MAAO,CAC1B,IAAMrqB,EAAO5B,EAAM9B,MAAM,GACzBC,EAAQ/E,KAAK+I,aACV+pB,QAAO,SAAA9pB,GAAW,OAAIA,EAAYR,KAAKqqB,WAAWrqB,MAClDhF,KAAI,SAAAwF,GAAW,MAAI,KAAOA,EAAYR,QACtC1D,MAAM,EAAGgC,OAGd,CACE,IAAMwK,EAAcnC,OAAOvI,GAEzB7B,EADEuM,GAAenC,OAAOC,UAAUkC,GAC1BtR,KAAKsH,OACVwrB,QAAO,SAAAjrB,GAAK,OAAIA,EAAMzC,OAAOgE,WAAWypB,WAAWjsB,MACnDpD,KAAI,SAAAqE,GAAK,OAAIA,EAAMzC,OAAOgE,cAC1BtE,MAAM,EAAGgC,GAGJ,GAEZ,MAAO,CACL/B,MAAOA,K,sDAkBqB2J,EAAMmI,EAAMwb,GAK1C,IALoD,IAAD,OAC/C1jB,EAAsB,GACtB8iB,EAAY,IAAIxpB,KACd8qB,EAAe,MAAsB19B,EAAU+G,qBAHF,WAK1CogB,GACP,IAAIxU,EAAO,IAAIC,KACfD,EAAKgI,QAAQyhB,EAAUxhB,UAAYuM,GACnC,IAAMlV,EAAS,EAAKA,OAAOwrB,QAAO,SAACjrB,GAAD,OAAW,EAAKmrB,kBAAkBnrB,EAAMK,UAAWF,MAEjFirB,OAAS,EACT7qB,OAAe,EACfd,EAAOG,OAASsrB,GAElBE,EAAYF,EACZ3qB,EAAkB,EAAK8qB,mBAAmBlrB,KAG1CirB,EAAY3rB,EAAOG,OACnBW,EACEd,EAAO6rB,QAAO,SAAC/qB,EAAiBP,GAAlB,OAA4BO,EAAkBP,EAAMkB,aAAatB,SAAQ,IAG3FkH,EAAoBgO,KAAK,CACvBnR,GAAG,OAAD,OAASgR,GACXxU,KAAMA,EAAKuqB,cACXU,UAAWA,EACX7qB,gBAAiBA,KAtBZoU,EAAI9N,EAAM8N,EAAI,EAAGA,IAAM,EAAvBA,GA0BT,OAAO7N,I,iDAaP,IAAMykB,GAAWpzB,KAAKsH,OAAOtH,KAAKsH,OAAOG,OAAO,GAAGS,UAAYlI,KAAKsH,OAAO,GAAGY,WAAa,IAC3F,MAAO,CACLsD,GAAI,OACJnB,gBAAiB+oB,EAAUpzB,KAAKsH,OAAOG,OACvC+C,sBAAuBxK,KAAK+I,aAAatB,OAAS2rB,K,0CAiBpD,OAHApzB,KAAK4K,MAAS5K,KAAK4K,MAEjB5K,KAAK4K,MAAQ5K,KAAK4K,MAAQsO,GAAgB,KAAO,OADjDlZ,KAAK4K,MAAQ5K,KAAKqzB,SAAS,IAAIprB,MAE1B,CACLuD,GAAI,OACJZ,MAAO5K,KAAK4K,S,0CAeIuF,EAAOE,GACzB,IAAIC,EAAU,GACRohB,EAAY,IAAIzpB,KAAKkI,GAE3BuhB,EAAU1hB,QAAQ0hB,EAAUzhB,UAAY,GAExC,IADA,IAAMqjB,EAAU,IAAIrrB,KAAKoI,GAChBrI,EAAO0pB,EAAW1pB,GAAQsrB,EAAStrB,EAAKgI,QAAQhI,EAAKiI,UAAY,GAC1E,CACE,IAAMrF,EAAQ5K,KAAKqzB,SAASrrB,GAE5BsI,EAAQqM,KAAK,CACXzU,UAAWF,EAAKuqB,cAChBpD,KAAM,EACNoE,KAAM,EACNC,IAAK,EACLC,MAAO7oB,EACP8oB,OAAQ,IAGZ,OAAOpjB,I,+BAQAtI,GAUP,IATA,IAAMH,EAAQ,CACZ2D,GAAIxL,KAAK2zB,WAAW3zB,KAAKsH,OAAOG,QAChCrC,OAAQpF,KAAKsR,cACbpJ,UAAWF,EACXe,aAAc,IAGVX,EAAkB4Q,GACtB3jB,EAAUkH,yBAA0BlH,EAAUmH,0BACvCggB,EAAI,EAAGA,EAAIpU,EAAiBoU,IACnC3U,EAAMkB,aAAa4T,KAAK3c,KAAK4zB,kBAAkB/rB,IAGjD7H,KAAKsH,OAAOqV,KAAK9U,GACjB7H,KAAK8xB,kBAAkB/wB,IAAI8G,EAAMzC,OAAQyC,K,wCAUzBf,EAAO+sB,GACvB,OACE/sB,EAAM6qB,gBAAkBkC,EAAOlC,eAC/B7qB,EAAM8qB,aAAeiC,EAAOjC,YAC5B9qB,EAAMmJ,YAAc4jB,EAAO5jB,Y,wCAUbpI,GAChB,IAAMW,EAAOsrB,oBAAS9a,GAAa,EAAG7J,OAAO4kB,kBAAkB3qB,YACzDF,EAASgQ,GAAgB,EAAGA,GAAgB,EAAG,GAAK,GAAM,IAAO,KACjElQ,EAAc,CAClBwC,GAAIxL,KAAKg0B,iBAAiBh0B,KAAK+I,aAAatB,QAC5Ce,KAAMA,EACNU,OAAQA,EACRrB,MAAOA,GAIT,OAFA7H,KAAK+I,aAAa4T,KAAK3T,GACvBhJ,KAAKgyB,sBAAsBjxB,IAAIiI,EAAYR,KAAMQ,GAC1CA,I,iCASEirB,GACT,MAAM,MAAN,OAAaA,K,mCASFjsB,GACX,OACEC,KAAKisB,IAAIlsB,EAAK2pB,cAAe3pB,EAAK4pB,WAAY5pB,EAAKiI,WACnDhI,KAAKisB,IAAIlsB,EAAK2pB,cAAe,EAAG,IAC9B,GAAK,GAAK,GAAK,M,yCASF3pB,GAEjB,OAAOhI,KAAKiyB,oBAAoBjyB,KAAKm0B,aAAansB,GAAQhI,KAAKiyB,oBAAoBxqB,U,qCAUtE+D,GACb,OAAO6M,SAAS7M,EAAG4oB,MAAM,KAAKC,MAAO,M,6CAchB5kB,EAAOf,EAAM8H,GAGlC,IAAMrG,EAAkB,MAAVqG,EAAiBxW,KAAKwyB,eAAehc,GAAU,EAAI,EAGjE,GAAIrG,IAAUV,EAAMhI,OAClB,MAAO,GACT,IAAM4I,EAAMxB,KAAKiG,IAAI3E,EAAQzB,EAAMe,EAAMhI,QACzC,OAAOgI,EAAM3K,MAAMqL,EAAOE,GAAKikB,Y,4CAcX7kB,EAAO3I,EAAOyP,GAGlC,IAAMlG,EAAe,MAATkG,EAAgBvW,KAAKwyB,eAAejc,GAAS9G,EAAMhI,OAG/D,GAAY,IAAR4I,EACF,MAAO,GACT,IAAMF,EAAQtB,KAAK+E,IAAIvD,EAAMvJ,EAAO,GACpC,OAAO2I,EAAM3K,MAAMqL,EAAOE,GAAKikB,Y,+BASxBtsB,GAEL,OAAOhI,KAAKkyB,OAAOlyB,KAAKm0B,aAAansB,GAAQhI,KAAKkyB,OAAOzqB,U,yCAS1CkrB,GACjB,OAAOA,EAAOE,WAAW,MAAQF,EAAO7tB,MAAM,GAAK6tB,I,uCASpC4B,GACf,MAAM,MAAN,OAAaA,O,61JCnsBjB,IAiPeC,GAjPQluB,KAAH,M,8nECApB,ICoCIpC,GD8CWuwB,GAlFQnuB,KAAH,M,kVCqCpB,GAAIjR,EAAU4G,eACd,CAEE,IAAMy4B,GAAa,IAAIlD,GAEjBmD,GAAY,CAChBC,MAAO,CACLttB,OAAQ,SAACutB,EAAD,OAAY/tB,EAAZ,EAAYA,MAAOurB,EAAnB,EAAmBA,QAAnB,OAAiCqC,GAAWI,mBAAmBhuB,EAAOurB,IAC9Eva,iBAAkB,SAAC+c,EAAD,OAAY/d,EAAZ,EAAYA,MAAOub,EAAnB,EAAmBA,QAASxb,EAA5B,EAA4BA,KAAMN,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,OAAQ1P,EAAjD,EAAiDA,MAAO4H,EAAxD,EAAwDA,KAAxD,OAClBgmB,GAAWK,6BACPje,EAAOub,EAASxb,EAAMN,EAAOC,EAAQ1P,EAAO4H,IAChD7G,MAAO,SAACgtB,EAAD,OAAYzvB,EAAZ,EAAYA,OAAZ,OAAyBsvB,GAAWM,kBAAkB5vB,IAC7D2D,aAAc,SAAC8rB,EAAD,OAAY/tB,EAAZ,EAAYA,MAAOurB,EAAnB,EAAmBA,QAAnB,OACZqC,GAAWO,yBAAyBnuB,EAAOurB,IAC7C1Z,uBAAwB,SAACkc,EAAD,OAAY/d,EAAZ,EAAYA,MAAOub,EAAnB,EAAmBA,QAASxb,EAA5B,EAA4BA,KAAMN,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,OAAQ1P,EAAjD,EAAiDA,MAAO4H,EAAxD,EAAwDA,KAAxD,OACtBgmB,GAAWQ,mCACTpe,EAAOub,EAASxb,EAAMN,EAAOC,EAAQ1P,EAAO4H,IAChD1F,YAAa,SAAC6rB,EAAD,OAAYrsB,EAAZ,EAAYA,KAAZ,OAAuBksB,GAAWS,wBAAwB3sB,IACvEmhB,cAAe,SAACkL,EAAD,OAAYjuB,EAAZ,EAAYA,MAAZ,OAAwB8tB,GAAWU,0BAA0BxuB,IAC5E4nB,mBAAoB,SAACqG,EAAD,OAAYjuB,EAAZ,EAAYA,MAAOE,EAAnB,EAAmBA,MAAnB,OAClB4tB,GAAWW,+BAA+BzuB,EAAOE,IACnD6H,oBAAqB,SAACkmB,EAAD,OAAYnmB,EAAZ,EAAYA,KAAMmI,EAAlB,EAAkBA,KAAMwb,EAAxB,EAAwBA,QAAxB,OACnBqC,GAAWY,gCAAgC5mB,EAAMmI,EAAMwb,IACzD/nB,aAAc,SAACuqB,GAAD,OAAaH,GAAWa,4BACtC3qB,MAAO,SAACiqB,GAAD,OAAaH,GAAWc,qBAC/BllB,QAAS,SAACukB,EAAD,OAAY1kB,EAAZ,EAAYA,MAAOE,EAAnB,EAAmBA,IAAnB,OAA6BqkB,GAAWe,oBAAoBtlB,EAAOE,MAI1EqlB,GAAW,CAAClB,GAAgBC,IAC5BkB,GAASC,YAAqB,CAAEF,YAAUf,eAEhDzwB,GAAO,IAAI2xB,IAAW,CAAEF,gBAG1B,CAEE,IAAMG,GAAW,IAAIC,IAAS,CAC5BC,IAAK3gC,EAAUG,kBAIXygC,GAAS,IAAIC,IAAc,CAC/BF,IAAK3gC,EAAUI,uBACf8xB,QAAS,CACP4O,WAAW,KAMfjyB,GAAOkwB,iBAEL,YAAgB,IAAbxtB,EAAY,EAAZA,MAAY,EACewvB,YAAkBxvB,GAAtCyvB,EADK,EACLA,KAAMC,EADD,EACCA,UACd,MAAgB,wBAATD,GAAgD,iBAAdC,IAE3CL,GACAH,IAKJ,IAAMS,GAAe,IAAIC,IAAa,CACpCtyB,KAAMA,GACNuyB,MAAO,IAAIC,IAAc,CAKvBC,iBAAkB,SAAAhnB,GAAM,OAAIA,EAAOnE,IAAM,MAKzCorB,aAAa,MASjB91B,IAAQ+1B,WAAWxhC,EAAU2G,8BAC7B8E,IAAQC,IAAI,CAAE+1B,aAAa,IAE3B,IAAMC,GAAa90B,IAAOiT,IAAV,MAEG,SAAAvY,GAAK,OAAIA,EAAM8E,oBAAsBpM,EAAUoF,aAAe,KAAO,SACtE,SAAAkC,GAAK,MACjB,gBACCA,EAAM8E,oBAAsBgP,WAASumB,eAAiBvmB,WAASwmB,eAChE,MACAtmB,SAAOC,aAIPsmB,GAAcj1B,YAAO+D,IAAP/D,CAAH,MAGc,SAAAtF,GAAK,OAAIA,EAAMw6B,aAAe,QAyN9CC,G,kDA9Mb,WAAYz6B,GAAQ,IAAD,8BACjB,cAAMA,IACD6I,MAAQ,CACXoqB,UAAW,KACXyH,aAAc,EACdC,wBAAwB,EACxB/J,oBAAoB,EACpBrG,aAAa,GAIf,EAAKqQ,aAAe,EAAKA,aAAa53B,KAAlB,gBACpB,EAAKytB,mBAAqB,EAAKA,mBAAmBztB,KAAxB,gBAC1B,EAAKmvB,6BAA+B,EAAKA,6BAA6BnvB,KAAlC,gBACpC,EAAK6tB,4BAA8B,EAAKA,4BAA4B7tB,KAAjC,gBACnC,EAAK4xB,kBAAoB,EAAKA,kBAAkB5xB,KAAvB,gBAfR,E,gEAwBjBoxB,kBACE17B,EAAUM,qBACViP,SAASosB,cAAc,2B,+BASjB,IAAD,EAOHhxB,KAAKwF,MALP6xB,EAFK,EAELA,aACAC,EAHK,EAGLA,uBACA/J,EAJK,EAILA,mBACArG,EALK,EAKLA,YACA0I,EANK,EAMLA,UAGInuB,EAAsB61B,GAA0Bz1B,KAChDC,EAAaN,GAAcC,GAEjC,OACE,kBAAC,IAAD,CAAgB+1B,OAAQjB,IACtB,kBAAC95B,EAAD,CAAaG,MAAOoD,KAAKy3B,aACzB,kBAAC,IAAD,CAAe76B,MAAOoD,KAAKy3B,YACzB,kBAAC,IAAD,CAAYxb,IAAKjc,KAAKu3B,cACpB,6BACE,kBAAC,GAAD,CACEnK,mBAAoBptB,KAAKotB,mBACzB0B,6BAA8B9uB,KAAK8uB,6BACnCtB,4BAA6BxtB,KAAKwtB,4BAClC/rB,oBAAqBA,EACrB8rB,mBAAoBA,EACpBqC,UAAWA,IAEb,kBAACmH,GAAD,CACEt1B,oBAAqBA,EACrB8rB,mBAAoBA,EAIpBmK,gBAAiB,kBAAM53B,OAAO63B,cAAc,IAAIC,MAAM,aAEtD,kBAACV,GAAD,CACEjxB,WAAS,EACTC,UAAU,SACVC,QAAQ,gBACRgxB,aAAcE,GAEd,kBAAC,IAAD,CACEQ,OAAK,EAACC,KAAK,IACX9U,OAAQ,SAACrmB,GAAD,OACN,kBAAC,GAAD,iBACMA,EADN,CAEEmF,WAAYA,QAIlB,kBAAC,IAAD,CACE+1B,OAAK,EAACC,KAAK,UACX9U,OAAQ,SAACrmB,GAAD,OACN,kBAAC,GAAD,iBACMA,EADN,CAEEmF,WAAYA,QAIlB,kBAAC,IAAD,CACE+1B,OAAK,EAACC,KAAK,OACX9U,OAAQ,SAACrmB,GAAD,OACN,kBAAC,GAAD,iBACMA,EADN,CAEEmF,WAAYA,QAIlB,kBAAC,IAAD,CAAO+1B,OAAK,EAACC,KAAK,YAAYtI,UAAW1d,KACzC,kBAAC,IAAD,CACE+lB,OAAK,EAACC,KAAK,SACX9U,OAAQ,SAACrmB,GAAD,OACN,kBAAC,GAAD,iBACMA,EADN,CAEEmF,WAAYA,EACZL,oBAAqBA,EACrBylB,YAAaA,QAInB,kBAAC,IAAD,CACE2Q,OAAK,EAACC,KAAK,iBACX9U,OAAQ,SAACrmB,GAAD,OACN,kBAAC,GAAD,iBACMA,EADN,CAEEmF,WAAYA,QAIlB,kBAAC,IAAD,CACE+1B,OAAK,EAACC,KAAK,YACX9U,OAAQ,SAACrmB,GAAD,OACN,kBAAC,GAAD,iBACMA,EADN,CAEEmF,WAAYA,QAIlB,kBAAC,IAAD,CAAO+1B,OAAK,EAACC,KAAK,iBAAiBtI,UAAW9F,KAC9C,kBAAC,GAAD,CACE6H,kBAAmBvxB,KAAKuxB,kBACxBrK,YAAaA,Y,mCAelB/K,GACXnc,KAAK2R,SAAS,CAAEie,UAAWzT,M,yCAOV/W,GACjBpF,KAAK2R,SAAS,CACZ0lB,aAAcjyB,M,mDAQW2yB,GAC3B/3B,KAAK2R,SAAS,CACZ2lB,wBAAyBt3B,KAAKwF,MAAM8xB,2B,kDAQZS,GAC1B/3B,KAAK2R,SAAS,CACZ4b,oBAAqBvtB,KAAKwF,MAAM+nB,uB,wCAUlB9Z,EAAO4d,GACvBrxB,KAAK2R,SAAS,CACZuV,YAAamK,M,iCAUf,OAAOrxB,KAAKwF,MAAM0hB,YAAc1nB,EAAY1C,M,GA/M9BqD,aC9IlB63B,IAAShV,OACL,kBAAC,GAAD,MACJpe,SAASqzB,eAAe,W","file":"static/js/main.1312aed1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner-x-horizon.78a73653.png\";","module.exports = __webpack_public_path__ + \"static/media/open-block-explorer-logo-large.b8da814f.png\";","module.exports = __webpack_public_path__ + \"static/media/apollo-logo-dark-mode.ff872a8a.png\";","module.exports = __webpack_public_path__ + \"static/media/apollo-logo-light-mode.d4f0ec1b.png\";","module.exports = __webpack_public_path__ + \"static/media/github-octocat.c833384a.png\";","module.exports = __webpack_public_path__ + \"static/media/graphql-logo.8d2ae7fd.png\";","module.exports = __webpack_public_path__ + \"static/media/material-ui-logo.1d6a085f.png\";","module.exports = __webpack_public_path__ + \"static/media/mysql-logo.8135feff.png\";","module.exports = __webpack_public_path__ + \"static/media/nomics-logo-dark-mode.a32c7cc9.png\";","module.exports = __webpack_public_path__ + \"static/media/nomics-logo-light-mode.6f5390ee.png\";","module.exports = __webpack_public_path__ + \"static/media/prisma-logo-dark-mode.590aa2e2.png\";","module.exports = __webpack_public_path__ + \"static/media/prisma-logo-light-mode.9d9ad809.png\";","module.exports = __webpack_public_path__ + \"static/media/react-logo-text.24432c06.png\";","module.exports = __webpack_public_path__ + \"static/media/styled-components-logo-dark-mode.3b3add6f.png\";","module.exports = __webpack_public_path__ + \"static/media/styled-components-logo-light-mode.33f922e4.png\";","module.exports = __webpack_public_path__ + \"static/media/open-block-explorer-logo.2b07dcdf.png\";","/**\n * @file constants\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nconst Constants = Object.freeze({\n  // Development server URIs\n  //URI_SERVER_HTTP: 'http://localhost:4000',\n  //URI_SERVER_WEB_SOCKETS: 'ws://localhost:4000',\n  // Production server URIs\n  URI_SERVER_HTTP: 'https://openblockexplorer-server.herokuapp.com/',\n  URI_SERVER_WEB_SOCKETS: 'wss://openblockexplorer-server.herokuapp.com/',\n  URI_CDN_FONT_AWESOME:\n    'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css',\n  // Remove any fonts that aren't used!!!\n  URI_CDN_GOOGLE_FONTS:\n    'https://fonts.googleapis.com/css?family=Istok+Web:400|Muli:200,300,400,500',\n  URI_ABOUT_APOLLO: 'https://www.apollographql.com/',\n  URI_ABOUT_NOMICS: 'https://p.nomics.com/cryptocurrency-bitcoin-api',\n  URI_ABOUT_GRAPHQL: 'https://graphql.org/',\n  URI_ABOUT_GRAPHQL_YOGA: 'https://github.com/prisma/graphql-yoga',\n  URI_ABOUT_MATERIAL_UI: 'https://material-ui.com/',\n  URI_ABOUT_MY_SQL: 'https://www.mysql.com/',\n  URI_ABOUT_PRISMA: 'https://www.prisma.io/',\n  URI_ABOUT_REACT: 'https://reactjs.org/',\n  URI_ABOUT_STYLED_COMPONENTS: 'https://www.styled-components.com/',\n  URI_GITHUB_CONTRIBUTORS: 'https://github.com/orgs/openblockexplorer/people',\n  URI_GITHUB_OPEN_BLOCK_EXPLORER_PROJECT: 'https://github.com/openblockexplorer/openblockexplorer',\n  URI_GITHUB_OPEN_BLOCK_EXPLORER_WIKI: 'https://github.com/openblockexplorer/openblockexplorer/wiki',\n  URI_GITHUB_DYLAN: 'https://github.com/dylancm4',\n  URI_GITHUB_MIT_LICENSE: 'https://github.com/openblockexplorer/openblockexplorer/blob/master/LICENSE',\n  URI_GITHUB_TODD: 'https://github.com/toddkitchens',\n  URI_TWITTER_OPEN_BLOCK_EXPLORER: 'https://twitter.com/dylancm4',\n  // Remove colors that are not used!!!\n  COLOR_DFINITY_BLACK: 'rgb(41, 42, 46)', // from dfinity.org/press\n  COLOR_DFINITY_BLACK_LIGHTER: 'rgb(73, 75, 82)', //  COLOR_DFINITY_BLACK scaled lighter\n  COLOR_DFINITY_BLACK_DARKER: 'rgb(27, 28, 31)', // COLOR_DFINITY_BLACK scaled darker\n  COLOR_DFINITY_LIGHT_ORANGE: 'rgb(251, 176, 59)', // from dfinity.org style guide\n  COLOR_DFINITY_DARK_ORANGE: 'rgb(241, 90, 36)', // from dfinity.org style guide\n  COLOR_DFINITY_BLUE_400: '#29ABE2', // DFINITY logo blue\n  COLOR_DFINITY_BLUE_500: '#009DDD',\n  COLOR_DFINITY_BLUE_600: '#0090CF',\n  COLOR_DFINITY_BLUE_700: '#007DBC',\n  COLOR_DFINITY_BLUE_800: '#006DA8',\n  COLOR_DFINITY_BLUE_900: '#004E88',\n  COLOR_TEXT_LIGHT: '#FFFFFF', // This should be removed, replaced with COLOR_DARK_TEXT!!!\n  COLOR_DARK_TEXT: '#FFFFFF',\n  COLOR_DARK_TEXT_FADED: 'rgb(190, 191, 192)', // rgba(255, 255, 255, 0.7) on COLOR_DFINITY_BLACK, matches Material-UI Tab opacity\n  COLOR_TEXT_DARKER: 'rgb(148, 149, 151)', // rgba(255, 255, 255, 0.5) on COLOR_DFINITY_BLACK\n  COLOR_TEXT_DARKEST: 'rgb(106, 106, 109)', // rgba(255, 255, 255, 0.3) on COLOR_DFINITY_BLACK\n  COLOR_LIGHT_TEXT_FADED: 'rgb(77, 77, 77)', // rgba(0, 0, 0, 0.7) on white, matches Material-UI Tab opacity\n  COLOR_DARK_BODY_DARKER_MAC_OS: '#1B1B1B', // Calendar, Finder, iTunes, Messages\n  COLOR_DARK_BODY_LIGHTER_MAC_OS: '#262626', // Finder\n  COLOR_DARK_DRAWER_DIVIDER_MAC_OS: '#4B4B4B', // Calendar, Messages\n  COLOR_DARK_DRAWER_DIVIDER_YOUTUBE: '#333333',\n  COLOR_DARK_FOOTER_TEXT_ICON_NETFLIX: '#808080',\n  COLOR_DARK_TEXT_MAC_OS: '#DCDCDC', // Calendar, iTunes\n  COLOR_LIGHT_BODY_TEXT_GOOGLE: '#202124', // About, Account, News, Gmail, Contacts, Docs, Keep, Material\n  COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE: '#5F6368', // About, Account, Contacts, Docs, Drive, Gmail, Material\n  COLOR_LIGHT_CHART_GOOGLE: '#9E9E9E', // Analytics, Firebase\n  COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE: '#E3E3E3', // Docs, Sheets\n  COLOR_LIGHT_DRAWER_ICON_GOOGLE: '#5F6368', // Account, Docs, Drive, Calendar, Keep, Photos, Sheets\n  COLOR_LIGHT_DRAWER_TEXT_GOOGLE: '#3C4043', // Account, Docs, Calendar, News, Photos, Sheets\n  COLOR_TWITTER_BLUE: 'rgb(100, 164, 224)',\n  COLOR_TWITTER_GREEN: 'rgb(131, 175, 97)',\n  COLOR_TWITTER_ORANGE: 'rgb(244, 174, 78)',\n  COLOR_TWITTER_PURPLE: 'rgb(165, 144, 211)',\n  COLOR_GRAY_ON_WHITE: 'rgb(235, 235, 235)', // matches Material-UI IconButton hover\n  FONT_PRIMARY: '\\'Muli\\', sans-serif',\n  MATERIAL_FONT_SIZE_H1: '6rem', // 96px\n  MATERIAL_FONT_SIZE_H2: '3.75rem', // 60px\n  MATERIAL_FONT_SIZE_H3: '3rem', // 48px\n  MATERIAL_FONT_SIZE_H4: '2.125rem', // 34px\n  MATERIAL_FONT_SIZE_H5: '1.5rem', // 24px\n  MATERIAL_FONT_SIZE_H6: '1.25rem', // 20px\n  MATERIAL_FONT_SIZE_SUBTITLE_1: '1rem', // 16px\n  MATERIAL_FONT_SIZE_SUBTITLE_2: '0.875rem', // 14px\n  MATERIAL_FONT_SIZE_BODY_1: '1rem', // 16px\n  MATERIAL_FONT_SIZE_BODY_2: '0.875rem', // 14px\n  MATERIAL_FONT_SIZE_BUTTON: '0.875rem', // 14px\n  MATERIAL_FONT_SIZE_CAPTION: '0.75rem', // 12px\n  MATERIAL_FONT_SIZE_OVERLINE: '0.625rem', // 10px\n  MATERIAL_CIRCULAR_INDICATOR_SIZE: 48,\n  MATERIAL_UI_ICON_BUTTON_FONT_SIZE: 24,\n  FONT_SIZE_TABLE_XS: '0.6875rem', // 11px\n  BREAKPOINT_MIN_XS: 0,\n  BREAKPOINT_MAX_XS: 599,\n  BREAKPOINT_MIN_SM: 600,\n  BREAKPOINT_MAX_SM: 959,\n  BREAKPOINT_MIN_MD: 960,\n  BREAKPOINT_MAX_MD: 1279,\n  BREAKPOINT_MIN_LG: 1280,\n  BREAKPOINT_MAX_LG: 1919,\n  BREAKPOINT_MIN_XL: 1920,\n  BREAKPOINT_LG_MAX_WIDTH: 1140, // from Bootstrap\n  DRAWER_WIDTH: 256,\n  FOOTER_HEIGHT: 96,\n  FOOTER_MARGIN_XS: 8,\n  FOOTER_MARGIN_SM_AND_UP: 32,\n  ICON_SVG_PATH_TPS: 'M16 8V4l8 8-8 8v-4h-5V8h5zM9 8H7v8h2V8zM4.986 8H3v8h1.986V8zM1 8H0v8h1V8z',\n  ICON_SVG_PATH_VOLUME: 'M24 14.182h-6.545v7.636H24zm-8.727-12H8.727v19.636h6.546zM6.545 21.818H0v-12h6.545z',\n  ICON_SVG_PATH_MARKET_CAP: 'M24 3.621l-7.21 1.467 2.062 2.053-6.43 6.438-3.606-3.607L0 18.675l1.694 1.703 7.117-7.01 3.594 3.597 8.149-8.126 2.003 1.995z',\n  ICON_SVG_PATH_BLOCK: 'M12 0L1 6v12.131L12 24l11-5.869V6.065L12 0zm7.91 6.646l-7.905 4.218L4.133 6.57l7.862-4.289 7.915 4.365zM3 8.23l8 4.363V21.2l-8-4.268V8.23zM13 21.2v-8.6l8-4.269v8.6L13 21.2z',\n  ICON_SVG_PATH_PRICE: 'M19 16.166c0-4.289-4.465-5.483-7.887-7.091-2.079-1.079-1.816-3.658 1.162-3.832 1.652-.1 3.351.39 4.886.929l.724-3.295c-1.814-.551-3.437-.803-4.885-.841V0h-2v2.134c-3.89.535-5.968 2.975-5.968 5.7 0 4.876 5.693 5.62 7.556 6.487 2.54 1.136 2.07 3.5-.229 4.021-1.993.451-4.538-.337-6.45-1.079L5 20.551c1.787.923 3.931 1.417 6 1.453V24h2v-2.105c3.313-.464 6.005-2.293 6-5.729z',\n  ICON_SVG_PATH_BLOCK_TIME: 'M13 12l-.688-4h-.609L11 12a1.99 1.99 0 0 0-1 1.723 2 2 0 0 0 4 0A1.99 1.99 0 0 0 13 12zm-1-8C6.478 4 2 8.477 2 14s4.478 10 10 10 10-4.477 10-10S17.522 4 12 4zm0 18c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8-3.589 8-8 8zM10 2.181V0h4v2.181c-1.438-.243-2.592-.238-4 0zm9.179 2.226L20.586 3 22 4.414l-1.321 1.321a12.134 12.134 0 0 0-1.5-1.328z',\n  ICON_SVG_PATH_THEME_LIGHT: 'M.307 13.306a11.99 11.99 0 0 0 4.489 8.072 11.999 11.999 0 0 0 11.637 1.883 12.038 12.038 0 0 0 5.316-3.839 12.04 12.04 0 0 0 1.895-3.402.67.67 0 0 0-1.018-.775 9.122 9.122 0 0 1-2.15 1.124 9.114 9.114 0 0 1-8.842-1.43 9.11 9.11 0 0 1-3.412-6.136 9.11 9.11 0 0 1 1.926-6.751c.245-.308.52-.61.818-.9a.67.67 0 0 0-.572-1.144A12.044 12.044 0 0 0 2.84 4.425a11.987 11.987 0 0 0-2.533 8.88zm3.584-8.047a10.7 10.7 0 0 1 4.723-3.41l.027-.01a10.433 10.433 0 0 0-1.752 7.118 10.444 10.444 0 0 0 3.912 7.033 10.448 10.448 0 0 0 10.135 1.64c.196-.072.39-.15.583-.232A10.697 10.697 0 0 1 15.975 22 10.665 10.665 0 0 1 5.63 20.327a10.656 10.656 0 0 1-3.99-7.174A10.653 10.653 0 0 1 3.89 5.259z',\n  ICON_SVG_PATH_THEME_DARK: 'M.307 13.306a11.99 11.99 0 0 0 4.489 8.072 11.999 11.999 0 0 0 11.637 1.883 12.038 12.038 0 0 0 5.316-3.839 12.04 12.04 0 0 0 1.895-3.402.67.67 0 0 0-1.018-.775 9.122 9.122 0 0 1-2.15 1.124 9.114 9.114 0 0 1-8.842-1.43 9.11 9.11 0 0 1-3.412-6.136 9.11 9.11 0 0 1 1.926-6.751c.245-.308.52-.61.818-.9a.67.67 0 0 0-.572-1.144A12.044 12.044 0 0 0 2.84 4.425a11.987 11.987 0 0 0-2.533 8.88z',\n  ICON_SVG_PATH_BITCOIN: 'M21.018 9.648c.377-2.521-1.543-3.877-4.168-4.781l.852-3.416-2.08-.519-.829 3.326a86.982 86.982 0 0 0-1.666-.392l.835-3.348L11.884 0l-.852 3.415a69.57 69.57 0 0 1-1.328-.312l.002-.01-2.867-.717-.554 2.221s1.543.354 1.51.376c.843.21.995.767.97 1.21l-.97 3.89c.058.016.133.037.216.07l-.22-.054-1.36 5.451c-.103.256-.364.64-.953.494.02.03-1.511-.377-1.511-.377l-1.033 2.38 2.706.675c.504.126.997.258 1.483.382l-.86 3.455 2.076.519.853-3.419c.567.154 1.118.296 1.657.43l-.85 3.403 2.08.518.86-3.449c3.546.671 6.212.4 7.335-2.807.904-2.582-.045-4.071-1.91-5.042 1.358-.314 2.381-1.207 2.654-3.054zm-4.75 6.663c-.643 2.582-4.991 1.186-6.4.836l1.141-4.578c1.41.352 5.93 1.049 5.258 3.742zm.642-6.7c-.586 2.349-4.205 1.156-5.378.863l1.035-4.152c1.174.293 4.954.84 4.343 3.29z',\n  ABOUT_PAGE_MARGIN_XS: 8,\n  ABOUT_PAGE_MARGIN_SM: 48,\n  ABOUT_PAGE_MARGIN_MD: 64,\n  ABOUT_PAGE_MARGIN_LG: 128,\n  HOME_PAGE_MARGIN_XS: 8,\n  HOME_PAGE_MARGIN_SM_AND_UP: 32,\n  // Care must be taken if these table heights are changed, to avoid a glitch that occurs with\n  // certain heights where the row slide in has a 1px stutter following the animation.\n  TABLE_ROW_HEIGHT_XS: 38,\n  TABLE_ROW_HEIGHT_SM_AND_UP: 48,\n  ABOUT_PAGE_PROJECT_ICONS_HEIGHT: 55,\n  COINBASE_CHECKOUT_ID: '0d82d9e4-06c8-44b5-8f81-ef296be643e6',\n  GOOGLE_ANALYTICS_TRACKING_ID: 'UA-138212575-1',\n  // Static (no server) constants\n  IS_STATIC_MODE: true,\n  STATIC_START_MONTHS_BEFORE_TODAY: 6,\n  STATIC_NUM_BLOCKS: 8636,\n  STATIC_BLOCK_TIME_MS: 3000,\n  STATIC_NETWORK_STATS_POLL_INTERVAL_MS: 10000,\n  STATIC_PRICE_POLL_INTERVAL_MS: 10000,\n  STATIC_TXS_PER_BLOCK_MIN: 0,\n  STATIC_TXS_PER_BLOCK_MAX: 20\n});\n\nexport default Constants;\n","/**\n * @file globalStyle\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport { createGlobalStyle } from 'styled-components';\nimport Constants from '../constants';\n\n/**\n * StyledComponent that handles global styles.\n */\nexport const GlobalStyle = createGlobalStyle`\n   body {\n    margin: 0;\n    padding: 0;\n    background: ${props => props.theme.colorBodyBackground};\n   }\n`;\n\n/**\n * The styled-components ThemeProvider light theme.\n */\nexport const themeLight = {\n  // Should use constants for all!!!\n  isDark: false,\n  colorAboutBackgroundPrimary: '#FFFFFF',\n  colorAboutBackgroundSecondary: '#F8F9FA', // Google Analytics (verified), Wikipedia (verified)\n  colorAboutHeaderText: '#FFFFFF',\n  colorAboutTwitterBackground: '#FFFFFF',\n  colorAppBarBackground: '#FFFFFF',\n  colorAppBarTextButton: Constants.COLOR_LIGHT_TEXT_FADED, // (#4D4D4D)\n  colorAppBarOpenText: Constants.COLOR_LIGHT_BODY_TEXT_GOOGLE,\n  colorAppBarExplorerText: Constants.COLOR_DFINITY_BLUE_700,\n  colorBodyBackground: '#F8F9FA', // Wikipedia (verified)\n  colorBodyButtonBackground: Constants.COLOR_DFINITY_BLUE_700,\n  colorBodyButtonText: Constants.COLOR_TEXT_LIGHT,\n  colorBodyButtonHoverBackground: Constants.COLOR_DFINITY_BLUE_500,\n  colorBodyButtonHoverText: Constants.COLOR_TEXT_LIGHT,\n  colorBodyText: Constants.COLOR_LIGHT_BODY_TEXT_GOOGLE,\n  colorBodyTextDim: Constants.COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE,\n  colorBodyTextLink: Constants.COLOR_DFINITY_BLUE_700,\n  colorDashCardBackground: '#FFFFFF',\n  colorDashCardIcon: [Constants.COLOR_DFINITY_BLUE_700, '#9440A6', '#DA005E', '#F79308'], // Ori's purple and orange\n  colorDashCardIconOpacity: 1.0,\n  colorDrawerBackground: '#FFFFFF',\n  colorDrawerDivider: Constants.COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE,\n  colorDrawerIcon: Constants.COLOR_LIGHT_DRAWER_ICON_GOOGLE,\n  colorDrawerIconTextSelected: Constants.COLOR_DFINITY_BLUE_700,\n  colorDrawerText: Constants.COLOR_LIGHT_DRAWER_TEXT_GOOGLE,\n  colorChartBackground: '#FFFFFF',\n  colorChartTooltipBackground: 'rgba(255, 255, 255, 0.96)',\n  colorChartAxes: Constants.COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE,\n  colorChartGrid: Constants.COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE,\n  colorChartText: Constants.COLOR_LIGHT_BODY_TEXT_DIM_GOOGLE,\n  colorChartLine: Constants.COLOR_DFINITY_BLUE_700,\n  colorChartActiveDotStroke: '#FFFFFF',\n  colorIconButtonHover: '#000000',\n  colorTableBackgroundPrimary: '#FFFFFF',\n  colorTableRowBorder: Constants.COLOR_LIGHT_DRAWER_DIVIDER_GOOGLE,\n  colorTableTextDim: '#909090', // YouTube, footer text dim (verified)\n  colorFooterBackground: '#F5F5F5',\n  colorFooterTextIcon: '#909090', // YouTube (verified)\n  colorSearchText: Constants.COLOR_LIGHT_BODY_TEXT_GOOGLE,\n  colorSearchIcon: '#9E9E9E', //  Material Design icon(verified)\n  opacityActionDisabled: 0.26, // Material-UI createPalette.js theme.palette.action.disabled light theme\n  opacityActionHover: 0.08 // Material-UI createPalette.js theme.palette.action.hoverOpacity light theme\n}\n\n/**\n * The styled-components ThemeProvider dark theme.\n */\nexport const themeDark = {\n  isDark: true,\n  colorAboutBackgroundPrimary: Constants.COLOR_DARK_BODY_DARKER_MAC_OS,\n  colorAboutBackgroundSecondary: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorAboutHeaderText: '#FFFFFF',\n  colorAboutTwitterBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorAppBarBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorAppBarTextButton: Constants.COLOR_DARK_TEXT_FADED,\n  colorAppBarOpenText: Constants.COLOR_DARK_TEXT,\n  colorAppBarExplorerText: Constants.COLOR_DFINITY_LIGHT_ORANGE,\n  colorBodyBackground: Constants.COLOR_DARK_BODY_DARKER_MAC_OS,\n  colorBodyButtonBackground: Constants.COLOR_DFINITY_BLUE_700,\n  colorBodyButtonText: Constants.COLOR_DARK_TEXT_MAC_OS,\n  colorBodyButtonHoverBackground: Constants.COLOR_DFINITY_BLUE_500,\n  colorBodyButtonHoverText: Constants.COLOR_TEXT_LIGHT,\n  colorBodyText: Constants.COLOR_DARK_TEXT_MAC_OS,\n  colorBodyTextDim: Constants.COLOR_DARK_TEXT_MAC_OS,\n  colorBodyTextLink: Constants.COLOR_DFINITY_BLUE_600,\n  colorDashCardBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorDashCardIcon: ['#FFFFFF', '#FFFFFF', '#FFFFFF', '#FFFFFF'],\n  colorDashCardIconOpacity: 0.5,\n  colorDrawerBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorDrawerDivider: Constants.COLOR_DARK_DRAWER_DIVIDER_YOUTUBE,\n  colorDrawerIcon: Constants.COLOR_DARK_TEXT_FADED,\n  colorDrawerIconTextSelected: '#FFFFFF',\n  colorDrawerText: Constants.COLOR_DARK_TEXT_FADED,\n  colorChartBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorChartTooltipBackground: 'rgba(38, 38, 38, 0.96)',\n  colorChartAxes: Constants.COLOR_DARK_FOOTER_TEXT_ICON_NETFLIX,\n  colorChartGrid: Constants.COLOR_DARK_DRAWER_DIVIDER_MAC_OS,\n  colorChartText: Constants.COLOR_DARK_TEXT_FADED,\n  colorChartLine: Constants.COLOR_DFINITY_BLUE_600,\n  colorChartActiveDotStroke: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorIconButtonHover: Constants.COLOR_DARK_TEXT,\n  colorTableBackgroundPrimary: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorTableRowBorder: Constants.COLOR_DARK_DRAWER_DIVIDER_YOUTUBE,\n  colorTableTextDim: '#717171', // YouTube (Dark), footer text dim (verified)\n  colorFooterBackground: Constants.COLOR_DARK_BODY_LIGHTER_MAC_OS,\n  colorFooterTextIcon: Constants.COLOR_DARK_FOOTER_TEXT_ICON_NETFLIX,\n  colorSearchText: Constants.COLOR_LIGHT_BODY_TEXT_GOOGLE,\n  colorSearchIcon: '#9E9E9E', //  Material Design icon (verified)\n  opacityActionDisabled: 0.3, // Material-UI createPalette.js theme.palette.action.disabled dark theme\n  opacityActionHover: 0.1 // Material-UI createPalette.js theme.palette.action.hoverOpacity dark theme\n}\n","/**\n * @file ResponsiveComponent\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport { Component } from 'react';\nimport { throttle } from 'throttle-debounce';\n\n/**\n * Base class component which re-renders when the window is resized.\n */\nclass ResponsiveComponent extends Component {\n  /**\n   * Create a ResponsiveComponent object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n\n    // Throttle the calls to handleWindowResize() so that we're not constantly re-rendering.\n    this.throttledHandleWindowResize = throttle(200, true, this.handleWindowResize);\n  }\n  \n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree).\n   * @public\n   */\n  componentDidMount() {\n    window.addEventListener('resize', this.throttledHandleWindowResize);\n  }\n\n  /**\n   * Invoked by React immediately before a component is unmounted and destroyed.\n   * @public\n   */\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.throttledHandleWindowResize);\n  }\n\n  /**\n   * Force the component to re-render when the window is resized.\n   * @private\n   */\n  handleWindowResize() {\n    this.forceUpdate();\n  }\n};\n\nexport default ResponsiveComponent;\n","/**\n * @file TrackablePage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport ReactGA from 'react-ga';\nimport ResponsiveComponent from '../ResponsiveComponent/ResponsiveComponent';\n\n/**\n * Base class component for a page which is trackable by react-ga.\n */\nclass TrackablePage extends ResponsiveComponent {\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    super.componentDidMount();\n\n    // Scroll to the top on every page change.\n    window.scrollTo(0, 0);\n\n    const pathName = this.props.location.pathname + this.props.location.search;\n    this.trackPage(pathName);\n}\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @param {Object} prevProps The previous props.\n   * @public\n   */\n  componentDidUpdate(prevProps) {\n    const currentPathName = prevProps.location.pathname + prevProps.location.search;\n    const nextPathName = this.props.location.pathname + this.props.location.search;\n\n    if (currentPathName !== nextPathName)\n      this.trackPage(nextPathName);\n  }\n\n  /**\n   * Track the page using react-ga.\n   * @param {String} pathName The path name of the page.\n   * @private\n   */\n  trackPage(pathName) {\n    // Track production build, but not development build.\n    if (process.env.NODE_ENV === 'production') {\n      ReactGA.set({ page: pathName });\n      ReactGA.pageview(pathName);\n    }\n  }\n}\n\nexport default TrackablePage;\n","/**\n * @file breakpoint\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport Constants from '../constants';\n\nexport const Breakpoints = Object.freeze({\n  XS: 0,\n  SM: 1,\n  MD: 2,\n  LG: 3,\n  XL: 4\n});\n\n/**\n * Return the current breakpoint.\n * @param {Boolean} isDesktopDrawerOpen True if the desktop drawer (large screens) is open and\n *  caller wants the breakpoint to be calculated based on the non-drawer width of the window.\n * @return {Number} The current breakpoint.\n * @private\n */\nexport function getBreakpoint(isDesktopDrawerOpen) {\n  const drawerWidth =  isDesktopDrawerOpen ? Constants.DRAWER_WIDTH : 0;\n  if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_XS + drawerWidth) + 'px)').matches)\n    return Breakpoints.XS;\n  else if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_SM + drawerWidth) + 'px)').matches)\n    return Breakpoints.SM;\n  else if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_MD  + drawerWidth) + 'px)').matches)\n    return Breakpoints.MD;\n  else if (window.matchMedia('(max-width: ' + (Constants.BREAKPOINT_MAX_LG + drawerWidth) + 'px)').matches)\n    return Breakpoints.LG;\n  else\n    return Breakpoints.XL;\n}\n\n/**\n * Return true if the current breakpoint is greater than or equal to the specified breakpoint.\n * @param {Number} breakpoint The breakpoint to compare to the current breakpoint.\n * @return {Boolean} True if the current breakpoint is greater than or equal to the specified\n *  breakpoint.\n * @private\n */\nexport function isBreakpointGreaterOrEqualTo(breakpoint) {\n  switch (breakpoint) {\n    case Breakpoints.XS:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_XS + 'px)').matches;\n    case Breakpoints.SM:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_SM + 'px)').matches;\n    case Breakpoints.MD:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_MD + 'px)').matches;\n    case Breakpoints.LG:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_LG + 'px)').matches;\n    case Breakpoints.XL:\n    default:\n      return window.matchMedia('(min-width: ' + Constants.BREAKPOINT_MIN_XL + 'px)').matches;\n  }\n}\n\n/**\n * Return true if the current breakpoint is greater than or equal to the smallest \"desktop\"\n * breakpoint.\n * @return {Boolean} True if the current breakpoint is greater than or equal to the smallest\n * \"desktop\" breakpoint.\n * @private\n */\nexport function isBreakpointDesktop() {\n  return isBreakpointGreaterOrEqualTo(Breakpoints.MD);\n}\n\n/**\n * Return true if the current breakpoint is less than or equal to the specified breakpoint.\n * @param {Number} breakpoint The breakpoint to compare to the current breakpoint.\n * @return {Boolean} True if the current breakpoint is less than or equal to the specified\n *  breakpoint.\n * @private\n */\nexport function isBreakpointLessOrEqualTo(breakpoint) {\n  switch (breakpoint) {\n    case Breakpoints.XS:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_XS + 'px)').matches;\n    case Breakpoints.SM:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_SM + 'px)').matches;\n    case Breakpoints.MD:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_MD + 'px)').matches;\n    case Breakpoints.LG:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_LG + 'px)').matches;\n    case Breakpoints.XL:\n    default:\n      return window.matchMedia('(max-width: ' + Constants.BREAKPOINT_MAX_XL + 'px)').matches;\n  }\n}\n","/**\n * @file DynamicTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  Fade,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { Transition } from 'react-spring/renderprops';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst StyledPaper = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorTableBackgroundPrimary};\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    color: ${props => props.theme.colorBodyText};\n    padding-top: 8px;\n    padding-bottom: 4px;\n    padding-left: 15px;\n    text-align: left;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    font-weight: 300;\n  }\n`;\n\nconst StyledTable = styled(Table)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    /* Needed for footer border-top to work. */\n    border-collapse: separate;\n  }\n`;\n\nconst TableRowHeader = styled(TableRow)`\n  && {\n    height: ${Constants.TABLE_ROW_HEIGHT_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        height: ${Constants.TABLE_ROW_HEIGHT_XS + 'px'};\n      `\n    }\n  }\n`;\n\n// The height for the table body rows is set dynamically, so that we can perform expand/collapse\n// animations.\nconst TableRowBody = styled(TableRow)`\n  && {\n    height: auto;\n  }\n`;\n\nconst StyledTableCell = styled(TableCell)`\n  && {\n    border-color: ${props => props.theme.colorTableRowBorder};\n    color: ${props => props.theme.colorBodyText};\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n    white-space: nowrap;\n    /* Reducing the font size for narrow page widths seems sufficient for resizing the table when\n       Grid spacing is 0 and padding='checkbox'. Other settings, such as 'overflow: hidden' and\n       'max-width: 0px', were also helpful in improving the table at narrow page widths, but do\n       not seem to be necessary with the current settings. Another useful setting is\n       'text-overflow: ellipsis', though we reduce the font size rather than using ellipsis. */\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.FONT_SIZE_TABLE_XS};\n      `\n    }\n  }\n`;\n\nconst TableCellHeader = styled(StyledTableCell)`\n  && {\n    border-bottom-style: solid;\n    border-bottom-width: 2px;\n    color: ${props => props.theme.colorBodyTextDim};\n    font-weight: 500;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst TableRowFooter = styled(TableRow)`\n  && {\n    height: 20px;\n  }\n`;\n\nconst TableCellFooter = styled(StyledTableCell)`\n  && {\n    border-top-style: solid;\n    border-top-width: 1px;\n    border-bottom: 0;\n    color: ${props => props.theme.colorTableTextDim};\n    font-size: 9px;\n  }\n`;\n\n/**\n * Class that implements a table component where new rows either slide in or fade in.\n */\nclass DynamicTable extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * An array that specifies the column widths of the table.\n     */    \n    columnWidths: PropTypes.array.isRequired,\n    /**\n     * Return an array of objects that describe the body rows, where each object contains:\n     *  mapKey: A unique key that identifies the row.\n     *  cells: An array of objects that describe the cells of the row, where each object contains:\n     *    value: String containing the value of the cell.\n     *    isNumeric: True if the cell contains a numeric value, false otherwise.\n     *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n     *      for no link.\n     * @return {Array} An array of objects that describe the body rows.\n     */\n    getBodyRows: PropTypes.func.isRequired,\n    /**\n     * An array of objects that describe the cells of the footer row, where each object contains:\n     *  value: String containing the value of the cell.\n     *  isNumeric: True if the cell contains a numeric value, false otherwise.\n     *  link: Optional string which provides a link for the cell (to= prop of Link). Set to null for\n     *    no link.\n     */\n    footerRow: PropTypes.array.isRequired,\n    /**\n     * An array of objects that describe the cells of the header row, where each object contains:\n     *  value: String containing the value of the cell.\n     *  isNumeric: True if the cell contains a numeric value, false otherwise.\n     *  link: Optional string which provides a link for the cell (to= prop of Link). Set to null for\n     *    no link.\n     */\n    headerRow: PropTypes.array.isRequired,\n    /**\n     * Indicates whether new rows should slide in rather than fade in, expanding when they are\n     * created and collapsing when they are destroyed.\n     */\n    slide: PropTypes.bool,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * The title of the table.\n     */\n    title: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Create a DynamicTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.rows = [];\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    // BUG: On Chrome, screen scrolls when collapsing row is on screen but expanding row is off screen!!!\n    const { breakpoint, columnWidths, footerRow, headerRow, title } = this.props;\n    return (\n      <StyledPaper elevation={1}>\n        <TypographyTitle>{title}</TypographyTitle>\n        <StyledTable>\n          <colgroup>\n            {columnWidths.map((width, index) => {\n              // The column width settings seem to be ignored in many cases, depending on cell\n              // length. That is, when cell lengths are long, the widths are ignored.\n              return (\n                <col key={index} width={width} />\n              );\n            })}\n          </colgroup>\n          <TableHead>\n            <TableRowHeader breakpoint={breakpoint}>\n              {headerRow.map((cell, index) => {\n                return (\n                  // Using index as the key is fine here and for cells in other rows, since we never\n                  // add, remove, reorder, or filter items in the cell arrays.\n                  <TableCellHeader\n                    breakpoint={breakpoint}\n                    key={index}\n                    align={cell.isNumeric ? 'right' : 'inherit'}\n                    padding='checkbox'\n                    size='small'\n                  >\n                  {cell.link != null ?\n                    <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                    cell.value\n                  }\n                  </TableCellHeader>\n                );\n              })}\n            </TableRowHeader>\n          </TableHead>\n          <TableBody>\n            {this.getBodyRowElements()}\n          </TableBody>\n          <TableFooter>\n            <TableRowFooter>\n              {footerRow.map((cell, index) => {\n                return (\n                  <TableCellFooter\n                    breakpoint={breakpoint}\n                    key={index}\n                    align={cell.isNumeric ? 'right' : 'inherit'}\n                    padding='checkbox'\n                    size='small'\n                  >\n                  {cell.link != null ?\n                    <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                    cell.value\n                  }\n                  </TableCellFooter>\n                );\n              })}\n            </TableRowFooter>\n          </TableFooter>\n        </StyledTable>\n      </StyledPaper>\n    );\n  }\n\n  /**\n   * Return the elements for all of the body rows.\n   * @return {Object} The elements for all of the body rows.\n   * @private\n   */\n  getBodyRowElements() {\n    const { breakpoint, getBodyRows, maxRows, slide } = this.props;\n    const rowHeight = breakpoint === Breakpoints.XS ?\n      Constants.TABLE_ROW_HEIGHT_XS : Constants.TABLE_ROW_HEIGHT_SM_AND_UP;\n\n    // Only get new body rows when the Document (web app) is visible. If we do not do this, then the\n    // Transition component can buffer hundreds of row animations if we switch to another browser\n    // tab for an extended period of time, then when our browser tab regains focus, these animations\n    // are run and the web app can become frozen for several minutes.\n    if (document.visibilityState === \"visible\")\n      this.rows = getBodyRows().slice(0, maxRows);\n    \n    if (slide) {\n      // Use a Transition element to expand (and fade in) entering rows and collapse (and fade out)\n      // leaving rows.\n      // BUG: On windows resize to/from XS, row heights are not changed on existing rows!!!\n      return (\n        <Transition\n          items={this.rows}\n          keys={bodyRow => bodyRow.mapKey}\n          from={{ height: 0, opacity: 0 }}\n          enter={{ height: rowHeight, opacity: 1 }}\n          leave={{ height: 0, opacity: 0 }}\n        >\n          {/* Function signature: (item, state, index) => props => ReactNode */}\n          {(bodyRow, state, index) => style => this.getBodyRowElement(bodyRow, state, index, style)}\n        </Transition>\n      );\n    }\n    else {\n      return this.rows.map((bodyRow, index) => {\n        // When not expanding/collapsing rows, use a Fade element to fade in and fade out.\n        return (\n          <Fade\n            key={bodyRow.mapKey}\n            in={true}\n            timeout={500}\n          >\n            {this.getBodyRowElement(bodyRow, 'update', index, { height: rowHeight })}\n          </Fade>\n        );\n      });  \n    }\n  }\n\n  /**\n   * Return the element for the specified body row.\n   * @param {Object} bodyRow Object that describes the body row.\n   * @param {String} state The item's transition state: enter, leave, or update.\n   * @param {Number} rowIndex The item's row index. \n   * @param {Object} style The style to apply to the table cell Grid, specifying the height.\n   * @return {Object} The element for the specified body row.\n   * @private\n   */\n  getBodyRowElement(bodyRow, state, rowIndex, style) {\n    const { breakpoint } = this.props;\n    return (\n      <TableRowBody>\n        {bodyRow.cells.map((cell, index) => {\n          return (\n            <StyledTableCell\n              breakpoint={breakpoint}\n              key={index}\n              padding='checkbox'\n              size='small'\n              // Hide the border on rows that are leaving, so that table height remains consistent.\n              style={state === 'leave' ? {borderBottomStyle: 'hidden'} : null}\n            >\n              <Grid container\n                direction='row'\n                justify={cell.isNumeric ? 'flex-end' : 'flex-start'}\n                alignItems='center'\n                style={style}\n              >\n                {cell.link != null ?\n                  <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                  cell.value\n                }\n              </Grid>\n            </StyledTableCell>\n          );\n        })}\n      </TableRowBody>\n    );\n  }\n}\n\nexport default DynamicTable;\n","/**\n * @file queryBlocks\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get blocks.\n * @return {Array} The array of Block objects.\n */\nconst queryBlocks = gql`\n  query Blocks($first: Int) {\n    blocks(first: $first, orderBy: height_DESC) {\n      id\n      height\n      timestamp\n      numTransactions\n    }\n  }\n`;\n\nexport default queryBlocks;\n","/**\n * @file subscriptionBlock\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL subscription to receive a new block.\n * @return {Object} The new Block object.\n */\nconst subscriptionBlock = gql`\n  subscription {\n    block {\n      node {\n        id\n        height\n        timestamp\n        numTransactions\n      }\n    }\n  }\n`;\n\nexport default subscriptionBlock;\n","/**\n * @file BlocksSlideTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DynamicTable from '../DynamicTable/DynamicTable';\nimport queryBlocks from '../../graphql/queryBlocks';\nimport subscriptionBlock from '../../graphql/subscriptionBlock';\nimport Constants from '../../constants';\n\n/**\n * This component displays a table of Block objects with data retrieved via GraphQL.\n */\nclass BlocksSlideTableWithData extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Callback fired when a new block is added.\n     */\n    handleAddNewBlock: PropTypes.func,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a BlocksSlideTableWithData object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.firstBlockAdded = false;\n    this.staticModeBlockHeight = 0;\n\n    // Bind to make 'this' work in callbacks.\n    this.handleQueryCompleted = this.handleQueryCompleted.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {breakpoint, maxRows} = this.props;\n    return (\n      <Query\n        query={queryBlocks}\n        variables={{ first: maxRows }}\n        onCompleted={this.handleQueryCompleted}\n        pollInterval={Constants.IS_STATIC_MODE ? Constants.STATIC_BLOCK_TIME_MS : null}\n      >\n        {({ loading, error, data, subscribeToMore }) => {\n          const subscribeToNewObjects =\n            Constants.IS_STATIC_MODE ? null : () => this.subscribeToNewObjects(subscribeToMore);\n          if (loading)\n            return (\n              <BlocksSlideTable\n                blocks={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n                loading\n              />\n            );\n          else if (error)\n            return (\n              <BlocksSlideTable\n                blocks={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n                error\n              />\n            );\n          else {\n            // When in static mode, call handleAddNewBlock() when the block height changes. This is\n            // needed because of the following bug:\n            //    https://github.com/apollographql/apollo-client/issues/5531\n            // The bug is that handleQueryCompleted() is not called for pollInterval, so we have to\n            // call handleAddNewBlock() here instead. Calling handleAddNewBlock() in render() is\n            // poor form, since it causes the parent to update state, and would result in the\n            // warning:\n            //    \"Warning: Cannot update during an existing state transition (such as within\n            //    `render`). Render methods should be a pure function of props and state.\"\n            // We avoid this warning by using setTimeout() to delay the call to handleAddNewBlock().\n            if (Constants.IS_STATIC_MODE && this.staticModeBlockHeight !== data.blocks[0].height) {\n              if (this.staticModeBlockHeight && this.props.handleAddNewBlock) // not first query\n                setTimeout(() => { this.props.handleAddNewBlock(data.blocks[0]) });\n              this.staticModeBlockHeight = data.blocks[0].height;\n            }\n\n            return (\n              <BlocksSlideTable\n                blocks={data.blocks}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Callback fired when the Query is completed.\n   * @param {Object} data The query data.\n   * @private\n   */\n  handleQueryCompleted(data) {\n    if (!this.firstBlockAdded && data.blocks.length) {\n      this.firstBlockAdded = true;\n\n      // Add a new block to the parent.\n      if (this.props.handleAddNewBlock)\n        this.props.handleAddNewBlock(data.blocks[0]);\n    }\n    else if (Constants.IS_STATIC_MODE) {\n      // Add a new block to the parent. We always do this for static mode, so that the Query\n      // pollInterval triggers a handleAddNewBlock() call, since subscribeToNewObjects() does not\n      // work in static mode.\n      if (this.props.handleAddNewBlock)\n        this.props.handleAddNewBlock(data.blocks[0]);\n    }\n  }\n\n  /**\n   * Subscribe to receive new objects of the body of the table using subscribeToMore and update the\n   * query's store by merging the subscription data with the previous data.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionBlock,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n\n        // Add a new block to the parent.\n        if (this.props.handleAddNewBlock)\n          this.props.handleAddNewBlock(subscriptionData.data.block.node);\n\n        // Add the new block to the front of the blocks[] array, keeping at most this.props.maxRows\n        // blocks.\n        return {\n          blocks: [\n            subscriptionData.data.block.node,\n            ...(prev != null ? prev.blocks : []) // check if prev is undefined\n          ].slice(0, this.props.maxRows)\n        };\n      }\n    });\n\n  }\n}\n\n/**\n * This component displays a table of Block objects where new blocks slide in.\n */\nclass BlocksSlideTable extends Component {\n  static propTypes = {\n    /**\n     * Array of block objects.\n     */\n    blocks: PropTypes.array.isRequired,\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * Function to subscribe to receive new objects of the body of the table.\n     */\n    subscribeToNewObjects: PropTypes.func\n  };\n  \n  /**\n   * Create a BlocksSlideTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Subscribe to receive new objects of the body of the table.\n    if (this.props.subscribeToNewObjects)\n      this.props.subscribeToNewObjects();\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, error, loading, maxRows } = this.props;\n    return (\n      <DynamicTable\n        breakpoint={breakpoint}\n        title='Blocks'\n        columnWidths={['30%', '40%', '30%']}\n        maxRows={maxRows}\n        headerRow={[\n          {value: 'Height', isNumeric: false},\n          {value: 'Timestamp', isNumeric: false},\n          {value: 'Transactions', isNumeric: true}\n        ]}\n        getBodyRows={this.getBodyRows}\n        footerRow={[\n          {value: null, isNumeric: false},\n          {value: null, isNumeric: false},\n          {value: '(simulated data)', isNumeric: true}\n        ]}\n        slide={!loading && !error}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows() {\n    const { blocks, loading, error } = this.props;\n    if (loading)\n      return [{mapKey: 'LOADING', cells: [{value: 'Loading...', isNumeric: false, link: null}]}];\n    else if (error)\n      return [{mapKey: 'ERROR', cells: [{value: 'Network error', isNumeric: false, link: null}]}];\n    else {\n      let bodyRows = blocks.map((block) => {\n        const date = new Date(block.timestamp);\n        return {\n          mapKey: block.height,\n          cells: [\n            {\n              value: block.height.toLocaleString(),\n              isNumeric: false,\n              link: `/block/${block.height}`\n            },\n            {value: date.toLocaleString(), isNumeric: false, link: null},\n            {value: block.numTransactions.toLocaleString(), isNumeric: true, link: null}\n          ]\n        };\n      });\n      return bodyRows;\n    }\n  }\n}\n\nexport default BlocksSlideTableWithData;\n","/**\n * @file queryTransactions\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get transactions.\n * @return {Array} The array of Transaction objects.\n */\nconst queryTransactions = gql`\n  query Transactions($first: Int) {\n    transactions(first: $first, orderBy: createdAt_DESC) {\n      id\n      hash\n      amount\n    }\n  }\n`;\n\nexport default queryTransactions;\n","/**\n * @file subscriptionTransaction\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL subscription to receive a new transaction.\n * @return {Object} The new Transaction object.\n */\nconst subscriptionTransaction = gql`\n  subscription {\n    transaction {\n      node {\n        id\n        hash\n        amount\n      }\n    }\n  }\n`;\n\nexport default subscriptionTransaction;\n","/**\n * @file getHashString\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\n/**\n * Return a string containing the hash which has been modified for display.\n * @param {String} hash The hash to modify for display.\n * @param {Number} maxLength The maximum length of the hash string.\n * @return {Array} A string containing the hash which has been modified for display.\n * @protected\n */\nexport default function getHashString(hash, maxLength) {\n  if (maxLength === undefined)\n    maxLength = 22;\n  hash = \"0x\" + hash;\n  if (maxLength !== 0 && hash.length > maxLength) {\n    const first = hash.substring(0, maxLength - 4);\n    const last = hash.substr(hash.length - 4);\n    return first + \"...\" + last;\n  }\n  else\n    return hash;\n}\n\n","/**\n * @file TransactionsFadeTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DynamicTable from '../DynamicTable/DynamicTable';\nimport queryTransactions from '../../graphql/queryTransactions';\nimport subscriptionTransaction from '../../graphql/subscriptionTransaction';\nimport Constants from '../../constants';\nimport getHashString from '../../utils/getHashString';\n\n/**\n * This component displays a table of Transaction objects with data retrieved via GraphQL.\n */\nclass TransactionsFadeTableWithData extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * The current block height, used to trigger static mode refetches.\n     */\n    staticModeBlockHeight: PropTypes.number\n  };\n\n  /**\n   * Create a TransactionsFadeTableWithData object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.staticModeBlockHeight = 0;\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {breakpoint, maxRows, staticModeBlockHeight} = this.props;\n    return (\n      <Query\n        query={queryTransactions}\n        variables={{ first: maxRows }}\n      >\n        {({ loading, error, data, refetch, subscribeToMore }) => {\n          const subscribeToNewObjects =\n            Constants.IS_STATIC_MODE ? null : () => this.subscribeToNewObjects(subscribeToMore);\n\n          // When in static mode, refetch transactions when the block height changes.\n          if (Constants.IS_STATIC_MODE && this.staticModeBlockHeight !== staticModeBlockHeight) {\n            this.staticModeBlockHeight = staticModeBlockHeight;\n            refetch();\n          }\n\n          if (loading)\n            return (\n              <TransactionsFadeTable\n                transactions={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n                loading\n              />\n            );\n          else if (error)\n            return (\n              <TransactionsFadeTable\n                transactions={[]}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n                error\n              />\n            );\n          else {\n            return (\n              <TransactionsFadeTable\n                transactions={data.transactions}\n                subscribeToNewObjects={subscribeToNewObjects}\n                breakpoint={breakpoint}\n                maxRows={maxRows}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new objects of the body of the table using subscribeToMore and update the\n   * query's store by merging the subscription data with the previous data.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionTransaction,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n\n        // Add the new transaction to the front of the transactions[] array, keeping at most\n        // this.props.maxRows transactions.\n        return {\n          transactions: [\n            subscriptionData.data.transaction.node,\n            ...(prev != null ? prev.transactions : []) // check if prev is undefined\n          ].slice(0, this.props.maxRows)\n        };\n      }\n    });\n  }\n}\n\n/**\n * This component displays a table of Transaction objects where new transacations fade in.\n */\nclass TransactionsFadeTable extends Component { \n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * Function to subscribe to receive new objects of the body of the table.\n     */\n    subscribeToNewObjects: PropTypes.func,\n    /**\n     * Array of transaction objects.\n     */\n    transactions: PropTypes.array.isRequired\n  };\n  \n  /**\n   * Create a TransactionsFadeTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Subscribe to receive new objects of the body of the table.\n    if (this.props.subscribeToNewObjects)\n      this.props.subscribeToNewObjects();\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, maxRows } = this.props;\n    return (\n      <DynamicTable\n        breakpoint={breakpoint}\n        title='Transactions'\n        columnWidths={['60%', '40%']}\n        maxRows={maxRows}\n        headerRow={[\n          {value: 'Hash', isNumeric: false},\n          {value: 'Amount', isNumeric: true}\n        ]}\n        getBodyRows={this.getBodyRows}\n        footerRow={[\n          {value: null, isNumeric: false},\n          {value: '(simulated data)', isNumeric: true}\n        ]}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows() {\n    const { transactions, loading, error } = this.props;\n    if (loading)\n      return [{mapKey: 'LOADING', cells: [{value: 'Loading...', isNumeric: false, link: null}]}];\n    else if (error)\n      return [{mapKey: 'ERROR', cells: [{value: 'Network error', isNumeric: false, link: null}]}];\n    else {\n      let bodyRows = transactions.map((transaction) => {\n        return {\n          mapKey: transaction.hash,\n          cells: [\n            {\n              value: getHashString(transaction.hash),\n              isNumeric: false,\n              link: `/tx/0x${transaction.hash}`\n            },\n            {value: transaction.amount.toFixed(8).toString() + ' ABC', isNumeric: true, link: null}\n          ]\n        };\n      });\n      return bodyRows;\n    }\n  }\n}\n\nexport default TransactionsFadeTableWithData;\n","/**\n * @file DashCard\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Paper,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport Constants from '../../constants';\n\nconst GridNoWrap = styled(Grid)`\n  && {\n    /* Setting min-width to 0px allows the Grid to narrow past the implied width of its children. */\n    min-width: 0px;\n  }\n`;\n\nconst SvgIconCard = styled(SvgIcon)`\n  && {\n    /* The combination of margin, padding, and font-size explicitly set the height of the card. */\n    margin: 30px;\n    font-size: 42px;\n    opacity: ${props => props.theme.colorDashCardIconOpacity};\n    color: ${props => props.theme.colorDashCardIcon[props.cardindex]};\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-weight: 300;\n    font-size: 14px;\n  }\n`;\n\nconst TypographyValue = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-weight: 200;\n    font-size: 28px;\n  }\n`;\n\n/**\n * This component displays a dashboard card.\n */\nclass DashCard extends Component { \n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string,\n    /**\n     * The d attribute of the SvgIcon path.\n     */\n    svgIconPath: PropTypes.string.isRequired,\n    /**\n     * Function to subscribe to receive new objects of the card using GraphQL.\n     */\n    subscribeToNewObjects: PropTypes.func,\n    /**\n     * The title string of the card.\n     */\n    title: PropTypes.string.isRequired,\n    /**\n     * The value string of the card.\n     */\n    value: PropTypes.string.isRequired\n  };\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Subscribe to receive new objects of the card using GraphQL.\n    if (this.props.subscribeToNewObjects)\n      this.props.subscribeToNewObjects();\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let {\n      cardIndex,\n      className,\n      svgIconPath,\n      title,\n      value\n    } = this.props;\n\n    return (\n      <Paper className={className} elevation={1}>\n        <Grid container direction='row' justify='flex-start' alignItems='center' wrap='nowrap'>\n          <Grid item>\n            <SvgIconCard cardindex={cardIndex}>\n              <path d={svgIconPath} />\n            </SvgIconCard>\n          </Grid>\n          <GridNoWrap container direction='column' justify='center' alignItems='flex-start'>\n            {/* The usage of Grid elements here is required to get Typography noWrap to work. */}\n            <Grid container direction='row' justify='flex-start' alignItems='center'>\n              <GridNoWrap item>\n                <TypographyTitle className={className} noWrap>\n                  {title}\n                </TypographyTitle>\n              </GridNoWrap>\n            </Grid>\n            <Grid container direction='row' justify='flex-start' alignItems='center'>\n              <GridNoWrap item>\n                <TypographyValue className={className} noWrap>\n                  {value}\n                </TypographyValue>\n              </GridNoWrap>\n            </Grid>\n          </GridNoWrap>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default DashCard;\n","/**\n * @file queryNetworkStats\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get the current NetworkStats object.\n * @return {Number} The current NetworkStats object.\n */\nconst queryNetworkStats = gql`\n  {\n    networkStats {\n      id\n      secondsPerBlock\n      transactionsPerSecond\n    }\n  }\n`;\n\nexport default queryNetworkStats;\n","/**\n * @file subscriptionNetworkStats\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL subscription to receive a NetworkStats updates.\n * @return {Object} The updated NetworkStats object.\n */\nconst subscriptionNetworkStats = gql`\n  subscription {\n    networkStats {\n      node {\n        id\n        secondsPerBlock\n        transactionsPerSecond\n      }\n    }\n  }\n`;\n\nexport default subscriptionNetworkStats;\n","/**\n * @file BlockTimeCard\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DashCard from '../DashCard/DashCard';\nimport queryNetworkStats from '../../graphql/queryNetworkStats';\nimport subscriptionNetworkStats from '../../graphql/subscriptionNetworkStats';\nimport Constants from '../../constants';\n\n/**\n * This component displays a dashboard card with seconds per block retrieved via GraphQL.\n */\nclass BlockTimeCard extends Component {\n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let { cardIndex, className } = this.props;\n    \n    return (\n      <Query\n        query={queryNetworkStats}\n        pollInterval={\n          Constants.IS_STATIC_MODE ? Constants.STATIC_NETWORK_STATS_POLL_INTERVAL_MS : null}\n      >\n      {({ loading, error, data, subscribeToMore }) => {\n        const subscribeToNewObjects =\n          Constants.IS_STATIC_MODE ? null : () => this.subscribeToNewObjects(subscribeToMore);\n        let secondsPerBlock;\n        if (loading)\n          secondsPerBlock = 'Loading...';\n        else if (error)\n          secondsPerBlock = 'Network error';\n        else\n          secondsPerBlock = data.networkStats.secondsPerBlock.toFixed(1) + ' s';\n        return (\n          <DashCard\n            className={className}\n            cardIndex={cardIndex}\n            title='Avg Block Time'\n            value={secondsPerBlock}\n            svgIconPath={Constants.ICON_SVG_PATH_BLOCK_TIME}\n            subscribeToNewObjects={subscribeToNewObjects}\n          />\n        );\n      }}\n    </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new NetworkStats objects using subscribeToMore, and update the query's\n   * store by replacing the previous NetworkStats Object with the new NetworkStats object.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionNetworkStats,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n        return {networkStats: subscriptionData.data.networkStats.node};\n      }\n    });\n  }\n}\n\nexport default BlockTimeCard;\n","/**\n * @file TransactionsCard\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DashCard from '../DashCard/DashCard';\nimport queryNetworkStats from '../../graphql/queryNetworkStats';\nimport subscriptionNetworkStats from '../../graphql/subscriptionNetworkStats';\nimport Constants from '../../constants';\n\n/**\n * This component displays a dashboard card with transactions per second retrieved via GraphQL.\n */\nclass TransactionsCard extends Component {\n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let { cardIndex, className } = this.props;\n    \n    return (\n      <Query\n        query={queryNetworkStats}\n        pollInterval={\n          Constants.IS_STATIC_MODE ? Constants.STATIC_NETWORK_STATS_POLL_INTERVAL_MS : null}\n      >\n      {({ loading, error, data, subscribeToMore }) => {\n        const subscribeToNewObjects =\n          Constants.IS_STATIC_MODE ? null : () => this.subscribeToNewObjects(subscribeToMore);\n        let transactionsPerSecond;\n        if (loading)\n          transactionsPerSecond = 'Loading...';\n        else if (error)\n          transactionsPerSecond = 'Network error';\n        else\n          transactionsPerSecond = data.networkStats.transactionsPerSecond.toFixed(1) + ' tps';\n        return (\n          <DashCard\n            className={className}\n            cardIndex={cardIndex}\n            title='Avg Transactions'\n            value={transactionsPerSecond}\n            svgIconPath={Constants.ICON_SVG_PATH_TPS}\n            subscribeToNewObjects={subscribeToNewObjects}\n          />\n        );\n      }}\n    </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new NetworkStats objects using subscribeToMore, and update the query's\n   * store by replacing the previous NetworkStats Object with the new NetworkStats object.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionNetworkStats,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n        return {networkStats: subscriptionData.data.networkStats.node};\n      }\n    });\n  }\n}\n\nexport default TransactionsCard;\n","/**\n * @file queryPrice\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get the the current price.\n * @return {Object} The current Price object.\n */\nconst queryPrice = gql`\n  {\n    price {\n      id\n      price\n    }\n  }\n`;\n\nexport default queryPrice;\n","/**\n * @file subscriptionPrice\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL subscription to receive price updates.\n * @return {Object} The updated Price object.\n */\nconst subscriptionPrice = gql`\n  subscription {\n    price {\n      node {\n        id\n        price\n      }\n    }\n  }\n`;\n\nexport default subscriptionPrice;\n","/**\n * @file PriceCard\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport DashCard from '../DashCard/DashCard';\nimport queryPrice from '../../graphql/queryPrice';\nimport subscriptionPrice from '../../graphql/subscriptionPrice';\nimport Constants from '../../constants';\n\n/**\n * This component displays a dashboard card with price data retrieved via GraphQL.\n */\nclass PriceCard extends Component {\n  static propTypes = {\n    /**\n     * The index of the card. Used for theming.\n     */\n    cardIndex: PropTypes.number.isRequired,\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    let { cardIndex, className } = this.props;\n    \n    return (\n      <Query\n        query={queryPrice}\n        pollInterval={\n          Constants.IS_STATIC_MODE ? Constants.STATIC_PRICE_POLL_INTERVAL_MS : null}\n      >\n        {({ loading, error, data, subscribeToMore }) => {\n          const subscribeToNewObjects =\n            Constants.IS_STATIC_MODE ? null : () => this.subscribeToNewObjects(subscribeToMore);\n          let price;\n          if (loading)\n            price = 'Loading...';\n          else if (error)\n            price = 'Network error';\n          else\n            price = '$' + data.price.price.toFixed(2);\n          return (\n            <DashCard\n              className={className}\n              cardIndex={cardIndex}\n              title='Price'\n              value={price}\n              svgIconPath={Constants.ICON_SVG_PATH_PRICE}\n              subscribeToNewObjects={subscribeToNewObjects}\n            />\n          );\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Subscribe to receive new Price objects using subscribeToMore, and update the query's store by\n   * replacing the previous Price Object with the new Price object.\n   * @param {Function} subscribeToMore Function which gets called every time the subscription\n   *  returns.\n   * @private\n   */\n  subscribeToNewObjects(subscribeToMore) {\n    subscribeToMore({\n      document: subscriptionPrice,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data)\n          return prev;\n        return {price: subscriptionData.data.price.node};\n      }\n    });\n  }\n}\n\nexport default PriceCard;\n","/**\n * @file AreaChart\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Paper,\n  Typography\n} from '@material-ui/core';\nimport shadows from '@material-ui/core/styles/shadows';\nimport {\n  Area,\n  AreaChart as RechartsAreaChart,\n  CartesianGrid,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis\n} from 'recharts';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst StyledPaper = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorChartBackground};\n    padding-right: 16px;\n    padding-bottom: 16px;\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    color: ${props => props.theme.colorBodyText};\n    padding-top: 8px;\n    padding-bottom: 8px;\n    padding-left: 15px;\n    text-align: left;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    font-weight: 300;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n      `\n    }\n  }\n`;\n\nconst StyledAreaChart = styled(RechartsAreaChart)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_CAPTION};\n    font-weight: 400;\n  }\n`;\n\n/**\n * Base class that implements an area chart component.\n */\nclass AreaChart extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, chartHeight, theme } = this.props;\n    const data = this.getData();\n    const tooltipElevation = 2;\n    return (\n      <StyledPaper elevation={1}>\n        <TypographyTitle breakpoint={breakpoint}>{this.getTitle()}</TypographyTitle>\n        { data.length > 0 &&\n          <ResponsiveContainer width='100%' height={chartHeight}>\n            <StyledAreaChart\n              data={data}\n              margin={{ top: 0, right: 0, left: 4, bottom: 0 }}\n              // Setting width to 0 here is a workaround for a problem where ResponsiveContainer\n              // does not resize correctly from large to small.\n              // https://github.com/recharts/recharts/issues/172\n              style={{width: 0}}\n            >\n              <defs>\n                <linearGradient id='colorY' x1='0' y1='0' x2='0' y2='1'>\n                  <stop offset='5%' stopColor={theme.colorChartLine} stopOpacity={0.2}/>\n                  <stop offset='95%' stopColor={theme.colorChartLine} stopOpacity={0.1}/>\n                </linearGradient>\n              </defs>\n              <CartesianGrid\n                stroke={theme.colorChartGrid}\n                vertical={false}\n              />\n              <XAxis\n                dataKey={this.getDataKeyX()}\n                stroke={theme.colorChartAxes}\n                tick={{ fill: theme.colorChartText }}\n                tickFormatter={(tick) => this.getGetTickX(tick)}\n                tickMargin={8}\n                tickSize={6}\n              />\n              <YAxis\n                domain={[\n                  dataMin => this.getDomainMinY(dataMin),\n                  dataMax => this.getDomainMaxY(dataMax)\n                ]}\n                stroke={theme.colorChartAxes}\n                tick={{ fill: theme.colorChartText }}\n                tickFormatter={(tick) => this.getGetTickY(tick)}\n                tickLine={false}\n              />\n              <Tooltip\n                labelFormatter={(value) => this.getGetTooltipX(value)}\n                formatter={(value) => [this.getGetTooltipY(value)]}\n                contentStyle={{\n                  background: theme.colorChartTooltipBackground,\n                  border: null,\n                  borderRadius: 4,\n                  fontSize: Constants.MATERIAL_FONT_SIZE_BODY_2,\n                  boxShadow: shadows[tooltipElevation]\n                }}\n                itemStyle={{ color: theme.colorChartLine }}\n                labelStyle={{ color: theme.colorBodyText }}\n                cursor={{ stroke: theme.colorChartGrid }}\n                animationDuration={300}\n              />\n              <Area\n                type='monotone'\n                dataKey={this.getDataKeyY()}\n                stroke={theme.colorChartLine}\n                strokeWidth={2}\n                fillOpacity={1}\n                fill='url(#colorY)'\n                activeDot={{ stroke: theme.colorChartActiveDotStroke, r: 5 }}\n                animationDuration={1000}\n              />\n            </StyledAreaChart>\n          </ResponsiveContainer>\n        }\n      </StyledPaper>\n    );\n  }\n\n  /**\n   * Return the title of the chart.\n   * @return {String} The title of the chart.\n   * @protected\n   */\n  getTitle() {\n    throw new Error('AreaChart.getTitle() not implemented.');\n  }\n\n  /**\n   * Return an array of objects that describe the chart data.\n   * @return {Array} An array of objects that describe the chart data.\n   * @protected\n   */\n  getData() {\n    throw new Error('AreaChart.getData() not implemented.');\n  }\n\n  /**\n   * Return the key of the data to be displayed in the x-axis.\n   * @return {String} The key of the data to be displayed in the x-axis.\n   * @protected\n   */\n  getDataKeyX() {\n    throw new Error('AreaChart.getDataKeyX() not implemented.');\n  }\n\n  /**\n   * Return the key of the data to be displayed in the y-axis.\n   * @return {String} The key of the data to be displayed in the y-axis.\n   * @protected\n   */\n  getDataKeyY() {\n    throw new Error('AreaChart.getDataKeyY() not implemented.');\n  }\n\n  /**\n   * Return the minimum value of the domain for the Y-axis.\n   * @param {dataMin} value The minumum value of the data.\n   * @return {String} The minimum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMinY(dataMin) {\n    throw new Error('AreaChart.getDomainMinY() not implemented.');\n  }\n\n  /**\n   * Return the maximum value of the domain for the Y-axis.\n   * @param {dataMax} value The maximum value of the data.\n   * @return {String} The maximum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMaxY(dataMax) {\n    throw new Error('AreaChart.getDomainMaxY() not implemented.');\n  }\n\n  /**\n   * Return a string for the x-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tick label.\n   * @protected\n   */\n  getGetTickX(value) {\n    throw new Error('AreaChart.getGetTickX() not implemented.');\n  }\n\n  /**\n   * Return a string for the y-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tick label.\n   * @protected\n   */\n  getGetTickY(value) {\n    throw new Error('AreaChart.getGetTickY() not implemented.');\n  }\n\n  /**\n   * Return a string for the x-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipX(value) {\n    throw new Error('AreaChart.getGetTooltipX() not implemented.');\n  }\n\n  /**\n   * Return a string for the y-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipY(value) {\n    throw new Error('AreaChart.getGetTooltipY() not implemented.');\n  }\n}\n\nexport default AreaChart;\n","/**\n * @file queryDailyNetworkStatses\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get daily network stats for the specified number of days.\n * @return {Array} The array of DailyNetworkStats objects.\n */\nconst queryDailyNetworkStatses = gql`\n  query DailyNetworkStatses($last: Int, $skip: Int) {\n    dailyNetworkStatses(last: $last, skip: $skip, orderBy: date_ASC) {\n      id\n      date\n      numBlocks\n      numTransactions\n    }\n  }\n`;\n\nexport default queryDailyNetworkStatses;\n","/**\n * @file TransactionsChart\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { Query } from \"react-apollo\";\nimport AreaChart from '../AreaChart/AreaChart';\nimport queryDailyNetworkStatses from '../../graphql/queryDailyNetworkStatses';\n\n/**\n * This component displays a number of transactions chart with data retrieved via GraphQL.\n */\nclass TransactionsChartWithData extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, chartHeight, theme } = this.props;\n    return (\n      <Query\n        query={queryDailyNetworkStatses}\n        // Get the last 14 days.\n        variables={{ last: 14 }}\n      >\n        {({ loading, error, data }) => {\n          if (loading) {\n            return (\n              <TransactionsChart\n                dailyNetworkStatses={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                loading\n                breakpoint={breakpoint}\n              />\n            );\n          }\n          else if (error) {\n            return (\n              <TransactionsChart\n                dailyNetworkStatses={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                error\n                breakpoint={breakpoint}\n              />\n            );\n          }\n          else {\n            return (\n              <TransactionsChart\n                dailyNetworkStatses={data.dailyNetworkStatses}\n                chartHeight={chartHeight}\n                theme={theme}\n                breakpoint={breakpoint}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n}\n\n/**\n * This component displays a table of Transaction objects.\n */\nclass TransactionsChart extends AreaChart { \n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * Array of DailyNetworkStatses objects.\n     */\n    dailyNetworkStatses: PropTypes.array.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n  \n  /**\n   * Return the title of the chart.\n   * @return {String} The title of the chart.\n   * @protected\n   */\n  getTitle() {\n    const { error } = this.props;\n    let title = 'Transaction History';\n    if (error)\n      title += ' - Network Error'\n    return title;\n  }\n\n  /**\n   * Return an array of objects that describe the chart data.\n   * @return {Array} An array of objects that describe the chart data.\n   * @protected\n   */\n  getData() {\n    const { dailyNetworkStatses } = this.props;\n    return dailyNetworkStatses;\n  }\n\n  /**\n   * Return the key of the data to be displayed in the x-axis.\n   * @return {String} The key of the data to be displayed in the x-axis.\n   * @protected\n   */\n  getDataKeyX() {\n    return 'date';\n  }\n\n  /**\n   * Return the key of the data to be displayed in the y-axis.\n   * @return {String} The key of the data to be displayed in the y-axis.\n   * @protected\n   */\n  getDataKeyY() {\n    return 'numTransactions';\n  }\n\n  /**\n   * Return the minimum value of the domain for the Y-axis.\n   * @param {dataMin} value The minumum value of the data.\n   * @return {String} The minimum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMinY(dataMin) {\n    return Math.floor(dataMin / 10000) * 10000;\n  }\n\n  /**\n   * Return the maximum value of the domain for the Y-axis.\n   * @param {dataMax} value The maximum value of the data.\n   * @return {String} The maximum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMaxY(dataMax) {\n    return Math.ceil(dataMax / 10000) * 10000;\n  }\n\n  /**\n   * Return a string for the x-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tick label.\n   * @protected\n   */\n  getGetTickX(value) {\n    return new Date(value).toLocaleDateString('default', { timeZone: 'UTC' });\n  }\n\n  /**\n   * Return a string for the y-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tick label.\n   * @protected\n   */\n  getGetTickY(value) {\n    if (value >= 1000) {\n      const k = value / 1000;\n      return k.toFixed(Number.isInteger(k) ? 0 : 1) + 'k';\n    }\n    else\n      return value;\n  }\n\n  /**\n   * Return a string for the x-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipX(value) {\n    return new Date(value).toLocaleDateString('default', { timeZone: 'UTC' });\n  }\n\n  /**\n   * Return a string for the y-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipY(value) {\n    return `Transactions: ${value.toLocaleString()}`;\n  }\n}\n\n// Use the withTheme HOC so that we can use the current theme outside styled components.\nexport default withTheme(TransactionsChartWithData);\n","/**\n * @file queryCandles\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get price OHLCV candles for the specified date range.\n * @return {Array} The array of Candle objects.\n */\nconst queryCandles = gql`\n  query Candles($start: DateTime!, $end: DateTime!) {\n    candles(start: $start, end: $end) {\n      timestamp\n      open\n      high\n      low\n      close\n      volume\n    }\n  }\n`;\n\nexport default queryCandles;\n","/**\n * @file PriceChart\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTheme } from 'styled-components';\nimport { Query } from \"react-apollo\";\nimport AreaChart from '../AreaChart/AreaChart';\nimport queryCandles from '../../graphql/queryCandles';\n\n/**\n * This component displays a chart of Candle objects with data retrieved via GraphQL.\n */\nclass PriceChartWithData extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Create a PriceChartWithData object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n \n    this.startDate = new Date();\n    this.startDate.setDate(this.startDate.getDate() - 14);\n    this.endDate = new Date();\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, chartHeight, theme } = this.props;\n    return (\n      <Query\n        query={queryCandles}\n        variables={{ start: this.startDate.toISOString(), end: this.endDate.toISOString() }}\n      >\n        {({ loading, error, data }) => {\n          if (loading) {\n            return (\n              <PriceChart\n                candles={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                loading\n                breakpoint={breakpoint}\n              />\n            );\n          }\n          else if (error) {\n            return (\n              <PriceChart\n                candles={[]}\n                chartHeight={chartHeight}\n                theme={theme}\n                error\n                breakpoint={breakpoint}\n              />\n            );\n          }\n          else {\n            return (\n              <PriceChart\n                candles={data.candles}\n                chartHeight={chartHeight}\n                theme={theme}\n                breakpoint={breakpoint}\n              />\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n}\n\n/**\n * This component displays a table of Transaction objects.\n */\nclass PriceChart extends AreaChart { \n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Array of Candle objects.\n     */\n    candles: PropTypes.array.isRequired,\n    /**\n     * The height of the chart (not including the title).\n     */\n    chartHeight: PropTypes.number.isRequired,\n    /**\n     * Boolean indicating whether an error occurred with the GraphQL query.\n     */\n    error: PropTypes.bool,\n    /**\n     * Boolean indicating whether the GraphQL query is in progress.\n     */\n    loading: PropTypes.bool,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n  \n  /**\n   * Return the title of the chart.\n   * @return {String} The title of the chart.\n   * @protected\n   */\n  getTitle() {\n    const { error } = this.props;\n    let title = 'Price History';\n    if (error)\n      title += ' - Network Error'\n    return title;\n  }\n\n  /**\n   * Return an array of objects that describe the chart data.\n   * @return {Array} An array of objects that describe the chart data.\n   * @protected\n   */\n  getData() {\n    const { candles } = this.props;\n    return candles;\n  }\n\n  /**\n   * Return the key of the data to be displayed in the x-axis.\n   * @return {String} The key of the data to be displayed in the x-axis.\n   * @protected\n   */\n  getDataKeyX() {\n    return 'timestamp';\n  }\n\n  /**\n   * Return the key of the data to be displayed in the y-axis.\n   * @return {String} The key of the data to be displayed in the y-axis.\n   * @protected\n   */\n  getDataKeyY() {\n    return 'close';\n  }\n\n  /**\n   * Return the minimum value of the domain for the Y-axis.\n   * @param {dataMin} value The minumum value of the data.\n   * @return {String} The minimum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMinY(dataMin) {\n    return Math.floor(dataMin);\n  }\n\n  /**\n   * Return the maximum value of the domain for the Y-axis.\n   * @param {dataMax} value The maximum value of the data.\n   * @return {String} The maximum value of the domain for the Y-axis.\n   * @protected\n   */\n  getDomainMaxY(dataMax) {\n    return Math.ceil(dataMax);\n  }\n\n  /**\n   * Return a string for the x-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tick label.\n   * @protected\n   */\n  getGetTickX(value) {\n    return new Date(value).toLocaleDateString('default', { timeZone: 'UTC' });\n  }\n\n  /**\n   * Return a string for the y-axis tick label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tick label.\n   * @protected\n   */\n  getGetTickY(value) {\n    return `$${value.toFixed(2)}`;\n  }\n\n  /**\n   * Return a string for the x-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the x-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipX(value) {\n    return new Date(value).toLocaleDateString('default', { timeZone: 'UTC' });\n  }\n\n  /**\n   * Return a string for the y-axis tooltip label corresponding to the specified value.\n   * @param {Any} value The value of the data.\n   * @return {String} The string for the y-axis tooltip label.\n   * @protected\n   */\n  getGetTooltipY(value) {\n    return `ABC Price: $${value.toFixed(2)}`;\n  }\n}\n\n// Use the withTheme HOC so that we can use the current theme outside styled components.\nexport default withTheme(PriceChartWithData);\n","/**\n * @file HomePage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport Fade from 'react-reveal/Fade';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport BlocksSlideTable from '../BlocksSlideTable/BlocksSlideTable';\nimport TransactionsFadeTable from '../TransactionsFadeTable/TransactionsFadeTable';\nimport DashCard from '../DashCard/DashCard';\nimport BlockTimeCard from '../BlockTimeCard/BlockTimeCard';\nimport TransactionsCard from '../TransactionsCard/TransactionsCard';\nimport PriceCard from '../PriceCard/PriceCard';\nimport TransactionsChart from '../TransactionsChart/TransactionsChart';\nimport PriceChart from '../PriceChart/PriceChart';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-left: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-right: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridSectionTables = styled(GridSection)`\n  && {\n    padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n  }\n`;\n\nconst GridCard = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        width: calc(25% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP*3/4 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.MD || breakpoint === Breakpoints.SM) && `\n        width: calc(50% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP/2 + 'px'});\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst GridChart = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG || breakpoint === Breakpoints.MD) && `\n        width: calc(50% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP/2 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst GridTable = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG || breakpoint === Breakpoints.MD) && `\n        width: calc(50% - ${Constants.HOME_PAGE_MARGIN_SM_AND_UP/2 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst CardBlocks = styled(DashCard)`\n  && {\n    background: ${props => props.theme.colorDashCardBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst CardBlockTime = styled(BlockTimeCard)`\n  && {\n    background: ${props => props.theme.colorDashCardBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst CardTransactions = styled(TransactionsCard)`\n  && {\n    background: ${props => props.theme.colorDashCardBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\nconst CardPrice = styled(PriceCard)`\n  && {\n    background: ${props => props.theme.colorDashCardBackground};\n    color: ${props => props.theme.colorBodyText};\n  }\n`;\n\n/**\n * Component for the home page.\n */\nclass HomePage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a HomePage object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      blockHeight: 0\n    };\n\n    // Bind to make 'this' work in callbacks.\n    this.handleAddNewBlock = this.handleAddNewBlock.bind(this);\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        {this.getSectionCards()}\n        {this.getSectionCharts()}\n        {this.getSectionTables()}\n      </div>\n    );\n  }\n\n  /**\n   * Return the elements for the Cards section based on the current breakpoint.\n   * @return {Object} The elements for the Cards section based on the current breakpoint.\n   * @private\n   */\n  getSectionCards()\n  {\n    const { breakpoint } = this.props;\n    const { blockHeight } = this.state;\n\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            timeout={500}\n          >\n            <CardBlocks\n              cardIndex={0}\n              title='Blocks'\n              value={blockHeight ? blockHeight.toLocaleString() : 'Loading...'}\n              svgIconPath={Constants.ICON_SVG_PATH_BLOCK}\n            />\n          </Fade>\n        </GridCard>\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            delay={50}\n            timeout={500}\n          >\n            <CardBlockTime cardIndex={1} />\n          </Fade>\n        </GridCard>\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            delay={100}\n            timeout={500}\n          >\n            <CardTransactions cardIndex={2} />\n          </Fade>\n        </GridCard>\n        <GridCard item breakpoint={breakpoint}>\n          <Fade\n            delay={150}\n            timeout={500}\n          >\n            <CardPrice cardIndex={3} />\n          </Fade>\n        </GridCard>\n      </GridSection>\n    );\n  }\n\n  /**\n   * Return the elements for the Charts section based on the current breakpoint.\n   * @return {Object} The elements for the Charts section based on the current breakpoint.\n   * @private\n   */\n  getSectionCharts()\n  {\n    const { breakpoint } = this.props;\n\n    const chartHeight = 352;\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridChart item breakpoint={breakpoint}>\n          <Fade\n            timeout={500}\n          >\n            <TransactionsChart chartHeight={chartHeight} breakpoint={breakpoint} />\n          </Fade>\n        </GridChart>\n        <GridChart item breakpoint={breakpoint}>\n          <Fade\n            delay={50}\n            timeout={500}\n          >\n            <PriceChart chartHeight={chartHeight} breakpoint={breakpoint} />\n          </Fade>\n        </GridChart>\n      </GridSection>\n    );\n  }\n\n  /**\n   * Return the elements for the Tables section based on the current breakpoint.\n   * @return {Object} The elements for the Tables section based on the current breakpoint.\n   * @private\n   */\n  getSectionTables()\n  {\n    const { breakpoint } = this.props;\n    const { blockHeight } = this.state;\n\n    return (\n      <GridSectionTables container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridTable item breakpoint={breakpoint}>\n          <Fade\n            timeout={500}\n          >\n            <BlocksSlideTable\n              breakpoint={breakpoint}\n              maxRows={8}\n              handleAddNewBlock={this.handleAddNewBlock}\n            />\n          </Fade>\n        </GridTable>\n        <GridTable item breakpoint={breakpoint}>\n          <Fade\n            delay={50}\n            timeout={500}\n          >\n            <TransactionsFadeTable\n              breakpoint={breakpoint}\n              maxRows={8}\n              staticModeBlockHeight={Constants.IS_STATIC_MODE ? blockHeight : null}\n            />\n          </Fade>\n        </GridTable>\n      </GridSectionTables>\n    );\n  }\n\n  /**\n   * Callback fired when a block is added.\n   * @param {Object} block The block object being added.\n   * @private\n   */\n  handleAddNewBlock(block) {\n    this.setState({\n      blockHeight: block.height\n    });\n  }\n}\n\nexport default HomePage;\n","/**\n * @file AccountsPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller, Todd Kitchens, and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport styled from 'styled-components';\nimport {\n  Typography\n} from '@material-ui/core';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nclass AccountsPage extends TrackablePage {\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <div style={{ marginTop: '32px', marginLeft: '32px' }}>\n        <TypographyHeading breakpoint={breakpoint}>Accounts</TypographyHeading>\n        <TypographyBody>Accounts page coming soon.</TypographyBody>\n      </div>\n    );\n  }\n}\n\nexport default AccountsPage;\n","/**\n * @file TablePager\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { withTheme } from 'styled-components';\nimport {\n  Grid,\n  IconButton,\n  InputBase,\n  MenuItem,\n  Select,\n  TableCell,\n  Toolbar,\n  Typography\n} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst StyledTableCell = styled(TableCell)`\n  && {\n    &:last-child {\n      border-bottom: 0;\n      padding: 0px;\n    }\n  }\n`;\n\nconst StyledToolbar = styled(Toolbar)`\n  && {\n    color: ${props => props.theme.colorBodyTextDim};\n    min-height: auto;\n    padding-left: 2px;\n    padding-right: 2px;\n  }\n`;\n\nconst TypographyCaption = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_CAPTION};\n    /* Padding to align rows text and count text with rows per page number for non-XS breakpoints. */\n    padding-bottom: 1px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-bottom: 0px;\n      `\n    }\n  }\n`;\n\nconst TypographyRows = styled(TypographyCaption)`\n  && {\n    margin-top: -1px;\n    margin-left: 6px;\n    margin-right: 14px;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        margin-right: 7px;\n      `\n    }\n  }\n`;\n\nconst TypographyCount = styled(TypographyCaption)`\n  && {\n    margin-left: 41px;\n    margin-right: 2px;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM && `\n        margin-left: 20px;\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        margin-left: 20px;\n        margin-right: 6px;\n      `)\n    }\n  }\n`;\n\nconst StyledSelect = styled(({ ...other }) => (\n    <Select\n      classes={{\n        icon: 'icon',\n        root: 'root',\n        selectMenu: 'selectMenu'\n      }}\n      {...other}\n    />\n  ))`\n  && {\n    color: ${props => props.theme.colorBodyTextDim};\n    padding-left: 4px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_CAPTION};\n    & .icon {\n      color: ${props => props.theme.colorBodyTextDim};\n      /* Move icon up for non-XS breakpoints. */\n      ${({ breakpoint }) =>\n        breakpoint !== Breakpoints.XS && `\n          top: 0px;\n        `\n      }\n    }\n    & .root {\n      /**\n       * Used to move the rows per page number and the down arrow farther apart. Note that when this\n       * was set to a negative number to move them closer together, it caused problems (number\n       * abbreviated with ellipses) for a rows per page number with more than two digits (more than\n       * 99 rows per page).\n       */\n      margin-right: 2px;\n    }\n    & .selectMenu {\n      /* Vertically center rows per page number. Not sure why it is not already centered. */\n      vertical-align: middle;\n      display: table-cell;\n    }\n  }\n`;\n\nconst StyledMenuItem = styled(MenuItem)`\n  && {\n    color: ${props => props.theme.colorBodyTextDim};\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n  }\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  && {\n    padding: ${\n      ((Constants.TABLE_ROW_HEIGHT_SM_AND_UP - Constants.MATERIAL_UI_ICON_BUTTON_FONT_SIZE) / 2) + 'px'\n    };\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding: ${\n          ((Constants.TABLE_ROW_HEIGHT_XS - Constants.MATERIAL_UI_ICON_BUTTON_FONT_SIZE) / 2) + 'px'\n        };\n      `\n    }\n    &:disabled {\n      color: ${props => fade(props.theme.colorBodyTextDim, props.theme.opacityActionDisabled)};\n    }\n    &:hover {\n      background: ${props => fade(props.theme.colorIconButtonHover, props.theme.opacityActionHover)};\n      color: ${props => props.theme.colorIconButtonHover};\n      /* Reset on touch devices. */\n      @media (hover: none) {\n        background: inherit;\n        color: inherit;\n      }\n    }\n  }\n`;\n\nconst StyledIconButtonNotLast = styled(StyledIconButton)`\n  && {\n    margin-right: 4px;\n  }\n`;\n\n/**\n * Component that provides table pagination actions. The Material-UI TablePaginationActions\n * component is basic (e.g., no first and last buttons) and does not provide enough access for\n * styling (e.g., IconButton cannot by styled).\n */\nclass TablePagerActions extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The total number of rows.\n     */\n    count: PropTypes.number.isRequired,\n    /**\n     * Callback fired when the page is changed.\n     *\n     * @param {object} event The event source of the callback.\n     * @param {number} page The selected page.\n     */\n    onChangePage: PropTypes.func.isRequired,\n    /**\n     * The zero-based index of the current page.\n     */\n    page: PropTypes.number.isRequired,\n    /**\n     * The number of rows per page.\n     */\n    rowsPerPage: PropTypes.number.isRequired\n  };\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {\n      breakpoint,\n      count,\n      onChangePage,\n      page,\n      rowsPerPage,\n      ...other\n    } = this.props;\n\n    const lastPage = Math.ceil(count / rowsPerPage) - 1;\n    return (\n      <div {...other}>\n        <StyledIconButtonNotLast\n          breakpoint={breakpoint}\n          color='inherit'\n          onClick={event => onChangePage(event, 0)}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          <FirstPageIcon />\n        </StyledIconButtonNotLast>\n        <StyledIconButtonNotLast\n          breakpoint={breakpoint}\n          color='inherit'\n          onClick={event => onChangePage(event, page - 1)}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          <KeyboardArrowLeft />\n        </StyledIconButtonNotLast>\n        <StyledIconButtonNotLast\n          breakpoint={breakpoint}\n          color='inherit'\n          onClick={event => onChangePage(event, page + 1)}\n          disabled={page >= lastPage}\n          aria-label=\"Next Page\"\n        >\n          <KeyboardArrowRight />\n        </StyledIconButtonNotLast>\n        <StyledIconButton\n          breakpoint={breakpoint}\n          color='inherit'\n          onClick={event => onChangePage(event, Math.max(0, lastPage))}\n          disabled={page >= lastPage}\n          aria-label=\"Last Page\"\n        >\n          <LastPageIcon />\n        </StyledIconButton>\n      </div>\n    );\n  }\n}\n\n/**\n * A TableCell-based component for placing inside a TableFooter for pagination. The Material-UI\n * TablePagination component does not provide enough access for styling (e.g., its pop-up menu\n * cannot be fully styled at this time), so we implement our own Material Design pagination\n * component.\n * \n * Spacing is styled to match table at console.firebase.google.com/.../authentication/users\n * \n */\nclass TablePager extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The total number of rows.\n     */\n    count: PropTypes.number.isRequired,\n    /**\n     * Callback fired when the page is changed.\n     *\n     * @param {object} event The event source of the callback.\n     * @param {number} page The selected page.\n     */\n    onChangePage: PropTypes.func.isRequired,\n    /**\n     * Callback fired when the number of rows per page is changed.\n     *\n     * @param {object} event The event source of the callback.\n     */\n    onChangeRowsPerPage: PropTypes.func,\n    /**\n     * The zero-based index of the current page.\n     */\n    page: PropTypes.number.isRequired,\n    /**\n     * The number of rows per page.\n     */\n    rowsPerPage: PropTypes.number.isRequired,\n    /**\n     * Customizes the options of the rows per page select field. If less than two options are\n     * available, no select field will be displayed.\n     */\n    rowsPerPageOptions: PropTypes.array.isRequired,\n    /**\n     * The styled-components theme.\n     */\n    theme: PropTypes.object.isRequired\n  };\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @public\n   */\n  componentDidUpdate() {\n    const { count, onChangePage, page, rowsPerPage } = this.props;\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page > newLastPage) {\n      onChangePage(null, newLastPage);\n    }\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const colSpan = 1000; // span all table columns\n    return (\n      <StyledTableCell colSpan={colSpan} padding='checkbox'>\n        {this.getToolbar()}\n      </StyledTableCell>\n    );\n  }\n\n  /**\n   * Return the elements for the Toolbar component.\n   * @return {Object} The elements for the Toolbar component.\n   * @private\n   */\n  getToolbar() {\n    const { breakpoint } = this.props;\n    return (\n      breakpoint === Breakpoints.XS ?\n        // For XS, put the actions buttons on a second row, and center both rows.\n        <StyledToolbar>\n          <Grid container direction='column' justify='flex-start' alignItems='center'>\n            <Grid container direction='row' justify='center' alignItems='center' wrap='nowrap'>\n              {this.getRowsSelectCount()}\n            </Grid>\n            <Grid container direction='row' justify='center' alignItems='center' wrap='nowrap'>\n              {this.getActions()}\n            </Grid>\n          </Grid>\n        </StyledToolbar>\n      :\n        <StyledToolbar>\n          <Grid container direction='row' justify='flex-end' alignItems='center' wrap='nowrap'>\n            {this.getRowsSelectCount()}\n            {this.getActions()}\n          </Grid>\n        </StyledToolbar>\n    );\n  }\n\n  /**\n   * Return the elements for the rows text, the Select component, and the count text.\n   * @return {Object} The elements for the rows text, the Select component, and the count text.\n   * @private\n   */\n  getRowsSelectCount() {\n    const {\n      breakpoint,\n      onChangeRowsPerPage,\n      rowsPerPage,\n      rowsPerPageOptions,\n      theme\n    } = this.props;\n    const rowsText = (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) ?\n      'Rows:' : 'Rows per page:';\n    return (\n      <Fragment>  \n        {rowsPerPageOptions.length > 1 && (\n          <Fragment>\n            <TypographyRows breakpoint={breakpoint} color='inherit'>\n              {rowsText}\n            </TypographyRows>\n            <StyledSelect\n              breakpoint={breakpoint}\n              input={<InputBase />}\n              value={rowsPerPage}\n              onChange={onChangeRowsPerPage}\n              // Unable to style the Menu background using styled-components.\n              MenuProps={{\n                PaperProps: {style: {background: theme.colorTableBackgroundPrimary}}\n              }}\n            >\n              {rowsPerPageOptions.map(rowsPerPageOption => (\n                <StyledMenuItem\n                  key={rowsPerPageOption}\n                  value={rowsPerPageOption}\n                >\n                  {rowsPerPageOption}\n                </StyledMenuItem>\n              ))}\n            </StyledSelect>\n          </Fragment>\n        )}\n        <TypographyCount breakpoint={breakpoint} color='inherit'>\n          {this.getCountText()}\n        </TypographyCount>\n      </Fragment>\n    );\n  }\n\n  /**\n   * Return the text for the count (e.g., 1-10 of 120).\n   * @return {Object} The text for the count.\n   * @private\n   */\n  getCountText() {\n    const {\n      breakpoint,\n      count,\n      page,\n      rowsPerPage\n    } = this.props;\n\n    const from = count === 0 ? 0 : page * rowsPerPage + 1;\n    const to = Math.min(count, (page + 1) * rowsPerPage);\n\n    let total;\n    if (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) {\n      if (count >= 1000000000) {\n        const t = count / 1000000000;\n        total = t.toFixed(Number.isInteger(t) ? 0 : 1) + 'T';\n      }\n      else if (count >= 1000000) {\n        const m = count / 1000000;\n        total = m.toFixed(Number.isInteger(m) ? 0 : 1) + 'M';\n      }\n      else if (count >= 1000) {\n        const k = count / 1000;\n        total = k.toFixed(Number.isInteger(k) ? 0 : 1) + 'k';\n      }\n      else\n      total = count.toFixed(0);\n    }\n    else\n      total = count.toLocaleString();\n\n    return `${from.toLocaleString()}-${to.toLocaleString()} of ${total}`;\n  }\n\n  /**\n   * Return the elements for the TablePagerActions component.\n   * @return {Object} The elements for the TablePagerActions component.\n   * @private\n   */\n  getActions() {\n    const {\n      breakpoint,\n      count,\n      onChangePage,\n      page,\n      rowsPerPage\n    } = this.props;\n    return (\n      <TablePagerActions\n        breakpoint={breakpoint}\n        count={count}\n        onChangePage={onChangePage}\n        page={page}\n        rowsPerPage={rowsPerPage}\n      />\n    );\n  }\n}\n\n// Use the withTheme HOC so that we can use the current theme outside styled components.\nexport default withTheme(TablePager);\n","/**\n * @file PagedTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  CircularProgress,\n  Fade,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport TablePager from '../TablePager/TablePager';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst StyledPaper = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorTableBackgroundPrimary};\n  }\n`;\n\nconst TypographyTitle = styled(Typography)`\n  && {\n    color: ${props => props.theme.colorBodyText};\n    padding-top: 8px;\n    padding-bottom: 4px;\n    padding-left: 15px;\n    text-align: left;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    font-weight: 300;\n  }\n`;\n\nconst DivCircularProgress = styled.div`\n  && {\n    position: absolute;\n    /* Set to modal z-index so that progress indicator is above table.  */\n    z-index: ${zIndex.modal};\n    /* Add padding under the progress indicator for XS to compensate for the larger footer. */\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-bottom: 30px;\n      `\n    }\n  }\n`;\n\nconst StyledCircularProgress = styled(CircularProgress)`\n  && {\n    color: ${props => props.theme.colorBodyButtonBackground};\n  }\n`;\n\nconst StyledTable = styled(Table)`\n  && {\n    /* Same easing as Material-UI . */\n    transition: ${'opacity ' + duration.standard + 'ms ' + easing.easeInOut};\n    opacity: ${props => props.loading ? 0.5 : 1.0};\n    font-family: ${Constants.FONT_PRIMARY};\n  }\n`;\n\nconst StyledTableRow = styled(TableRow)`\n  && {\n    height: ${Constants.TABLE_ROW_HEIGHT_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        height: ${Constants.TABLE_ROW_HEIGHT_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst TableRowFooter = styled(StyledTableRow)`\n  && {\n    border-top-color: ${props => props.theme.colorTableRowBorder};\n    border-top-style: solid;\n    border-top-width: 2px;\n  }\n`;\n\nconst StyledTableCell = styled(TableCell)`\n  && {\n    border-color: ${props => props.theme.colorTableRowBorder};\n    color: ${props => props.theme.colorBodyText};\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n    white-space: nowrap;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.FONT_SIZE_TABLE_XS};\n      `\n    }\n  }\n`;\n\nconst TableCellHeader = styled(StyledTableCell)`\n  && {\n    border-bottom-style: solid;\n    border-bottom-width: 2px;\n    color: ${props => props.theme.colorBodyTextDim};\n    font-weight: 500;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\n/**\n * Class that implements a table component that supports pagination.\n */\nclass PagedTable extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * An array that specifies the column widths of the table.\n     */    \n    columnWidths: PropTypes.array.isRequired,\n    /**\n     * Return the Relay-compliant connection object from the data retrieved by the query.\n     * @param {Object} data The data retrieved by the query.\n     * @return {Object} The connection object.\n     */\n    getDataConnection: PropTypes.func.isRequired,\n    /**\n     * Return an array of objects that describe the body rows, where each object contains:\n     *  mapKey: A unique key that identifies the row.\n     *  cells: An array of objects that describe the cells of the row, where each object contains:\n     *    value: String containing the value of the cell.\n     *    isNumeric: True if the cell contains a numeric value, false otherwise.\n     *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n     *      for no link.\n     * @param {Object} data The data retrieved by the query.\n     * @return {Array} An array of objects that describe the body rows.\n     */\n    getBodyRows: PropTypes.func.isRequired,\n    /**\n     * An array of objects that describe the cells of the header row, where each object contains:\n     *  value: String containing the value of the cell.\n     *  isNumeric: True if the cell contains a numeric value, false otherwise.\n     *  link: Optional string which provides a link for the cell (to= prop of Link). Set to null for\n     *    no link.\n     */\n    headerRow: PropTypes.array.isRequired,\n    /**\n     * A Relay-compliant connection query document (gql`...`) to retrieve the table data. See\n     * queryBlocksConnection.js for an example of the required query parameters and shape.\n     */\n    query: PropTypes.object.isRequired,\n    /**\n     * GraphQL query to get total count of rows.\n     */\n    queryCount: PropTypes.object.isRequired,\n    /**\n     * The title of the table.\n     */\n    title: PropTypes.string.isRequired,\n  };\n\n  /**\n   * Create a PagedTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n    this.state = {\n      pageIndex: 0,\n      priorPageIndex: 0,\n      priorStartCursor: null,\n      priorEndCursor: null,\n      rowsPerPage: 10\n    };\n\n    this.data = null;\n    this.count = 0;\n    this.firstId = null;\n    this.startCursor = null;\n    this.endCursor = null;\n\n    // Bind to make 'this' work in callbacks.\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { title } = this.props;\n    return (\n      <StyledPaper elevation={1}>\n        <TypographyTitle>{title}</TypographyTitle>\n        {this.getTableElements()}\n      </StyledPaper>\n    );\n  }\n\n  /**\n   * Return the elements for the table.\n   * @return {Object} The elements for the table.\n   * @private\n   */\n  getTableElements() {\n    const { breakpoint, columnWidths, getDataConnection, query, queryCount } = this.props;\n    const { pageIndex, priorPageIndex, priorStartCursor, priorEndCursor, rowsPerPage } = this.state;\n\n    // Determine the query variables for the current page.\n    let variables;\n    const getCount = this.count === 0;\n    if (getCount)\n      variables = {first: rowsPerPage};\n    else {\n      const lastPageIndex = Math.ceil(this.count / rowsPerPage) - 1;\n      if (pageIndex === priorPageIndex + 1)\n        variables = {after: priorEndCursor, first: rowsPerPage};\n      else if (pageIndex === priorPageIndex - 1)\n        variables = {before: priorStartCursor, last: rowsPerPage};\n      else if (pageIndex === lastPageIndex) {\n        const lastPageRows = this.count - pageIndex * rowsPerPage;\n        variables = {last: lastPageRows};\n      }\n      else {\n        // We query the first rowsPerPage even in the case when the first page button is clicked.\n        // We count on the Apollo cache returning the same rows every time for this query, based on\n        // the Query fetchPolicy. Specifying \"where: { id_lte: this.firstId }\" would result in a\n        // double fetch when the page is loaded.\n        variables = {first: rowsPerPage};\n        //variables = {where: { id_lte: this.firstId }, first: rowsPerPage};\n      }\n    }\n\n    return (\n      <Query\n        // Do not use the Apollo cache when getCount is true.\n        fetchPolicy={getCount ? 'network-only' : null}\n        query={query}\n        variables={variables}\n      >\n        {({ loading, error, data }) => {\n          if (!loading && !error) {\n            this.data = data;\n            const connection = getDataConnection(this.data);\n            if (this.firstId === null && connection.edges.length) // first query\n              this.firstId = connection.edges[0].node.id;\n            this.startCursor = connection.pageInfo.startCursor;\n            this.endCursor = connection.pageInfo.endCursor;\n          }\n\n          return (\n            <Query\n              // Do not use the Apollo cache when getCount is true.\n              fetchPolicy={getCount ? 'network-only' : null}\n              query={queryCount}\n              skip={this.firstId === null}\n              variables={{where: { id_lte: this.firstId }}}\n            >\n              {({ loading: loadingCount, error: errorCount, data: dataCount }) => {\n                if (dataCount != null && !loadingCount && !errorCount) {\n                  const connection = getDataConnection(dataCount);\n                  this.count = connection.aggregate.count;\n                }\n                return (\n                  <Grid container\n                    direction='column'\n                    justify='center'\n                    alignItems='center'\n                  >\n                    <Fade in={loading} timeout={duration.standard} mountOnEnter unmountOnExit>\n                      <DivCircularProgress breakpoint={breakpoint}>\n                        <StyledCircularProgress size={Constants.MATERIAL_CIRCULAR_INDICATOR_SIZE} />\n                      </DivCircularProgress>\n                    </Fade>\n                    <StyledTable loading={loading ? 1 : 0}>\n                      <colgroup>\n                        {columnWidths.map((width, index) => {\n                          // The column width settings seem to be ignored in many cases, depending on cell\n                          // length. That is, when cell lengths are long, the widths are ignored.\n                          return (\n                            <col key={index} width={width} />\n                          );\n                        })}\n                      </colgroup>\n                      <TableHead>\n                        {this.getHeaderRowElement()}\n                      </TableHead>\n                      <TableBody>\n                        {this.getBodyRowElements()}\n                      </TableBody>\n                      <TableFooter>\n                        {this.getFooterRowElement(loadingCount, errorCount, dataCount)}\n                      </TableFooter>\n                    </StyledTable>\n                  </Grid>\n                );\n              }}\n            </Query>\n          );\n        }}\n      </Query>\n    );\n  }\n\n  /**\n   * Return the element for the header row.\n   * @return {Object} The element for the header row.\n   * @private\n   */\n  getHeaderRowElement() {\n    const { breakpoint, headerRow } = this.props;\n    return (\n      <StyledTableRow breakpoint={breakpoint}>\n        {headerRow.map((cell, index) => {\n          return (\n            // Using index as the key is fine here and for cells in other rows, since we never add,\n            // remove, reorder, or filter items in the cell arrays.\n            <TableCellHeader\n              breakpoint={breakpoint}\n              key={index}\n              align={cell.isNumeric ? 'right' : 'inherit'}\n              padding='checkbox'\n              size='small'\n            >\n              {cell.link != null ?\n                <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                cell.value\n              }\n            </TableCellHeader>\n          );\n        })}\n      </StyledTableRow>\n    );\n  }\n\n  /**\n   * Return the elements for all of the body rows.\n   * @return {Object} The elements for all of the body rows.\n   * @private\n   */\n  getBodyRowElements() {\n    const { getBodyRows } = this.props;\n    if (this.data) {\n      let rows = getBodyRows(this.data);\n      return rows.map((bodyRow, index) => {\n        return this.getBodyRowElement(bodyRow);\n      });\n    }\n    else\n      return null;\n  }\n\n  /**\n   * Return the element for the specified body row.\n   * @param {Object} bodyRow Object that describes the body row.\n   * @return {Object} The element for the specified body row.\n   * @private\n   */\n  getBodyRowElement(bodyRow) {\n    const { breakpoint } = this.props;\n    return (\n      <StyledTableRow breakpoint={breakpoint} key={bodyRow.mapKey}>\n        {bodyRow.cells.map((cell, index) => {\n          return (\n            <StyledTableCell\n              breakpoint={breakpoint}\n              key={index}\n              align={cell.isNumeric ? 'right' : 'inherit'}\n              padding='checkbox'\n              size='small'\n            >\n              {cell.link != null ?\n                <StyledLink to={cell.link}>{cell.value}</StyledLink> :\n                cell.value\n              }\n            </StyledTableCell>\n          );\n        })}\n      </StyledTableRow>\n    );\n  }\n\n  /**\n   * Return the element for the footer row.\n   * @return {Object} The element for the footer row.\n   * @private\n   */\n  getFooterRowElement() {\n    const { breakpoint } = this.props;\n    const { pageIndex, rowsPerPage } = this.state;\n    const show = this.count > 0;\n    return (\n      <Fade in={show} timeout={duration.standard}>\n        <TableRowFooter breakpoint={breakpoint}>\n          <TablePager\n            breakpoint={breakpoint}\n            rowsPerPageOptions={[10, 25, 50]}\n            rowsPerPage={rowsPerPage}\n            page={pageIndex}\n            count={this.count}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n          />\n        </TableRowFooter>\n      </Fade>\n    );\n  }\n\n  /**\n   * Callback fired when the page is changed.\n   * @param {Object} event The event source of the callback.\n   * @param {Object} page The selected page.\n   * @private\n   */\n  handleChangePage(event, page) {\n    this.setState(prevState => ({\n      pageIndex: page,\n      priorPageIndex: prevState.pageIndex,\n      priorStartCursor: this.startCursor,\n      priorEndCursor: this.endCursor\n    }));\n  }\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   * @param {Object} event The event source of the callback.\n   * @private\n   */\n  handleChangeRowsPerPage(event) {\n    // When rows per page is changed, reset everything.\n    const { rowsPerPage } = this.state;\n    if (rowsPerPage !== event.target.value) {\n      this.data = null;\n      this.count = 0;\n      this.firstId = null;\n      this.startCursor = null;\n      this.endCursor = null;\n      this.setState({\n        pageIndex: 0,\n        priorPageIndex: 0,\n        priorStartCursor: null,\n        priorEndCursor: null,\n        rowsPerPage: event.target.value\n      });\n    }\n  }\n}\n\nexport default PagedTable;\n","/**\n * @file queryBlocksConnection\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL Relay-compliant connection query to get a BlockConnection object.\n * @return {Object} The BlockConnection object.\n */\nconst queryBlocksConnection = gql`\n  query BlocksConnection(\n    $where: BlockWhereInput, $skip: Int, $after: String, $before: String, $first: Int, $last: Int) {\n    blocksConnection(\n      where: $where, orderBy: height_DESC, skip: $skip, after: $after, before: $before,\n      first: $first, last: $last) {\n      edges {\n        node {\n          id\n          height\n          timestamp\n          numTransactions\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n      }\n    }\n  }\n`;\n\nexport default queryBlocksConnection;\n","/**\n * @file queryBlocksCount\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get total count of blocks.\n * @return {Object} The total count of blocks.\n */\nconst queryBlocksCount = gql`\n  query BlocksConnection($where: BlockWhereInput) {\n    blocksConnection(where: $where) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nexport default queryBlocksCount;\n","/**\n * @file BlocksPagedTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PagedTable from '../PagedTable/PagedTable';\nimport queryBlocksConnection from '../../graphql/queryBlocksConnection';\nimport queryBlocksCount from '../../graphql/queryBlocksCount';\n\n/**\n * This component displays a paged table of Block objects.\n */\nclass BlocksPagedTable extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a BlocksPagedTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <PagedTable\n        breakpoint={breakpoint}\n        title='Blocks'\n        columnWidths={['30%', '40%', '30%']}\n        headerRow={[\n          {value: 'Height', isNumeric: false},\n          {value: 'Timestamp', isNumeric: false},\n          {value: 'Transactions', isNumeric: true}\n        ]}\n        query={queryBlocksConnection}\n        queryCount={queryBlocksCount}\n        getDataConnection={data => data.blocksConnection}\n        getBodyRows={this.getBodyRows}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @param {Object} data The data retrieved by getQuery().\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows(data) {\n    let bodyRows = data.blocksConnection.edges.map((edge) => {\n      const block = edge.node;\n      const date = new Date(block.timestamp);\n      return {\n        mapKey: block.height,\n        cells: [\n          {\n            value: block.height.toLocaleString(),\n            isNumeric: false,\n            link: `/block/${block.height}`\n          },\n          {value: date.toLocaleString(), isNumeric: false},\n          {value: block.numTransactions.toLocaleString(), isNumeric: true}\n        ]\n      };\n    });\n    return bodyRows;\n  }\n}\n\nexport default BlocksPagedTable;\n","/**\n * @file BlocksPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport styled from 'styled-components';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport Fade from 'react-reveal/Fade';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport BlocksPagedTable from '../BlocksPagedTable/BlocksPagedTable';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridPagedTable = styled(Grid)`\n  && {\n    width: 100%;\n  }\n`;\n\nclass BlocksPage extends TrackablePage {\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridPagedTable item breakpoint={breakpoint}>\n          <Fade timeout={500}>\n            <BlocksPagedTable breakpoint={breakpoint} />\n          </Fade>\n        </GridPagedTable>\n      </GridSection>\n    );\n  }\n}\n\nexport default BlocksPage;\n","/**\n * @file BlockTransactionsTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DynamicTable from '../DynamicTable/DynamicTable';\nimport getHashString from '../../utils/getHashString';\n\n/**\n * This component displays a table of a block's Transaction objects.\n */\nclass BlockTransactionsTable extends Component { \n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * The maximum number of rows in the table.\n     */\n    maxRows: PropTypes.number.isRequired,\n    /**\n     * Array of transaction objects.\n     */\n    transactions: PropTypes.array.isRequired\n  };\n\n  /**\n   * Create a BlockTransactionsTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint, maxRows } = this.props;\n    return (\n      <DynamicTable\n        breakpoint={breakpoint}\n        title='Transactions'\n        columnWidths={['60%', '40%']}\n        maxRows={maxRows}\n        headerRow={[\n          {value: 'Hash', isNumeric: false},\n          {value: 'Amount', isNumeric: true}\n        ]}\n        getBodyRows={this.getBodyRows}\n        footerRow={[\n          {value: null, isNumeric: false},\n          {value: '(simulated data)', isNumeric: true}\n        ]}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows() {\n    const { transactions } = this.props;\n    if (transactions) {\n      let bodyRows = transactions.map((transaction) => {\n        return {\n          mapKey: transaction.hash,\n          cells: [\n            {\n              value: getHashString(transaction.hash),\n              isNumeric: false,\n              link: `/tx/0x${transaction.hash}`\n            },\n            {value: transaction.amount.toFixed(8).toString() + ' ABC', isNumeric: true, link: null}\n          ]\n        };\n      });\n      return bodyRows;\n    }\n    else\n      return [];\n  }\n}\n\nexport default BlockTransactionsTable;\n","/**\n * @file queryBlock\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get a block.\n * @param {Number} height The height of the block to fetch.\n * @return {Object} The Block object with the specified height.\n */\nconst queryBlock = gql`\n  query Block($height: Int!) {\n    block(height: $height) {\n      id\n      height\n      timestamp\n      numTransactions\n      transactions {\n        id\n        hash\n        amount\n      }\n    }\n  }\n`;\n\nexport default queryBlock;\n","/**\n * @file BlockDetailsPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport TrackablePage from '../TrackablePage/TrackablePage';\nimport BlockTransactionsTable from '../BlockTransactionsTable/BlockTransactionsTable'\nimport queryBlock from '../../graphql/queryBlock';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-left: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-right: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridTable = styled(Grid)`\n  && {\n    width: 100%;\n  }\n`;\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\n/**\n * The Block Details Page shows details about a block.\n */\nclass BlockDetailsPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Object containing information about how a <Route path> matched the URL.\n     */\n    match: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n\n    const height = parseInt(this.props.match.params.height, 10);\n    return (\n      <GridSection container\n        direction='column'\n        justify='flex-start'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <Grid item>\n          <TypographyHeading breakpoint={breakpoint}>Block Details</TypographyHeading>\n        </Grid>\n        <Query query={queryBlock} variables={{ height }}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <Grid item>\n                  <TypographyBody>Searching...</TypographyBody>\n                </Grid>\n              );\n            else if (error)\n              return (\n                <Grid item>\n                  <TypographyBody>Network error</TypographyBody>\n                </Grid>\n              );\n            else if (data.block) {\n              const date = new Date(data.block.timestamp);\n              return (\n                <Fragment>\n                  <Grid item>\n                    <TypographyBody>\n                      Height: {data.block.height.toLocaleString()}\n                    </TypographyBody>\n                    <TypographyBody>\n                      Timestamp: {date.toLocaleString()}\n                    </TypographyBody>\n                  </Grid>\n                  <br />\n                  <GridTable item>\n                    <BlockTransactionsTable\n                      breakpoint={breakpoint}\n                      maxRows={100}\n                      transactions={data.block.transactions}\n                    />\n                  </GridTable>\n                </Fragment>\n              );\n            }\n            else\n              return (\n                <Grid item>\n                  <TypographyBody>Block not found.</TypographyBody>\n                </Grid>\n              );\n          }}\n        </Query>\n      </GridSection>\n    );\n  }\n}\n\nexport default BlockDetailsPage;\n","/**\n * @file queryTransactionsConnection\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL Relay-compliant connection query to get a TransactionsConnection object.\n * @return {Object} The TransactionsConnection object.\n */\nconst queryTransactionsConnection = gql`\n  query TransactionsConnection(\n    $where: TransactionWhereInput, $skip: Int, $after: String, $before: String, $first: Int,\n    $last: Int) {\n    transactionsConnection(\n      where: $where, orderBy: createdAt_DESC, skip: $skip, after: $after, before: $before,\n      first: $first, last: $last) {\n      edges {\n        node {\n          id\n          hash\n          amount\n        }\n      }\n      pageInfo {\n        startCursor\n        endCursor\n      }\n    }\n  }\n`;\n\nexport default queryTransactionsConnection;\n","/**\n * @file queryTransactionsCount\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get total count of transactions.\n * @return {Object} The total count of transactions.\n */\nconst queryTransactionsCount = gql`\n  query TransactionsConnection($where: TransactionWhereInput) {\n    transactionsConnection(where: $where) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nexport default queryTransactionsCount;\n","/**\n * @file TransactionsPagedTable\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PagedTable from '../PagedTable/PagedTable';\nimport queryTransactionsConnection from '../../graphql/queryTransactionsConnection';\nimport queryTransactionsCount from '../../graphql/queryTransactionsCount';\nimport getHashString from '../../utils/getHashString';\n\n/**\n * This component displays a paged table of Transaction objects.\n */\nclass TransactionsPagedTable extends Component {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a TransactionsPagedTable object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    // Bind to make 'this' work in callbacks.\n    this.getBodyRows = this.getBodyRows.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <PagedTable\n        breakpoint={breakpoint}\n        title='Transactions'\n        columnWidths={['60%', '40%']}\n        headerRow={[\n          {value: 'Hash', isNumeric: false},\n          {value: 'Amount', isNumeric: true}\n        ]}\n        query={queryTransactionsConnection}\n        queryCount={queryTransactionsCount}\n        getDataConnection={data => data.transactionsConnection}\n        getBodyRows={this.getBodyRows}\n      />\n    );\n  }\n\n  /**\n   * Return an array of objects that describe the body rows, where each object contains:\n   *  mapKey: A unique key that identifies the row.\n   *  cells: An array of objects that describe the cells of the row, where each object contains:\n   *    value: String containing the value of the cell.\n   *    isNumeric: True if the cell contains a numeric value, false otherwise.\n   *    link: Optional string which provides a link for the cell (to= prop of Link). Set to null\n   *      for no link.\n   * @param {Object} data The data retrieved by getQuery().\n   * @return {Array} An array of objects that describe the body rows.\n   * @protected\n   */\n  getBodyRows(data) {\n    let bodyRows = data.transactionsConnection.edges.map((edge) => {\n      const transaction = edge.node;\n      return {\n        mapKey: transaction.hash,\n        cells: [\n          {\n            value: getHashString(transaction.hash),\n            isNumeric: false,\n            link: `/tx/0x${transaction.hash}`\n          },\n          {value: transaction.amount.toFixed(8).toString() + ' ABC', isNumeric: true}\n        ]\n      };\n    });\n    return bodyRows;\n  }\n}\n\n\nexport default TransactionsPagedTable;\n","/**\n * @file TransactionsPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport styled from 'styled-components';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport Fade from 'react-reveal/Fade';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport TransactionsPagedTable from '../TransactionsPagedTable/TransactionsPagedTable';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst GridPagedTable = styled(Grid)`\n  && {\n    width: 100%;\n  }\n`;\n\nclass TransactionsPage extends TrackablePage {\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    return (\n      <GridSection container\n        direction='row'\n        justify='space-between'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <GridPagedTable item breakpoint={breakpoint}>\n          <Fade timeout={500}>\n            <TransactionsPagedTable breakpoint={breakpoint} />\n          </Fade>\n        </GridPagedTable>\n      </GridSection>\n    );\n  }\n}\n\nexport default TransactionsPage;\n","/**\n * @file queryTransaction\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get a transaction.\n * @param {String} id The hash of the transaction to fetch.\n * @return {Object} The Transaction object with the specified hash.\n */\nconst queryTransaction = gql`\n  query Transaction($hash: String!) {\n    transaction(hash: $hash) {\n      id\n      hash\n      amount\n      block {\n        id\n        height\n      }\n    }\n  }\n`;\n\nexport default queryTransaction;\n","/**\n * @file TransactionDetailsPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport TrackablePage from '../TrackablePage/TrackablePage';\nimport queryTransaction from '../../graphql/queryTransaction';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport getHashString from '../../utils/getHashString';\nimport Constants from '../../constants';\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-top: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-bottom: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-left: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    padding-right: ${Constants.HOME_PAGE_MARGIN_SM_AND_UP + 'px'};\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-bottom: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-left: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.HOME_PAGE_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\n/**\n * The Transaction Details Page shows details about a transaction.\n */\nclass TransactionDetailsPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * Object containing information about how a <Route path> matched the URL.\n     */\n    match: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    const { hash } = this.props.match.params;\n\n    const hashMaxLength = breakpoint === Breakpoints.XS || breakpoint === Breakpoints.SM ? 24 : 0;\n    return (\n      <GridSection container\n        direction='column'\n        justify='flex-start'\n        alignItems='flex-start'\n        breakpoint={breakpoint}\n      >\n        <TypographyHeading breakpoint={breakpoint}>Transaction Details</TypographyHeading>\n        <Query query={queryTransaction} variables={{ hash }}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <Grid item>\n                  <TypographyBody>Searching...</TypographyBody>\n                </Grid>\n              );\n            else if (error)\n              return (\n                <Grid item>\n                  <TypographyBody>Network error</TypographyBody>\n                </Grid>\n              );\n            else if (data.transaction)\n              return (\n                <Grid item>\n                  <TypographyBody>\n                    {'Hash: '}\n                    {getHashString(data.transaction.hash, hashMaxLength)}\n                  </TypographyBody>\n                  <TypographyBody>\n                    {'Amount: '}\n                    {data.transaction.amount.toFixed(8).toString()}\n                    {' ABC'}\n                  </TypographyBody>\n                  <TypographyBody>\n                    {'Block Height: '}\n                    <StyledLink to={`/block/${data.transaction.block.height}`}>\n                      {data.transaction.block.height.toLocaleString()}\n                    </StyledLink>\n                  </TypographyBody>\n                </Grid>\n              );\n            else\n              return (\n                <Grid item>\n                  <TypographyBody>Transaction not found.</TypographyBody>\n                </Grid>\n              );\n          }}\n        </Query>\n      </GridSection>\n    );\n  }\n}\n\nexport default TransactionDetailsPage;\n","/**\n * @file getRandomInt\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\nimport getRandomNumber from './getRandomNumber'\n\n/**\n * Return a random integer between start and end.\n * @param {Number} start The starting number.\n * @param {Number} end The ending number.\n * @return {Number} The random integer.\n * @private\n */\nexport default function getRandomInt(start, end) {\n  return Math.floor(getRandomNumber(start, end));\n}\n","/**\n * @file getRandomNumber\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\n /**\n * Return a random number between start and end.\n * @param {Number} start The starting number.\n * @param {Number} end The ending number.\n * @return {Number} The random number.\n * @private\n */\nexport default function getRandomNumber(start, end) {\n  return Math.random() * (end - start) + start;\n}\n","/**\n * @file SymbolD3\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport * as PIXI from 'pixi.js';\nimport * as filters from 'pixi-filters';\nimport getRandomInt from '../../utils/getRandomInt';\n\n/**\n * This class draws an infinity symbol using a d3 force-directed graph.\n */\nclass SymbolD3 extends Component  {\n  static propTypes = {\n    /**\n     * True for circle mode, where the symbol is shaped like a circle.\n     */\n    circleMode: PropTypes.bool,\n    /**\n     * True is the theme is dark, false if the theme is light.\n     */\n    isThemeDark: PropTypes.bool.isRequired,\n    /**\n     * True for logo mode, where the symbol is shaped differently, slighty taller, and various\n     * adjustments are made with the intention of rendering at small sizes (e.g., in an app bar).\n     */\n    logoMode: PropTypes.bool,\n    /**\n     * The width of the component, or 0 for use built-in simulationWidth.\n     */\n    width: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a SymbolD3 object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n\n    // Bind to make 'this' work in callbacks.\n    this.dragStarted = this.dragStarted.bind(this);\n    this.dragged = this.dragged.bind(this);\n    this.dragEnded = this.dragEnded.bind(this);\n    this.tick = this.tick.bind(this);\n    this.rotate = this.rotate.bind(this);\n\n    // A force-directed graph can be a difficult beast to tame. Most changes to settings in this\n    // class will likely change the shape of the graph and require changing other settings through\n    // trial and error in order to get the graph back to the infinity symbol shape. Any number of the\n    // settings below could be made into constructor parameters. Another idea would be to pre-define\n    // different groups of settings that produce a shape which approximates the infinity symbol\n    // shape, and then allow the caller to specify which group of settings to use. Since there is\n    // currently only one group of settings defined, settings groups would not currently be useful.\n\n    // PixiJS members.\n    this.stage = null;\n    this.renderer = null;\n    this.linksGraphics = null;\n\n    // Code is customized for this window size. Modifying these values will cause the d3 force-\n    // directed graph to change shape unless scaleToWindow is adjusted to keep the object the same\n    // size.\n    this.simulationWidth = this.props.logoMode ? 780 : 800;\n    this.simulationHeight = 400;\n    this.scaleSimulationToPixi = 1.0;\n\n    this.centerX = this.simulationWidth / 2;\n    this.centerY = this.simulationHeight / 2;\n    this.scaleToWindow = this.simulationWidth / 2 * 0.8;\n\n    // Specify the number of symbol nodes and the number of vertices for each symbol node. The\n    // current values of 36 symbol nodes and 8 vertices (octagon) was arrived at after trial and\n    // error to produce a shape which resembles the infinity symbol.\n    this.numSymbolNodes = this.props.logoMode ? 41 : 36;\n    this.numVertices = this.props.logoMode ? 10 : 8;\n    this.numNodes = this.numSymbolNodes * this.numVertices;\n\n    // Specify the charge of the symbol nodes and the non-symbol nodes. \"A positive value causes\n    // nodes to attract each other, similar to gravity, while a negative value causes nodes to\n    // repel each other, similar to electrostatic charge.\" The default value is -30, but we specify\n    // much lower in magnitude values because we do not want the nodes to repel very much. For the\n    // fixed nodes which draw the infinity symbol, we do not want any force at all.\n    this.forceManyBodyStrengthSymbolNodes = 0;\n    this.forceManyBodyStrengthNonSymbolNodes = this.props.logoMode ? -3.75 : -9;\n\n    // Specify the link distance. \"The link force pushes linked nodes together or apart according to\n    // the desired link distance.\" The default value is 30.\n    this.linkDistance = this.props.logoMode ? 19 : 14;\n\n    // Specify node and link drawing properties.\n    this.nodeStrokeWidth = 1;\n    this.nodeRadius = 4.5;\n    this.nodeRadiusSelected = this.props.logoMode ? 11 : 5.5;\n    // DCM 01.mar.2019: Always use same node fill color as stroke color.\n    //this.nodeFillColorArray = [127, 127, 127];\n    this.nodeSelectedFillColorArray = [255, 255, 255];\n    this.nodeSelectedStrokeColorArray = [255, 255, 255];\n    this.nodeOpacity = 0.5;\n    this.nodeOpacitySelected = 0.75;\n    this.linkStrokeWidth = this.props.logoMode ? 3 : 2; // why do lines get blurry when this is increased?\n    this.linkStrokeWidthIncreaseAtMagnitude = this.props.logoMode ? 1.5 : 0;\n\n    // Adjust the symbolHeightMultiplier to make the symbol shorter or taller. A value of 1.0\n    // represents normal height.\n    this.symbolHeightMultiplier = this.props.logoMode ? 1.325 : 1.111111;\n\n    // The initial rotateOffset does two things: it determines which part of the symbol goes in\n    // front (blue is on top), and it makes a small adjustment to align the colors correctly.\n    this.rotateOffset = this.numSymbolNodes / 2 - 1.2;\n\n    // The rotate interval frequency.\n    this.rotateTimeMs = 33.3; // 30 frames/sec max\n\n    // The amount of rotation for every rotate interval.\n    if (this.props.logoMode)\n      this.rotateAmount = 0;\n    else if (this.props.circleMode)\n      this.rotateAmount = 0.000100;\n    else\n      this.rotateAmount = 0.000015;\n\n    // The currently selected node index.\n    this.selectedNodeIndex = -1;\n\n    // New block timer members.\n    this.newBlockNodeStartTime = null;\n    this.newBlockLinksStartTime = null;\n    this.newBlockNodeTimerMs = 1000;\n    this.newBlockLinksTimerMs = 1500;\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Set the value of scaleSimulationToPixi based on the width prop. We scale the force-directed\n    // graph by keeping the d3 simulation as is, since it is finely tuned to appear in a certain\n    // way, and instead scaling coordinates from simulation space to PixiJS space when rendering.\n    // In this way, the graph can be scaled to any width by changing the widths prop. A width prop\n    // of 0 indicates no scaling. Note that drag/drop is not currently implemented when scaling.\n    this.scaleSimulationToPixi = this.props.width ? this.props.width / this.simulationWidth : 1.0;\n\n    // Draw the infinity symbol.\n    this.draw();\n  }\n\n  /**\n   * Invoked by React immediately before a component is unmounted and destroyed.\n   * @public\n   */\n  componentWillUnmount() {\n    // Cleanup PixiJS properties.\n    this.renderer.destroy();\n    this.stage.destroy();\n  }\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @public\n   */\n  componentDidUpdate() {\n    // Make the necessary PixiJS adjustments when the width prop changes.\n    const scaleSimulationToPixi = this.props.width ? this.props.width / this.simulationWidth : 1.0;\n    if (this.scaleSimulationToPixi !== scaleSimulationToPixi) {\n      this.scaleSimulationToPixi = scaleSimulationToPixi;\n\n      // Resize the renderer.\n      this.pixiResizeRenderer();\n\n      // Draw circles for the nodes.\n      if (this.nodesData) {\n        this.nodesData.forEach((node) => { this.pixiDrawNode(node); });\n      }\n    }\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return <div ref={(el) => { this.element = el }}/>;\n  }\n\n  /**\n   * Draw the infinity symbol.\n   * @public\n   */\n  draw() {\n    // Set up the nodes and links of the graph.\n    this.addNodes();\n    this.addLinks();\n\n    // Create the d3 simulation.\n    this.createSimulation();\n\n    // Set up PixiJS to draw the simulation.\n    this.pixiSetup();\n  }\n\n  /**\n   * Add a new block.\n   * @public\n   */\n  addNewBlock() {\n    // If there is a selected node still animating, stop the animation and return it to normal.\n    if (this.newBlockNodeStartTime) {\n        const node = this.nodesData[this.selectedNodeIndex];\n        this.pixiDrawNode(node);\n    }\n\n    // Select node and enable new block timers.\n    this.selectedNodeIndex = getRandomInt(0, this.numNodes - 1);\n    this.newBlockNodeStartTime = this.newBlockLinksStartTime = new Date();\n  }\n\n  /**\n   * Populate nodesData[] with the nodes of the graph.\n   * @private\n   */\n  addNodes() {\n    // Add the symbol nodes to nodesData[] at fixed positions (fx, fy). _fx and _fy save the fixed\n    // position across drag/drop operations, linkCount is used to calculate the strength of the\n    // force of a link.\n    this.nodesData = [];\n    for (let i = 0; i < this.numSymbolNodes; i++) {\n      const pos = this.getNodePosition(i);\n      this.nodesData.push({\n        'fx' : pos[0],\n        'fy' : pos[1],\n        '_fx' : pos[0],\n        '_fy' : pos[1],\n        'linkCount' : 0});\n    }\n\n    // Add the non-symbol nodes at non-fixed positions.\n    for (let i = this.numSymbolNodes; i < this.numNodes; i++) {\n      this.nodesData.push({'linkCount' : 0});\n    }\n  }\n\n  /**\n   * Get the position of the node with the specified index.\n   * @param {Number} index The node index.\n   * @return {Array} An array containing the [x, y] position of the node.\n   * @private\n   */\n  getNodePosition(index) {\n    const t =\n      2 * Math.PI * ((index + this.rotateOffset) % this.numSymbolNodes) / this.numSymbolNodes;\n    const scale = this.props.circleMode ? 0.4 : 2 / (3 - Math.cos(2 * t));\n    const fx = this.centerX + scale * Math.cos(t) * this.scaleToWindow;\n    const fy =\n      this.centerY + \n      (this.props.circleMode ?\n        scale * Math.sin(t) * this.scaleToWindow :\n        scale * Math.sin(2 * t) * this.symbolHeightMultiplier / 2 * this.scaleToWindow);\n    return [fx, fy];\n  }\n\n  /**\n   * Populate linksData[] with the links of the graph.\n   * @private\n   */\n  addLinks() {\n    this.linksData = [];\n    for (let i = 0; i < this.numSymbolNodes; i++) {   \n      // Define the ith link of the symbol.\n      const indexSymbol = i;\n      const indexSymbolNext = (i + 1) % this.numSymbolNodes;\n      this.addLink(indexSymbol, indexSymbolNext, 0, 1);\n           \n      // Link at top of shape, parallel to symbol link, invisible.\n      const vertexShapeTop = this.numVertices / 2;\n      const indexShapeTop = vertexShapeTop * this.numSymbolNodes + i;\n      const indexShapeTopNext =\n        vertexShapeTop * this.numSymbolNodes + (i + 1) % this.numSymbolNodes;\n      this.addLink(indexShapeTop, indexShapeTopNext, 1, 0);\n      \n      // Cross bar, invisible. This pulls the graph in and provides stability. Rather than linking\n      // the cross bar from the link at top of shape to the symbol index, we link it from the shape\n      // node prior. Found that this produces a more interesting graph. Note that previously this\n      // code was in the for loop below and executed when j === 3, but with the same parameters to\n      // addLink(). This produced a slightly different/thicker graph.\n      const vertexShapeAlmostTop = vertexShapeTop - 1;\n      const indexShapeAlmostTop = vertexShapeAlmostTop * this.numSymbolNodes + i;\n      this.addLink(indexShapeAlmostTop, indexSymbol, 1, 0);\n      \n      for (let j = 0; j < this.numVertices; j++) {     \n        // Define the jth link of the shape (e.g., if numVertices is 6, shape is 6-sided polygon).\n        const index = j * this.numSymbolNodes + i;\n        const indexShapeNext = (index + this.numSymbolNodes) % this.numNodes;\n        this.addLink(index, indexShapeNext, 0, 0.7);\n      \n        // Define the jth link of the spiral which spirals around the shapes. Two spirals are used\n        // for better stability.\n        const indexSpiralNext =\n          (j + 1) % this.numVertices * this.numSymbolNodes + (i + 1) % this.numSymbolNodes;            \n        this.addLink(index, indexSpiralNext, 0.65, 0.5);\n        this.addLink(index, indexSpiralNext, 0.65, 0.5);\n      }\n    }\n  }\n\n  /**\n   * Add a link of the graph to linksData[].\n   * @param {Number} indexSource The index of the source node of the link.\n   * @param {Number} indexTarget The index of the target node of the link.\n   * @param {Number} The strength of the link, or 0 for use default strength.\n   * @param {Number} opacity The opacity of the link.\n   * @private\n   */\n  addLink(indexSource, indexTarget, strength, opacity) {\n    this.linksData.push({\n      'source': indexSource.toString(),\n      'target': indexTarget.toString(),\n      '_strength' : strength,\n      'opacity' : opacity,\n      '_opacity' : opacity});\n    this.nodesData[indexSource].linkCount++;\n    this.nodesData[indexTarget].linkCount++;\n  }\n\n  /**\n   * Create the d3 simulation of the force-directed graph. Nodes and links must be added before\n   * calling this function.\n   * @private\n   */\n  createSimulation() {\n    // Create a new simulation containing the nodes.\n    this.simulation = d3.forceSimulation(this.nodesData);\n\n    // Add a charge to each node and a centering force.\n    this.simulation\n      .force('charge', d3.forceManyBody()\n        .strength((d) => {\n          return d.index < this.numSymbolNodes ?\n            this.forceManyBodyStrengthSymbolNodes : this.forceManyBodyStrengthNonSymbolNodes;\n        }))\n      .force('center', d3.forceCenter(this.simulationWidth / 2, this.simulationHeight / 2));\n\n    // Add the links, with the strength of the force of a link optionally specified by the link's\n    // _strength.\n    const link_force =  d3.forceLink(this.linksData)\n      .strength((d) => {\n        return d._strength > 0 ?\n          d._strength :\n          1 / Math.min(d.source.linkCount, d.target.linkCount); // default\n      })\n      .distance(this.linkDistance);        \n      this.simulation.force('links', link_force);\n\n    // Call tick() for every tick.\n    this.simulation.on('tick', this.tick);\n\n    // Set the decay rate to zero to have the simulation run forever at the current alpha.\n    this.simulation.alphaDecay(0);\n\n    // Rotate the symbol using a d3 interval.\n    if (this.rotateAmount)\n      d3.interval(this.rotate, this.rotateTimeMs);\n  }\n\n  /**\n   * Set up PixiJS to draw the simulation using WebGL (with Canvas fallback for older platforms).\n   * @private\n   */\n  pixiSetup() {\n    // Disable PIXI console log message.\n    PIXI.utils.skipHello();\n    \n    // Create PixiJS WebGL renderer element to hold the force-directed graph. We set the resolution\n    // to 3, then auto-resize the window back down to the correct size in order to increase the\n    // resolution. With resolution set to 1, it looks low resolution and pixelated.\n    this.stage = new PIXI.Container();\n    this.renderer = PIXI.autoDetectRenderer(\n      this.simulationWidth * this.scaleSimulationToPixi,\n      this.simulationHeight * this.scaleSimulationToPixi,\n      {antialias: true, transparent: true, resolution: 3}\n    );\n    this.renderer.autoResize = true;\n    this.pixiResizeRenderer();\n    this.element.appendChild(this.renderer.view);\n\n    // Draw circles for the nodes.\n    this.nodesData.forEach((node) => {\n      node.graphics = new PIXI.Graphics();\n      this.pixiDrawNode(node);\n      this.stage.addChild(node.graphics);\n    });\n\n    // Set up drag/drop.\n    d3.select(this.renderer.view)\n      .call(d3.drag()\n        .container(this.renderer.view)\n        .subject(() => this.simulation.find(d3.event.x, d3.event.y))\n        .on('start', this.dragStarted)\n        .on('drag', this.dragged)\n        .on('end', this.dragEnded));\n\n    // Set up graphics for the links.\n    this.linksGraphics = new PIXI.Graphics();\n    this.stage.addChild(this.linksGraphics);\n  }\n\n  /**\n   * Resize the PixiJS renderer based on the width and height.\n   * @private\n   */\n   pixiResizeRenderer() {\n    this.renderer.resize(\n      this.simulationWidth * this.scaleSimulationToPixi,\n      this.simulationHeight * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Move the PixiJS position of the specified node.\n   * @param {Object} node The node to move the position of.\n   * @private\n   */\n  pixiMoveNode(node) {\n    let { x, y, graphics } = node;\n    graphics.position =\n      new PIXI.Point(x * this.scaleSimulationToPixi, y * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Use PixiJS to draw the circle for a node.\n   * @param {Object} node The node to draw the circle for.\n   * @param {Number} selectedNodeMagnitude If this is the currently selected node, indicates the\n   * magnitude percentage (0 - 1.0) of the selection. A value of 0 indicates that this is not the\n   * currently selected node.\n   * @private\n   */\n  pixiDrawNode(node, selectedNodeMagnitude = 0) {\n    let nodeStrokeColor;\n    let nodeFillColor;\n    let nodeOpacity;\n    let nodeRadius;\n    if (selectedNodeMagnitude) {\n      // Scale the node properties based on the magnitude.\n      nodeStrokeColor = this.rgbNumberFromArray(\n        this.gradientColor(\n          this.nodeSelectedStrokeColorArray,\n          this.getNodeStrokeColorArray(node),\n          selectedNodeMagnitude));\n      nodeFillColor = this.rgbNumberFromArray(\n        this.gradientColor(\n          this.nodeSelectedFillColorArray,\n          // DCM 01.mar.2019: Always use same node fill color as stroke color.\n          this.getNodeStrokeColorArray(node),\n          //this.props.logoMode ? this.getNodeStrokeColorArray(node) : this.nodeFillColorArray,\n          selectedNodeMagnitude));\n      nodeOpacity =\n        this.nodeOpacity + (this.nodeOpacitySelected - this.nodeOpacity) * selectedNodeMagnitude;\n      nodeRadius =\n        this.nodeRadius + (this.nodeRadiusSelected - this.nodeRadius) * selectedNodeMagnitude;\n    }\n    else {\n      nodeStrokeColor = this.rgbNumberFromArray(this.getNodeStrokeColorArray(node));\n      // DCM 01.mar.2019: Always use same node fill color as stroke color.\n      nodeFillColor = nodeStrokeColor;\n      //nodeFillColor = this.rgbNumberFromArray(\n      //  this.props.logoMode ?\n      //    this.getNodeStrokeColorArray(node) : this.nodeFillColorArray);\n\n      nodeOpacity = this.nodeOpacity;\n      nodeRadius = this.nodeRadius;\n    }\n\n    node.graphics.clear();\n    node.graphics.lineStyle(\n      this.nodeStrokeWidth * this.scaleSimulationToPixi,\n      nodeStrokeColor,\n      nodeOpacity);\n    node.graphics.beginFill(nodeFillColor, nodeOpacity);\n    if (selectedNodeMagnitude) {\n      node.graphics.filters = [\n        new filters.GlowFilter(\n          5,                          // distance\n          4 * selectedNodeMagnitude,  // outerStrength\n          0,                          // innerStrength\n          nodeStrokeColor,            // color\n          0.5)                        // quality\n      ]\n    }\n    else\n      node.graphics.filters = null;\n    node.graphics.drawCircle(0, 0, nodeRadius * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Use PixiJS to draw the line for a link between nodes.\n   * @param {Object} link The link to draw the line for.\n   * @param {Number} linkMagnitude Indicates the magnitude percentage (0 - 1.0) of the link opacity\n   * boost.\n   * @private\n   */\n  pixiDrawLink(link, linkMagnitude) {\n    let { source, target, opacity } = link;\n    const linkOpacity = opacity + 0.25 * (this.props.logoMode ? 1 : linkMagnitude);\n    this.linksGraphics.alpha = linkOpacity;\n    this.linksGraphics.lineStyle(\n      (this.linkStrokeWidth + this.linkStrokeWidthIncreaseAtMagnitude * linkMagnitude) *\n        this.scaleSimulationToPixi,\n      this.rgbNumberFromArray(this.getColorArray(link.index, this.linksData.length)));\n      this.linksGraphics.moveTo(\n        source.x * this.scaleSimulationToPixi, source.y * this.scaleSimulationToPixi);\n      this.linksGraphics.lineTo(\n        target.x * this.scaleSimulationToPixi, target.y * this.scaleSimulationToPixi);\n  }\n\n  /**\n   * Return the color based on the specified index and number of indices.\n   * @param {Number} index The index to return the color of.\n   * @param {Number} numIndices The total number of indices used to determine the color.\n   * @return {Array} The color arrayof the specified index.\n   * @private\n   */\n  getColorArray(index, numIndices) {\n    if (this.props.circleMode)\n      return this.getColorArrayCircle(index, numIndices);\n    else\n      return this.getColorArrayInfinity(index, numIndices);\n  }\n\n  /**\n   * Return the color for circleMode based on the specified index and number of indices.\n   * @param {Number} index The index to return the color of.\n   * @param {Number} numIndices The total number of indices used to determine the color.\n   * @return {Array} The color arrayof the specified index.\n   * @private\n   */\n  getColorArrayCircle(index, numIndices) {\n    const lightBlue600 = [0, 144, 207];\n    const darkBlue700 = [0, 125, 188];\n    const transitionPercent = 0.25;\n    const transitionIndices = numIndices * transitionPercent;\n\n    const lastLightIndex = numIndices * 0.5 - transitionIndices;\n    const lastDarkIndex =\n      lastLightIndex + transitionIndices + numIndices * 0.5 - transitionIndices;\n\n    // Determine the color based on the color zone the index is in.\n    if (index <= lastLightIndex)\n      return lightBlue600;\n    else if (index <= lastLightIndex + transitionIndices)\n    {\n      const percentage = (index - lastLightIndex) / transitionIndices;\n      return this.gradientColor(darkBlue700, lightBlue600, percentage);\n    }\n    else if (index <= lastDarkIndex)\n      return darkBlue700;\n    else\n    {\n      const percentage = (index - lastDarkIndex) / transitionIndices;\n      return this.gradientColor(lightBlue600, darkBlue700, percentage);\n    }\n  }\n\n  /**\n   * Return the color for the infinity symbol based on the specified index and number of indices.\n   * @param {Number} index The index to return the color of.\n   * @param {Number} numIndices The total number of indices used to determine the color.\n   * @return {Array} The color arrayof the specified index.\n   * @private\n   */\n  getColorArrayInfinity(index, numIndices) {\n    // These colors come from the D logo.\n    const purple = [99,38,132];\n    const pink = [237,30,121];\n    const darkOrange = [241,90,36];\n    const lightOrange = [251,176,59];\n    const blue = [41,171,226];\n\n    // Certain color transitions are small, others are gradual.\n    const transitionPercentSmall = 0.02;\n    const transitionPercentGradual = 0.1;\n    const transitionIndicesSmall = numIndices * transitionPercentSmall;\n    const transitionIndicesGradual = numIndices * transitionPercentGradual;\n\n    // The number of indices of each color was determined by analyzing the D logo.\n    const lastPurpleIndex = numIndices * 0.15 - transitionIndicesGradual;\n    const lastPinkIndex =\n      lastPurpleIndex + transitionIndicesGradual + numIndices * 0.15 - transitionIndicesSmall;\n    const lastDarkOrangeIndex =\n      lastPinkIndex + transitionIndicesSmall + numIndices * 0.15 - transitionIndicesGradual;\n    const lastLightOrangeIndex =\n      lastDarkOrangeIndex + transitionIndicesGradual + numIndices * 0.15 - transitionIndicesSmall;\n    const lastBlueIndex =\n      lastLightOrangeIndex + transitionIndicesSmall + numIndices * 0.4 - transitionIndicesSmall;\n\n    // Determine the color based on the color zone the index is in.\n    if (index <= lastPurpleIndex)\n      return purple;\n    else if (index <= lastPurpleIndex + transitionIndicesGradual)\n    {\n      const percentage = (index - lastPurpleIndex) / transitionIndicesGradual;\n      return this.gradientColor(pink, purple, percentage);\n    }\n    else if (index <= lastPinkIndex)\n      return pink;\n    else if (index <= lastPinkIndex + transitionIndicesSmall)\n    {\n      const percentage = (index - lastPinkIndex) / transitionIndicesSmall;\n      return this.gradientColor(darkOrange, pink, percentage);\n    }\n    else if (index <= lastDarkOrangeIndex)\n      return darkOrange;\n    else if (index <= lastDarkOrangeIndex + transitionIndicesGradual)\n    {\n      const percentage = (index - lastDarkOrangeIndex) / transitionIndicesGradual;\n      return this.gradientColor(lightOrange, darkOrange, percentage);\n    }\n    else if (index <= lastLightOrangeIndex)\n      return lightOrange;\n    else if (index <= lastLightOrangeIndex + transitionIndicesSmall)\n    {\n      const percentage = (index - lastLightOrangeIndex) / transitionIndicesSmall;\n      return this.gradientColor(blue, lightOrange, percentage);\n    }     \n    else if (index <= lastBlueIndex)\n      return blue;\n    else\n    {\n      const percentage = (index - lastBlueIndex) / transitionIndicesSmall;\n      return this.gradientColor(purple, blue, percentage);\n    }\n  }\n\n  /**\n   * Return the gradient color based on the specified parameters.\n   * @param {Array} color1 The RGB array of color 1.\n   * @param {Array} color2 The RGB array of color 2.\n   * @param {Number} percent The percentage of the gradient.\n   * @return {Array} The RGB array of the gradient color.\n   * @private\n   */\n  gradientColor(color1, color2, percent) {\n    const p1 = percent;\n    const p2 = 1 - p1;\n    const rgb = [\n      Math.round(color1[0] * p1 + color2[0] * p2),\n      Math.round(color1[1] * p1 + color2[1] * p2),\n      Math.round(color1[2] * p1 + color2[2] * p2)];\n    return rgb;\n  }\n\n  /**\n   * Return the RGB color number corresponding to the specified RGB color array.\n   * @param {Array} array The RGB array.\n   * @return {Number} The RGB color number.\n   * @private\n   */\n  rgbNumberFromArray(array) {\n    let color = 0;\n    array.forEach(element => {\n      color = (color << 8) + element;\n    });\n    return Number(color);\n  }\n\n/**\n   * Return the stroke color of the specified node.\n   * @param {Object} node The node to return the stroke color of.\n   * @return {Array} The stroke color array of the specified node.\n   * @private\n   */\n  getNodeStrokeColorArray(node) {\n    return this.getColorArray(node.index % this.numSymbolNodes, this.numSymbolNodes)\n  }\n\n/**\n   * Start dragging a node.\n   * @param {Object} d The node being dragged.\n   * @private\n   */\n  dragStarted(d) {\n    // Disable dragging when scaling.\n    if (this.scaleSimulationToPixi !== 1.0)\n      return;\n\n    const isSimulationRunning = this.simulation.alphaDecay() === 0;\n    if (!isSimulationRunning) {\n      if (!d3.event.active)\n        this.simulation.alphaTarget(0.3).restart();\n    }\n    d3.event.subject.fx = d3.event.subject.x;\n    d3.event.subject.fy = d3.event.subject.y;\n  }\n\n  /**\n   * Continue dragging a node.\n   * @param {Object} d The node being dragged.\n   * @private\n   */\n  dragged(d) {\n    // Disable dragging when scaling.\n    if (this.scaleSimulationToPixi !== 1.0)\n      return;\n\n    d3.event.subject.fx = d3.event.x;\n    d3.event.subject.fy = d3.event.y;\n  }\n\n  /**\n   * Stop dragging a node.\n   * @param {Object} d The node being dragged.\n   * @private\n   */\n  dragEnded(d) {\n    // Disable dragging when scaling.\n    if (this.scaleSimulationToPixi !== 1.0)\n      return;\n\n    const isSimulationRunning = this.simulation.alphaDecay() === 0;\n    if (!isSimulationRunning) {\n      if (!d3.event.active)\n        this.simulation.alphaTarget(0);\n    }\n    d3.event.subject.fx = d3.event.subject._fx;\n    d3.event.subject.fy = d3.event.subject._fy;\n  }\n\n  /**\n   * Update the node and link positions on each tick of the simulation.\n   * @private\n   */\n  tick() {\n    // Move the node positions.\n    this.nodesData.forEach((node) => { this.pixiMoveNode(node); });\n\n    // Animate the selected node to grow larger and change to white, then shrink smaller and change\n    // back to original colors.\n    if (this.newBlockNodeStartTime != null) {\n      const node = this.nodesData[this.selectedNodeIndex];\n      const elapsedMs = new Date() - this.newBlockNodeStartTime;\n      if (elapsedMs > this.newBlockNodeTimerMs) {\n        // Draw a normal node circle.\n        this.pixiDrawNode(node);\n\n        // Disable new block node timer.\n        this.newBlockNodeStartTime = null;\n      }\n      else {\n        // Calculate the magnitude based on the timer.\n        const selectedNodeMagnitude =\n          (elapsedMs <= this.newBlockNodeTimerMs / 2 ?\n            elapsedMs :\n            this.newBlockNodeTimerMs - elapsedMs) /\n          (this.newBlockNodeTimerMs / 2);\n\n        // Draw a modifified node circle based on the magnitude.\n        this.pixiDrawNode(node, selectedNodeMagnitude);\n      }\n    }\n\n    // Calculate link magnitude.\n    let linkMagnitude = 0;\n    if (this.newBlockLinksStartTime != null) {\n      const elapsedMs = new Date() - this.newBlockLinksStartTime;\n      if (elapsedMs > this.newBlockLinksTimerMs) {\n        // Disable new block links timer.\n        this.newBlockLinksStartTime = null;\n      }\n      else {\n        // Calculate the magnitude based on the timer.\n        linkMagnitude =\n          elapsedMs <= this.newBlockLinksTimerMs / 3 ?\n            elapsedMs / (this.newBlockLinksTimerMs / 3) :\n            (this.newBlockLinksTimerMs - elapsedMs) /\n              (this.newBlockLinksTimerMs * 2 / 3);\n      }\n    }\n\n    // Draw lines for the links.\n    this.linksGraphics.clear();\n    this.linksData.forEach((link) => {\n      this.pixiDrawLink(link, linkMagnitude);\n    });\n    this.linksGraphics.endFill();\n\n    this.renderer.render(this.stage);\n  }\n\n  /**\n   * Rotate the symbol.\n   * @param {Number} elapsed Elapsed time since the timer became active.\n   * @private\n   */\n  rotate(elapsed) {\n    // In order to increase efficiency, it might be possible to decrease the frequency at which we\n    // rotate, then use d3 transition so that the movement is smooth. The problem is, non-symbol\n    // nodes will still be moving based on the simulation, so it's unknown whether this will\n    // actually improve performance. Since it does not seem like d3.interval() can be counted on to\n    // call this function with precision, this may not be a feasible approach, since if you do not\n    // know when the next call will be, you cannot know how long to make the transition.\n    // See webpage \"D3.selectAll(...).transition() Explained\"\n    // (http://bl.ocks.org/Kcnarf/9e4813ba03ef34beac6e)\n\n    for (let i = 0; i < this.numSymbolNodes; i++) {\n      this.rotateOffset += this.rotateAmount;\n      const pos = this.getNodePosition(i);\n      this.nodesData[i].fx = this.nodesData[i]._fx = pos[0];\n      this.nodesData[i].fy = this.nodesData[i]._fy = pos[1];\n    }\n  }\n}\n\nexport default SymbolD3;\n","/**\n * @file ImageLinkGrid\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid\n} from '@material-ui/core';\nimport Fade from 'react-reveal/Fade';\n\n/**\n * This component displays a grid of images that link to other pages.\n */\nclass ImageLinkGrid extends Component {\n  static propTypes = {\n    /**\n     * The className passed in by styled-components when styled(MyComponent) notation is used on\n     * this component.\n     */\n    className: PropTypes.string,\n    /**\n     * An array of objects describing the image links, where each object contains:\n     *  src: The <img> src attribute.\n     *  height: The <img> height attribute.\n     *  alt: The <img> alt attribute.\n     *  href: The <a> href attribute.\n     */    \n    imageLinks: PropTypes.array.isRequired,\n    /**\n     * The Material-UI justify prop to apply to each row.\n     * @see See [Material-UI Grid documentation](https://material-ui.com/api/grid/).\n     */\n    justifyRow: PropTypes.string,\n    /**\n     * The amount of space between rows.\n     */\n    marginBetweenRows: PropTypes.number,\n    /**\n     * The number of images per row.\n     */\n    perRow: PropTypes.number.isRequired\n  };\n\n  /**\n   * Create a ImageLinkGrid object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.state = {widths: [], maxHeight: 0};\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    this.calculateMaxImageDimensions();\n  }\n\n  /**\n   * Invoked by React immediately after updating occurs. This method is not called for the initial\n   * render.\n   * @param {Object} prevProps The previous props.\n   * @public\n   */\n  componentDidUpdate(prevProps) {\n    // Determine whether the props have changed.\n    let arePropsChanged = false;\n    const { imageLinks } = this.props;\n    if (imageLinks.length === prevProps.imageLinks.length) {\n      imageLinks.forEach((imageLink, index) => {\n        if (imageLink.src !== prevProps.imageLinks[index].src ||\n            imageLink.height !== prevProps.imageLinks[index].height)\n          arePropsChanged = true;\n      });\n    }\n    else\n      arePropsChanged = true;\n\n    // Only calculate max image dimensions if props have changed, otherwise we would cause an\n    // infinite loop of updating the state.\n    if (arePropsChanged)\n      this.calculateMaxImageDimensions();\n  }\n  \n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {\n      className,\n      imageLinks,\n      justifyRow,\n      marginBetweenRows,\n      perRow\n    } = this.props;\n    const { widths } = this.state;\n\n    // Make the container slightly taller than the max image height to account for Grid bug where\n    // there are a few pixels of whitespace added under the image. This '+ 4' can be removed once\n    // the Grid bug is fixed.\n    const containerHeight = this.state.maxHeight + 4;\n\n    // The image grid is an array of rows, where each row is an array of image objects. Creating\n    // a two-dimensional array like this is an extra step, but makes the code below more readable.\n    // TODO: Consider an alternate approach to solve the problem of the center column of 3-item rows\n    // not being centered. Use the same maxWidth for all cells. For cells on left, left align. For\n    // cells on right, right align. For all other cells, center. To do this, we'd likely need a cell\n    // within a cell, so that columns could first be centered relative to the column, then placed\n    // in a second wrapper cell (Grid) aligned either left, right, or center. Would need to test\n    // with different row lengths and numbers of images to see what effect it has on spacing for all\n    // conditions. It seems possible this would look wrong for rows longer than 3, since the spacing\n    // at the edges could be greater because the cell within the cell at the edges is not centered.!!!\n    let imageLinkGrid = [];\n    let maxWidthColumn = Array(perRow).fill(0);\n    for (let i = 0; i < imageLinks.length;) {\n      let row = [];\n      const isShortRow = imageLinks.length - i < perRow;\n      for (var j = 0; j < perRow && i < imageLinks.length; j++) {\n        // Do not update maxWidthColumn[j] if this is a short row (last row with fewer columns).\n        if (!isShortRow && widths[i])\n          maxWidthColumn[j] = Math.max(widths[i], maxWidthColumn[j]);\n        row.push(imageLinks[i++]);\n      }\n      imageLinkGrid.push(row);\n    }\n    \n    return (\n      <div className={className}>\n        {imageLinkGrid.map((row, rowIndex) => {\n          const isShortRow = row.length < perRow;\n          return (\n            <Grid container\n              direction='row'\n              // Always set justify='space-around' for a short row (last row with fewer columns).\n              justify={isShortRow ? 'space-around' : (justifyRow || 'space-between')}\n              alignItems='center'\n              key={rowIndex}\n              style={{ marginTop: (rowIndex && marginBetweenRows) ? marginBetweenRows : 0 }}\n            >\n              {row.map((imageLink, columnIndex) => {\n                const index = rowIndex * perRow + columnIndex;\n                return (\n                  <Grid container\n                    direction='column'\n                    justify='center'\n                    alignItems='center'\n                    key={columnIndex}\n                    // Do not use maxWidthColumn[j] if this is a short row (last row with fewer\n                    // columns).\n                    style={{\n                      width: isShortRow ? widths[index] : maxWidthColumn[columnIndex],\n                      height: containerHeight\n                    }}\n                  >\n                    <Grid item>\n                      <a href={imageLink.href} target='_blank' rel='noopener noreferrer'>\n                        <Fade\n                          bottom\n                          delay={index * 50}\n                          timeout={500}\n                        >\n                          <img\n                            src={imageLink.src}\n                            height={imageLink.height}\n                            alt={imageLink.alt}>\n                          </img>\n                        </Fade>\n                      </a>\n                    </Grid>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          );\n        })}\n      </div>\n    );\n  }\n\n  /**\n   * Calculate the maximum width and height of all images by loading the images. This allows us to\n   * create Grid containers for the images which are all the same size. An image will be\n   * horizontally and vertically centered in its container.\n   * @private\n   */\n  calculateMaxImageDimensions() {\n    const { imageLinks } = this.props;\n    this.setState({\n      widths: Array(imageLinks.length).fill(0),\n      maxHeight: 0\n    });\n\n    // Calculate the widths[] and maxHeight of the images by loading them.\n    imageLinks.forEach((imageLink, index) => {\n      const img = new Image();\n      img.onload = event => {\n        const { naturalWidth, naturalHeight } = event.currentTarget;\n        if (naturalHeight) {\n          // Scale width from natural width to image link width.\n          const width = imageLink.height / naturalHeight * naturalWidth;\n          this.setState(prevState => ({\n            widths: [\n              ...prevState.widths.slice(0, index),\n              width,\n              ...prevState.widths.slice(index + 1)\n            ],\n            maxHeight: Math.max(imageLink.height, prevState.maxHeight)\n          }));\n        }\n      }\n      // Setting src after we have set the onload event will cause the event to be triggered after\n      // the image has loaded.\n      img.src = imageLink.src;\n    });\n  }\n}\n\nexport default ImageLinkGrid;\n","/**\n * @file AboutPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Button,\n  Grid,\n  Paper,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport MailIcon from '@material-ui/icons/MailOutline';\nimport { Parallax } from 'react-parallax';\nimport Fade from 'react-reveal/Fade';\nimport Flip from 'react-reveal/Flip';\nimport LightSpeed from 'react-reveal/LightSpeed';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport CoinbaseCommerceButton from 'react-coinbase-commerce';\nimport 'react-coinbase-commerce/dist/coinbase-commerce-button.css';\nimport TrackablePage from '../TrackablePage/TrackablePage';\nimport SymbolD3 from '../SymbolD3/SymbolD3';\nimport ImageLinkGrid from '../ImageLinkGrid/ImageLinkGrid';\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\nimport bannerXHorizon from './banner-x-horizon.png';\nimport openBlockExplorerLogo from './open-block-explorer-logo-large.png';\nimport apolloLogoDark from './apollo-logo-dark-mode.png';\nimport apolloLogoLight from './apollo-logo-light-mode.png';\nimport githubOctocat from './github-octocat.png';\nimport graphqlLogo from './graphql-logo.png';\nimport materialUiLogo from './material-ui-logo.png';\nimport mySqlLogo from './mysql-logo.png';\nimport nomicsLogoDark from './nomics-logo-dark-mode.png';\nimport nomicsLogoLight from './nomics-logo-light-mode.png';\nimport prismaLogoDark from './prisma-logo-dark-mode.png';\nimport prismaLogoLight from './prisma-logo-light-mode.png';\nimport reactLogo from './react-logo-text.png';\nimport styledComponentsLogoDark from './styled-components-logo-dark-mode.png';\nimport styledComponentsLogoLight from './styled-components-logo-light-mode.png';\n\nconst PaperParallax = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorBodyBackground};\n    /* Allows shadow to overlap the element below it. */\n    position: relative;\n  }\n`;\n\nconst GridParallax = styled(Grid)`\n  && {\n    height: 280px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        height: 200px;       \n      `\n    }\n  }\n`;\n\nconst TypographyParallax = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 200;\n    color: ${props => props.theme.colorAboutHeaderText};  \n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.MD && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.SM && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};\n      `)\n    }\n  }\n`;\n\nconst GridSection = styled(Grid)`\n  && {\n    padding-top: 96px;\n    padding-bottom: 96px;\n    transition: ${'padding ' + duration.standard + 'ms ' + easing.easeInOut};\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_LG + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.MD && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_MD + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.SM && `\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_SM + 'px'};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        padding-top: 64px;\n        padding-bottom: 64px;\n        padding-left: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n        padding-right: ${Constants.ABOUT_PAGE_MARGIN_XS + 'px'};\n      `)\n    }\n  }\n`;\n\nconst GridSectionPrimary = styled(GridSection)`\n  && {\n    background: ${props => props.theme.colorAboutBackgroundPrimary};\n  }\n`;\n\nconst GridSectionSecondary = styled(GridSection)`\n  && {\n    background: ${props => props.theme.colorAboutBackgroundSecondary};\n  }\n`;\n\nconst GridItem = styled(Grid)`\n  && {\n    ${({ breakpoint }) =>\n      ((breakpoint === Breakpoints.XL || breakpoint === Breakpoints.LG) && `\n        width: calc(50% - ${Constants.ABOUT_PAGE_MARGIN_LG/2 + 'px'});\n      `) ||\n      (breakpoint === Breakpoints.MD && `\n        width: calc(50% - ${Constants.ABOUT_PAGE_MARGIN_MD/2 + 'px'});\n      `) ||\n      ((breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        width: 100%;\n      `)\n    }\n  }\n`;\n\nconst GridImageLeft = styled(GridItem)`\n  && {\n    order: 1;\n  }\n`;\n\nconst GridImageRight = styled(GridItem)`\n  && {\n    order: 2;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        order: 1;\n      `\n    }\n  }\n`;\n\nconst GridSymbolLeft = styled(GridImageLeft)`\n  && {\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-top: -32px;\n        margin-bottom: -32px;     \n      `\n    }\n  }\n`;\n\nconst GridText = styled(GridItem)`\n  && {\n    ${({ breakpoint }) =>\n    (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        margin-top: 48px;\n      `\n    }\n  }\n`;\n\nconst GridTextLeft = styled(GridText)`\n  && {\n    order: 1;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        order: 2;\n      `\n    }\n  }\n`;\n\nconst GridTextRight = styled(GridText)`\n  && {\n    order: 2;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        order: 2;\n      `\n    }\n  }\n`;\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 300;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\n// From the Material Design documentation: \"The ideal length for legibility of body copy is 40-60\n// characters per line.\"\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\nconst StyledA = styled.a`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n    text-decoration: none;\n    &:hover {\n      cursor: pointer;\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst ImgSection = styled.img`\n  && {\n    max-width: 100%;\n    max-height: 300px;\n  }\n`;\n\nconst ButtonSubscribe = styled(Button)`\n  && {\n    height: 48px;\n    border-radius: 24px;\n    margin-top: 24px;\n    padding-left: 24px;\n    padding-right: 24px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BUTTON};\n    font-weight: 400;\n    text-transform: capitalize;\n    background: ${props => props.theme.colorBodyButtonBackground};\n    color: ${props => props.theme.colorBodyButtonText};\n    &:hover {\n      background: ${props => props.theme.colorBodyButtonHoverBackground};\n      color: ${props => props.theme.colorBodyButtonHoverText};\n    }    \n  }\n`;\n\nconst MailIconButton = styled(MailIcon)`\n  && {\n    margin-right: 14px;\n  }\n`;\n\nconst SpanHeart = styled.span`\n  && {\n    color: ${props => props.theme.colorBodyTextLink};\n  }\n`;\n\nconst ButtonDonate = styled(CoinbaseCommerceButton)`\n  && {\n    height: 48px;\n    border: none;\n    border-radius: 24px;\n    margin-top: 24px;\n    padding-left: 24px;\n    padding-right: 24px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BUTTON};\n    font-weight: 400;\n    background: ${props => props.theme.colorBodyButtonBackground};\n    color: ${props => props.theme.colorBodyButtonText};\n    &:hover {\n      cursor: pointer;\n      background: ${props => props.theme.colorBodyButtonHoverBackground};\n      color: ${props => props.theme.colorBodyButtonHoverText};\n    }    \n  }\n`;\n\nconst SvgIconButton = styled(SvgIcon)`\n  && {\n    margin-right: 14px;\n  }\n`;\n\nconst PaperTwitter = styled(Paper)`\n  && {\n    background: ${props => props.theme.colorAboutTwitterBackground};\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM || breakpoint === Breakpoints.XS) && `\n        max-width: 640px;\n        margin: auto;\n      `\n    }\n  }\n`;\n\nconst ImageLinkGridThanks = styled(ImageLinkGrid)`\n  && {\n    margin-top: ${Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT/2 + 'px'};\n  }\n`;\n\n/**\n * Component for the about page.\n */\nclass AboutPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * The current Breakpoint, taking the desktop drawer (large screens) width into account.\n     */    \n    breakpoint: PropTypes.number.isRequired,\n    /**\n     * True if the desktop drawer (large screens) is open.\n     */    \n    isDesktopDrawerOpen: PropTypes.bool.isRequired,\n    /**\n     * True is the theme is dark, false if the theme is light.\n     */\n    isThemeDark: PropTypes.bool.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    return (\n      <div>\n        {this.getHeader()}\n        {this.getSectionMission()}\n        {this.getSectionOpenSource()}\n        {this.getSectionCommunity()}\n        {this.getSectionContributors()}\n        {this.getSectionThanks()}\n      </div>\n    );\n  }\n\n  /**\n   * Return the elements for the header based on the current breakpoint.\n   * @return {Object} The elements for the header based on the current breakpoint.\n   * @private\n   */\n  getHeader()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <PaperParallax elevation={2}>\n        <Fade timeout={1200}>\n          <Parallax bgImage={bannerXHorizon} bgImageAlt='banner' bgImageStyle={{marginTop: '-100px'}} strength={500}>\n            <GridParallax container direction='column' justify='center' alignItems='flex-start' breakpoint={breakpoint}>\n              <Grid item>\n                <TypographyParallax breakpoint={breakpoint}>\n                  An open-source block explorer prototype.\n                </TypographyParallax>\n              </Grid>\n            </GridParallax>\n          </Parallax>\n        </Fade>\n      </PaperParallax>\n    );\n  }\n\n  /**\n   * Return the elements for the Mission section based on the current breakpoint.\n   * @return {Object} The elements for the Mission section based on the current breakpoint.\n   * @private\n   */\n  getSectionMission()\n  {\n    const { breakpoint, isThemeDark } = this.props;\n\n    return (\n      <GridSectionPrimary container direction='row' justify='space-between' alignItems='center' breakpoint={breakpoint}>\n        <GridSymbolLeft item breakpoint={breakpoint}>\n          <Grid container direction='row' justify='center' alignItems='center'>\n            <SymbolD3\n              width={this.getSymbolD3Width()}\n              isThemeDark={isThemeDark}\n              circleMode={true}\n            />\n          </Grid>\n        </GridSymbolLeft>\n        <GridTextRight item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Mission\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'Our mission is to provide a bridge between you and the blockchain, '}\n              {'allowing you to easily search for and retrieve information '}\n              {'which is useful in a format that is understandable, with everything you want to '}\n              {'know right at your fingertips.'}\n            </TypographyBody>\n          </Fade>\n        </GridTextRight>\n      </GridSectionPrimary>\n    );\n  }\n\n  /**\n   * Return the elements for the Open Source section based on the current breakpoint.\n   * @return {Object} The elements for the Open Source section based on the current breakpoint.\n   * @private\n   */\n  getSectionOpenSource()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <GridSectionSecondary container direction='row' justify='space-between' alignItems='center' breakpoint={breakpoint}>\n        <GridTextLeft item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Open, Transparent, Trusted\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'Open Block Explorer is an open-source project under the '}\n              <StyledA href={Constants.URI_GITHUB_MIT_LICENSE} target='_blank' rel='noopener noreferrer'>MIT license</StyledA>\n              {', providing transparency, reliability, and security.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'We believe that all block explorers of public blockchains should be open source. '}\n              {'If you’re going to trust a block explorer to provide timely, accurate, and '}\n              {'uncensored information, the code should be open for all to see.'}\n            </TypographyBody>\n          </Fade>\n        </GridTextLeft>\n        <GridImageRight item breakpoint={breakpoint}>\n          <Grid container direction='row' justify='center' alignItems='center'>\n            <Flip right timeout={800}>\n              <ImgSection\n                src={openBlockExplorerLogo}\n                alt='logo'>\n              </ImgSection>\n            </Flip>\n          </Grid>\n        </GridImageRight>\n      </GridSectionSecondary>\n    );\n  }\n\n  /**\n   * Return the elements for the Community section based on the current breakpoint.\n   * @return {Object} The elements for the Community section based on the current breakpoint.\n   * @private\n   */\n  getSectionCommunity()\n  {\n    const { breakpoint, isThemeDark } = this.props;\n\n    const theme = isThemeDark ? 'dark' : 'light';\n    return (\n      <GridSectionPrimary container direction='row' justify='space-between' alignItems='center' breakpoint={breakpoint}>\n        <GridImageLeft item breakpoint={breakpoint}>\n          <Fade timeout={2000}>\n            {/* Twitter card looks better at elevation 2 than 1, since card/body are same color. */}\n            <PaperTwitter elevation={2} breakpoint={breakpoint}>\n              <TwitterTimelineEmbed\n                sourceType='profile'\n                screenName='dylancm4'\n                theme={theme}\n                options={{height: 432}}\n                // Setting key here is a bit of a hack. Since TwitterTimelineEmbed only uses the theme\n                // prop when it mounts, the TwitterTimelineEmbed theme will not change if the user changes\n                // the theme after the page has loaded. By setting key to the theme string, we can force a\n                // remount of TwitterTimelineEmbed when the theme changes, so that it picks up the change\n                // to its theme prop. \n                key={theme}\n                noFooter\n                transparent\n              />\n            </PaperTwitter>\n          </Fade>\n        </GridImageLeft>\n        <GridTextRight item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Community\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'Follow '}\n              <StyledA href={Constants.URI_TWITTER_OPEN_BLOCK_EXPLORER} target='_blank' rel='noopener noreferrer'>@dylancm4</StyledA>\n              {' on Twitter to learn about the latest project news.'}\n            </TypographyBody>\n            <br />\n            <TypographyBody>\n              {'Learn more about our project on '}\n              <StyledA href={Constants.URI_GITHUB_OPEN_BLOCK_EXPLORER_PROJECT} target='_blank' rel='noopener noreferrer'>GitHub</StyledA>\n              {' and in our '}\n              <StyledA href={Constants.URI_GITHUB_OPEN_BLOCK_EXPLORER_WIKI} target='_blank' rel='noopener noreferrer'>wiki</StyledA>\n              {'.'}\n            </TypographyBody>\n            { Constants.IS_STATIC_MODE ?\n              <Fragment /> :\n              <Fragment>\n                <br />\n                <TypographyBody>\n                  {'Join our mailing list today to stay up to date on development of our project. '}\n                  {'We’ll let you know when Open Block Explorer goes live with real blockchain data.'}\n                </TypographyBody>\n                {/* Begin MailChimp Signup Form */}\n                <form action='https://dfinityexplorer.us18.list-manage.com/subscribe/post?u=059dc252f5f0cea2fec413c42&amp;id=4ebbd6c248' method='post' id='mc-embedded-subscribe-form' name='mc-embedded-subscribe-form' className='validate' target='_blank' rel='noopener noreferrer' noValidate>\n                  {/* real people should not fill this in and expect good things - do not remove this or risk form bot signups  */}\n                  <div style={{ position: 'absolute', left: '-5000px' }} aria-hidden='true'>\n                    <input type='text' name='b_059dc252f5f0cea2fec413c42_4ebbd6c248' tabIndex='-1' defaultValue='' />\n                  </div>\n                  <div className='clear'>\n                    <ButtonSubscribe type='submit'>\n                      <MailIconButton />\n                      Join Our Mailing List\n                    </ButtonSubscribe>\n                  </div>\n                </form>\n                {/* End MailChimp Signup Form */}\n              </Fragment>\n            }            \n          </Fade>\n        </GridTextRight>\n      </GridSectionPrimary>\n    );\n  }\n  \n  /**\n   * Return the elements for the Contributors section based on the current breakpoint.\n   * @return {Object} The elements for the Contributors section based on the current breakpoint.\n   * @private\n   */\n  getSectionContributors()\n  {\n    const { breakpoint } = this.props;\n\n    return (\n      <GridSectionSecondary container\n        direction='row'\n        justify='space-between'\n        alignItems='center'\n        breakpoint={breakpoint}\n      >\n        <GridTextLeft item breakpoint={breakpoint}>\n          <Fade bottom timeout={500}>\n            <TypographyHeading breakpoint={breakpoint}>\n              Contributors\n            </TypographyHeading>\n            <br />\n            <TypographyBody>\n              {'Open Block Explorer is a cooperative effort, made with '}\n              <SpanHeart>♥</SpanHeart>\n              {' by '}\n              <StyledA href={Constants.URI_GITHUB_DYLAN} target='_blank' rel='noopener noreferrer'>@dylancm4</StyledA>\n              {', '}\n              <StyledA href={Constants.URI_GITHUB_TODD} target='_blank' rel='noopener noreferrer'>@toddkitchens</StyledA>\n              {', and a friendly bunch of '}\n              <StyledA href={Constants.URI_GITHUB_CONTRIBUTORS} target='_blank' rel='noopener noreferrer'>contributors</StyledA>\n              {'.'}\n            </TypographyBody>\n            { Constants.IS_STATIC_MODE ?\n              <Fragment /> :\n              <Fragment>\n                <br />\n                <TypographyBody>\n                  {'Make a donation to help support the project! Open-source development is powered '}\n                  {'by the support of people like you.'}\n                </TypographyBody>\n                <ButtonDonate checkoutId={Constants.COINBASE_CHECKOUT_ID}>\n                  <Grid container direction='row' justify='flex-start' alignItems='center'>\n                    <Grid item>\n                      <SvgIconButton>\n                        <path d={Constants.ICON_SVG_PATH_BITCOIN} />\n                      </SvgIconButton>\n                    </Grid>\n                    <Grid item>\n                      Donate With Crypto\n                    </Grid>\n                  </Grid>\n                </ButtonDonate>\n              </Fragment>\n            }            \n          </Fade>\n        </GridTextLeft>\n        <GridImageRight item breakpoint={breakpoint}>\n          <Grid container direction='row' justify='center' alignItems='center'>\n            <LightSpeed right timeout={800}>\n              <ImgSection\n                src={githubOctocat}\n                alt='GitHub Octocat'>\n              </ImgSection>\n            </LightSpeed>\n          </Grid>\n        </GridImageRight>\n      </GridSectionSecondary>\n    );\n  }\n\n  /**\n   * Return the elements for the Thanks section based on the current breakpoint.\n   * @return {Object} The elements for the Thanks section based on the current breakpoint.\n   * @private\n   */\n  getSectionThanks() {\n    // Possibly add: GraphQL Yoga, Recharts!!!\n    const { breakpoint, isThemeDark } = this.props;\n    \n    // Adjust heights based on the perceived size of images (i.e., some images contain smaller logos\n    // to make room for the text, so those images need to be enlarged).\n    const reactHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.3;\n    const styledComponentsHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.4;\n    const materialUiHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT;\n    const nomicsHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 0.9;\n    const apolloHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT;\n    const graphqlHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.4;\n    const prismaHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT;\n    const mySqlHeight = Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT * 1.2;\n\n    // Define the image link objects for the ImageLinkGrid.\n    const imageLinks = [\n      {\n        src: reactLogo,\n        height: reactHeight,\n        alt: 'React logo',\n        href: Constants.URI_ABOUT_REACT\n      },\n      {\n        src: isThemeDark ? styledComponentsLogoDark : styledComponentsLogoLight,\n        height: styledComponentsHeight,\n        alt: 'Styled Components logo',\n        href: Constants.URI_ABOUT_STYLED_COMPONENTS\n      },\n      {\n        src: materialUiLogo,\n        height: materialUiHeight,\n        alt: 'Material-UI logo',\n        href: Constants.URI_ABOUT_MATERIAL_UI\n      },\n      {\n        src: isThemeDark ? nomicsLogoDark : nomicsLogoLight,\n        height: nomicsHeight,\n        alt: 'Nomics logo',\n        href: Constants.URI_ABOUT_NOMICS\n      },\n      {\n        src: isThemeDark ? apolloLogoDark : apolloLogoLight,\n        height: apolloHeight,\n        alt: 'Apollo logo',\n        href: Constants.URI_ABOUT_APOLLO\n      },\n      {\n        src: graphqlLogo,\n        height: graphqlHeight,\n        alt: 'GraphQL logo',\n        href: Constants.URI_ABOUT_GRAPHQL\n      },\n      {\n        src: isThemeDark ? prismaLogoDark : prismaLogoLight,\n        height: prismaHeight,\n        alt: 'Prisma logo',\n        href: Constants.URI_ABOUT_PRISMA\n      },\n      {\n        src: mySqlLogo,\n        height: mySqlHeight,\n        alt: 'MySQL logo',\n        href: Constants.URI_ABOUT_MY_SQL\n      }\n    ];\n\n    // Calculate images per row based on the current breakpoint.\n    let imagesPerRow;\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        imagesPerRow = 1;\n        break;\n      case Breakpoints.SM:\n        imagesPerRow = 2;\n        break;\n      default:\n        imagesPerRow = 3;\n        break;\n    }\n\n    return (\n      <GridSectionPrimary container\n        direction='column'\n        justify='flex-start'\n        alignItems='stretch'\n        breakpoint={breakpoint}\n      >\n        <Grid container direction='row' justify='center' alignItems='center'>\n          <Grid item>\n            <Fade bottom timeout={500}>\n              <TypographyHeading breakpoint={breakpoint}>Special thanks to:</TypographyHeading>\n            </Fade>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <ImageLinkGridThanks\n            imageLinks={imageLinks}\n            perRow={imagesPerRow}\n            justifyRow={breakpoint === Breakpoints.XS ? 'center' : 'space-between'}\n            marginBetweenRows={Constants.ABOUT_PAGE_PROJECT_ICONS_HEIGHT / 2}\n          />\n        </Grid>\n      </GridSectionPrimary>\n    );\n  }\n\n  /**\n   * Return the width of the SymbolD3 component based on the current breakpoint.\n   * @return {Number} The width of the SymbolD3 component based on the current breakpoint.\n   * @private\n   */\n  getSymbolD3Width() {\n    const { breakpoint, isDesktopDrawerOpen } = this.props;\n    const contentWidth =  window.innerWidth - (isDesktopDrawerOpen ? Constants.DRAWER_WIDTH : 0);\n\n    let width;\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        width = contentWidth - Constants.ABOUT_PAGE_MARGIN_XS*2;\n        break;\n      case Breakpoints.SM:\n        width = contentWidth - Constants.ABOUT_PAGE_MARGIN_SM*2;\n        break;\n      case Breakpoints.MD:\n        width = contentWidth*0.5 - Constants.ABOUT_PAGE_MARGIN_MD*3/2;\n        // This is a bit of a hack, but we scale the symbol slightly larger because it does not fill\n        // its window all the way to the edges.\n        width *= 1.2;\n        break;\n      default:\n        width = contentWidth*0.5 - Constants.ABOUT_PAGE_MARGIN_LG*3/2;\n        width *= 1.2;\n        break;\n    }\n    return width;\n  }\n}\n\nexport default AboutPage;\n","/**\n * @file querySearchGetType\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get type of object being searched for based on query string.\n * @return {String} The type of object being searched for.\n */\nconst querySearchGetType = gql`\n  query SearchGetType($query: String!) {\n    searchGetType(query: $query) {\n      type\n    }\n  }\n`;\n\nexport default querySearchGetType;\n","/**\n * @file SearchPage\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { Query } from \"react-apollo\";\nimport styled from 'styled-components';\nimport {\n  Typography\n} from '@material-ui/core';\nimport querySearchGetType from '../../graphql/querySearchGetType';\nimport TrackablePage from '../TrackablePage/TrackablePage'\nimport { Breakpoints } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst TypographyHeading = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H4};\n    font-weight: 400;\n    color: ${props => props.theme.colorBodyText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_H5};       \n      `\n    }\n  }\n`;\n\nconst TypographyBody = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    line-height: 1.75rem;\n    color: ${props => props.theme.colorBodyTextDim};\n  }\n`;\n\n/**\n * The Search Page shows details about a search.\n */\nclass SearchPage extends TrackablePage {\n  static propTypes = {\n    /**\n     * Object containing information about how a <Route path> matched the URL.\n     */\n    match: PropTypes.object.isRequired\n  };\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { breakpoint } = this.props;\n    const { query } = this.props.match.params;\n    return (\n      <div style={{ marginTop: '32px', marginLeft: '32px' }}>\n        <TypographyHeading breakpoint={breakpoint}>Search</TypographyHeading>\n        <Query query={querySearchGetType} variables={{ query }}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <TypographyBody>Searching...</TypographyBody>              \n              );\n            else if (error)\n              return (\n                <TypographyBody>Network error</TypographyBody>             \n              );\n            else if (data.searchGetType.type === \"Block\")\n              return (\n                <Redirect to={{ pathname: `/block/${query}` }}/>\n              );\n            else if (data.searchGetType.type === \"Transaction\")\n              return (\n                <Redirect to={{ pathname: `/tx/${query}` }}/>\n              );\n            else\n              return (              \n                <TypographyBody>Sorry, this is an invalid search string.</TypographyBody>             \n              );\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n","/**\n * @file querySearchAutoComplete\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\n/**\n * GraphQL query to get auto-complete items based on query string.\n * @return {Array} The array of auto-complete items.\n */\nconst querySearchAutoComplete = gql`\n  query SearchAutoComplete($query: String!, $first: Int) {\n    searchAutoComplete(query: $query, first: $first) {\n      items\n    }\n  }\n`;\n\nexport default querySearchAutoComplete;\n","/**\n * @file DEAppBar\n * @copyright Copyright (c) 2018-2020 Dylan Miller, Todd Kitchens, and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { Query } from 'react-apollo';\nimport styled from 'styled-components';\nimport {\n  AppBar,\n  Divider,\n  Drawer,\n  Fade,\n  Grid,\n  IconButton,\n  Input,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  SvgIcon,\n  SwipeableDrawer,\n  Toolbar,\n  Typography,\n  Zoom\n} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport HomeIcon from '@material-ui/icons/Home';\nimport InfoIcon from '@material-ui/icons/Info';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RevealFade from 'react-reveal/Fade';\nimport RevealZoom from 'react-reveal/Zoom';\nimport Downshift from 'downshift';\nimport ResponsiveComponent from '../ResponsiveComponent/ResponsiveComponent'\nimport querySearchAutoComplete from '../../graphql/querySearchAutoComplete';\nimport {\n  Breakpoints,\n  getBreakpoint,\n  isBreakpointLessOrEqualTo,\n  isBreakpointDesktop\n} from '../../utils/breakpoint';\nimport Constants from '../../constants';\nimport openBlockExplorerLogo from './open-block-explorer-logo.png';\n\nconst StyledAppBar = styled(AppBar)`\n  && {\n    background: ${props => props.theme.colorAppBarBackground};\n    /* AppBar is above Drawer */\n    z-index: ${zIndex.drawer + 1};\n  }\n`;\n\nconst SearchAppBar = styled(AppBar)`\n  && {\n    background: white;\n    /* AppBar is above Drawer */\n    z-index: ${zIndex.drawer + 1};\n  }\n`;\n\nconst StyledToolbar = styled(Toolbar)`\n  && {\n    padding-left: 12px;\n    padding-right: 12px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-left: 4px;\n        padding-right: 4px;\n      `\n    }\n  }\n`;\n\nconst SearchToolbar = styled(Toolbar)`\n  && {\n    padding-top: 4px;\n    padding-bottom: 4px;\n    padding-left: 16px;\n    padding-right: 12px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        padding-top: 4px;\n        padding-bottom: 4px;\n        padding-left: 8px;\n        padding-right: 4px;\n      `\n    }\n  }\n`;\n\nconst ImgProductIcon = styled.img`\n  && {\n    margin-left: 12px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-left: 0px;\n      `\n    }\n  }\n`;\n\n// Specify font-size in px rather than rem for app name, since it should not change based on browser\n// settings.\nconst TypographyAppName = styled(Typography)`\n  && {\n    margin-top: 1px;\n    font-family: 'Istok Web', sans-serif;\n    font-weight: bold;\n    font-size: 20px;\n    user-select: none;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        font-size: 14px;\n      `\n    }\n  }\n`;\n\nconst TypographyBlock = styled(TypographyAppName)`\n  && {\n    margin-left: 12px;\n    letter-spacing: 12px;\n    color: ${props => props.theme.colorAppBarOpenText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-left: 8.4px;\n        letter-spacing: 8.4px;\n      `\n    }\n  }\n`;\n\n/**\n * A separate div is used for the border between OPEN and Explorer, so that it can be\n * animated. The height is based on TypographyAppName font-size, and matches exactly what\n * \"border-right: 1px solid\" in TypographyBlock would look like.\n */\nconst TypographyBorder = styled.div`\n  && {\n    width: 0px;\n    height: 29px;\n    border-right: ${props => '1px solid ' + props.theme.colorAppBarOpenText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        height: 20.3px;\n      `\n    }\n  }\n`;\n\nconst TypographyExplorer = styled(TypographyAppName)`\n  && {\n    margin-left: 14px;\n    letter-spacing: 7.5px;\n    color: ${props => props.theme.colorAppBarExplorerText};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-left: 9.8px;\n        letter-spacing: 5.25px;\n      `\n    }\n  }\n`;\n\nconst InputSearch = styled(Input)`\n  && {\n    /*\n     * margin-top is used to center the Input vertically, and depends on font-size.\n     * DCM 21.apr.2018: After updating Material-UI, margin-top had to be adjusted for all\n     * breakpoints based on trial and error.\n     */\n    margin-top: 0.6rem;\n    color: ${props => props.theme.colorSearchText};\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_H6};\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM && `\n        margin-top: 0.875rem;\n        /* font-size \"Body 2\" is not small enough to fit a hash, but this is smallest we should\n           go. */\n        font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        margin-top: 0.625rem;\n        font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n      `)\n    }\n  }\n`;\n\n/**\n * List for search auto-complete list.\n */\nconst ListSearch = styled(List)`\n  && {\n    /* The List component has top and bottom padding of 8px. Remove it. */\n    padding-top: 0px;\n    padding-bottom: 0px;\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    color:  ${props => props.theme.colorSearchText};\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM && `\n        font-size: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        /* This font size is smaller than Material Design standards, but fits an auto-complete\n           hash. */\n        /**\n         * BUG: A full hash pushes the close button off of the screen with this font size\n         * This bug existed in old code too, but you could see a tiny bit of the close button\n         * It seems like this could have to do with style={{ flexGrow: '1' }}>\n         * For now, changing the font size smaller than 0.5625rem to avoid bug\n         * font-size: 0.5625rem; this is the size we would like!!!\n         */\n        font-size: 7px;\n      `)\n    }\n  }\n`;\n\n/**\n * ListItem for search auto-complete list.\n */\nconst ListItemSearch = styled(ListItem)`\n  && {\n    padding-top: 11px;\n    padding-bottom: 11px;\n    /* Use theme for the highlighted/focused color!!! */\n    background: ${props => props.highlighted ? Constants.COLOR_GRAY_ON_WHITE : 'initial'};\n  }\n`;\n\n/**\n * ListItemIcon for search auto-complete list.\n */\nconst ListItemIconSearch = styled(ListItemIcon)`\n  && {\n    min-width: 32px;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM && `\n        min-width: 30px;\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        min-width: 16px;\n      `)\n    }\n  }\n`;\n\n/**\n * SearchIcon for search auto-complete list.\n */\nconst SearchIconListSearch = styled(SearchIcon)`\n  && {\n    color: ${props => props.theme.colorSearchIcon};\n    /* Sizes here are based on ListSearch font-sizes. */\n    width: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    height: ${Constants.MATERIAL_FONT_SIZE_BODY_1};\n    /*\n     * DCM 21.apr.2018: After updating Material-UI, margin-right had to be adjusted for all\n     * breakpoints based on trial and error.\n     */\n    margin-right: 0px;\n    ${({ breakpoint }) =>\n      (breakpoint === Breakpoints.SM && `\n        width: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n        height: ${Constants.MATERIAL_FONT_SIZE_BODY_2};\n      `) ||\n      (breakpoint === Breakpoints.XS && `\n        /* BUG: 0.5625rem is the size we would like (see above)!!! */\n        width: 7px;\n        height: 7px;\n        margin-right: -7px;\n      `)\n    }\n  }\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  && {\n    color: ${props => props.theme.colorAppBarTextButton};\n\n    &:hover {\n      background: ${props => fade(props.theme.colorIconButtonHover, props.theme.opacityActionHover)};\n      color: ${props => props.theme.colorIconButtonHover};\n      /* Reset on touch devices. */\n      @media (hover: none) {\n        background: inherit;\n        color: ${props => props.theme.colorAppBarTextButton};\n      }\n    }\n  }\n`;\n\nconst StyledMenuIcon = styled(MenuIcon)`\n  && {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nconst StyledSearchIcon = styled(SearchIcon)`\n  && {\n    width: 32px;\n    height: 32px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        width: 24px;\n        height: 24px;\n      `\n    }\n  }\n`;\n\nconst StyledCloseIcon = styled(CloseIcon)`\n  && {\n    width: 32px;\n    height: 32px;\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        width: 24px;\n        height: 24px;\n      `\n    }\n  }\n`;\n\nconst StyledSwipeableDrawer = styled(({ ...other }) => (\n  <SwipeableDrawer {...other} classes={{ paper: 'paper' }} />\n))`\n  & .paper {\n    width: ${Constants.DRAWER_WIDTH + 'px'};\n    background: ${props => props.theme.colorDrawerBackground};\n  }\n`;\n\nconst StyledDrawer = styled(({ ...other }) => (\n  <Drawer {...other} classes={{ paper: 'paper' }} />\n))`\n  & .paper {\n    width: ${Constants.DRAWER_WIDTH + 'px'};\n    background: ${props => props.theme.colorDrawerBackground};\n    border-right:\n      ${props => props.theme.isDark ? `1px solid ${props.theme.colorBodyBackground}` : '0px'};\n  }\n`;\n\nconst StyledDivider = styled(Divider)`\n  && {\n    background: ${props => props.theme.colorDrawerDivider};\n  }\n`;\n\nconst DrawerListItemIcon = styled(ListItemIcon)``;\n\nconst DrawerListItemText = styled(({ ...other }) => (\n  <ListItemText {...other} classes={{ primary: 'primary' }} />\n))``;\n\nconst DrawerListItem = styled(ListItem)`\n  && {\n    padding-top: 9.5px;\n    padding-bottom: 9.5px;\n    ${DrawerListItemIcon} {\n      margin-left: 8px;\n      color: ${\n        props => props.selected ?\n          props.theme.colorDrawerIconTextSelected :\n          props.theme.colorDrawerIcon\n      };\n    }\n    ${DrawerListItemText} {\n      margin-left: -8px;\n      & .primary {\n        font-family: ${Constants.FONT_PRIMARY};\n        font-size: ${Constants.MATERIAL_FONT_SIZE_BUTTON};\n        font-weight: ${props => props.selected ? 600 : 400};\n        color: ${\n          props => props.selected ?\n            props.theme.colorDrawerIconTextSelected :\n            props.theme.colorDrawerText\n        };\n      }\n    }\n  }\n`;\n\n// DCM 2019-02-02: I tried for a few hours to change the \"selected\" background color of a ListItem\n// using styled-components, but I was unsuccessful even though it seems like the code below should\n// work. I was able to change the color using the Material-UI withStyles() technique of styling:\n// https://stackoverflow.com/questions/50371315/how-to-override-material-ui-menuitem-selected-background-color\n// However, that technique does not have access to props, so it would not work well with the way\n// we're currently doing theming. There is likely a way to get this working in a way that does not\n// use styled-components, but the \"selected\" background color is not important enough to spend the\n// time on this issue right now.\n/*const DrawerListItem = styled(({ ...other }) => (\n  <ListItem classes={{ selected: 'selected' }} {...other} />\n))`\n  && {\n    background: pink;\n    &:focus {\n      background: cyan;\n    }\n    &:hover {\n      background: red;\n    }\n    // All of the above colors work, but the \"selected\" background color does not work.\n    & .selected {\n      background: blue !important;\n    }\n  }\n`;*/\n\n/**\n * The App Bar provides content and actions related to the current screen.\n */\nclass DEAppBar extends ResponsiveComponent {\n  static propTypes = {\n    /**\n     * Callback fired when the App Bar is resized.\n     */\n    handleAppBarResize: PropTypes.func,\n    /**\n     * Callback fired when the desktop drawer (large screens) menu button is clicked.\n     */\n    handleDesktopDrawerMenuClick: PropTypes.func.isRequired,\n    /**\n     * Callback fired when the mobile drawer (small screens) menu button is clicked.\n     */\n    handleMobileDrawerMenuClick: PropTypes.func.isRequired,\n    /**\n     * True if the desktop drawer (large screens) is open.\n     */    \n    isDesktopDrawerOpen: PropTypes.bool.isRequired,\n    /**\n     * True if the mobile drawer (small screens) is open.\n     */    \n    isMobileDrawerOpen: PropTypes.bool.isRequired,\n    /**\n     * Object containing information about the current react-router location.\n     */\n    location: PropTypes.object.isRequired,\n    /**\n     * Reference to the <HashRouter> element.\n     */\n    routerRef: PropTypes.object\n  };\n\n  /**\n   * Create a DEAppBar object.\n   * @constructor\n   */\n  constructor() {\n    super();\n\n    this.state = {\n      isSearchOn: false,\n      searchQuery: ''\n    };\n\n    this.toolbarDivRef = React.createRef();\n\n    this.maxSearchAutoCompleteItems = 6;\n\n    // Bind to make 'this' work in callbacks.\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n    this.handleCloseClick = this.handleCloseClick.bind(this);\n    this.handleDownshiftStateChange = this.handleDownshiftStateChange.bind(this);\n    this.handleDownshiftChange = this.handleDownshiftChange.bind(this);\n    this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n    this.isActiveRoute = this.isActiveRoute.bind(this);\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const { isSearchOn } = this.state;\n    return (\n      <Fragment>\n        {/* Toolbar shim to compensate for AppBar position='fixed'. */}\n        <div ref={this.toolbarDivRef}>\n          <Toolbar />\n        </div>\n        <Fade in={isSearchOn} timeout={200} mountOnEnter unmountOnExit>\n          <SearchAppBar elevation={2}>\n            {this.getToolbarSearchContent()}\n          </SearchAppBar>\n        </Fade>\n        <Fade in={!isSearchOn} timeout={200} mountOnEnter unmountOnExit>\n          <StyledAppBar elevation={2}>\n            {this.getToolbarDefaultContent()}\n          </StyledAppBar>\n        </Fade>\n        {this.getDrawer()}\n      </Fragment>\n    );\n  }\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree).\n   * @public\n   */\n  componentDidMount() {\n    super.componentDidMount();\n\n    // Pass App Bar height to owner.\n    if (this.props.handleAppBarResize)\n      this.props.handleAppBarResize(this.toolbarDivRef.current.offsetHeight);\n  }\n\n  /**\n   * Force the component to re-render when the window is resized.\n   * @private\n   */\n  handleWindowResize() {\n    super.handleWindowResize();\n\n    // Pass App Bar height to owner.\n    if (this.props.handleAppBarResize)\n      this.props.handleAppBarResize(this.toolbarDivRef.current.offsetHeight);\n\n    // Close the mobile drawer (small screens) when screen is resized larger, so that it does not\n    // reappear when the screen is resized smaller.\n    if (isBreakpointDesktop() && this.props.isMobileDrawerOpen)\n      this.props.handleMobileDrawerMenuClick();\n  }\n\n  /**\n   * Return the elements for the search toolbar based on the current breakpoint.\n   * @return {Object} The elements for the search toolbar based on the current breakpoint.\n   * @private\n   */\n  getToolbarSearchContent() {\n    const breakpoint = getBreakpoint();\n    return (\n      <SearchToolbar variant='dense' breakpoint={breakpoint}>\n        <Grid container direction='row' justify='space-between' alignItems='flex-start' wrap='nowrap'>\n          <Grid item style={{ flexGrow: '1' }}>\n            <Downshift\n              onStateChange={this.handleDownshiftStateChange}\n              onChange={this.handleDownshiftChange}\n              selectedItem={this.state.searchQuery}\n            >\n              {({\n                getInputProps,\n                getItemProps,\n                getMenuProps,\n                isOpen,\n                inputValue,\n                highlightedIndex,\n              }) => (\n                <div>\n                  <form onSubmit={this.handleSearchSubmit}>\n                    <InputSearch\n                      {...getInputProps({\n                        autoFocus: true,\n                        disableUnderline: true,\n                        fullWidth: true,\n                        placeholder: 'Search for block, transaction, or address'\n                      })}\n                      breakpoint={breakpoint}\n                    />\n                  </form>\n                  <Query\n                    query={querySearchAutoComplete}\n                    variables={{ query: inputValue, first: this.maxSearchAutoCompleteItems }}\n                  >\n                    {({ loading, error, data }) => {\n                      if (loading || error || !data.searchAutoComplete || !isOpen)\n                        return <ListSearch breakpoint={breakpoint} />;\n                      return (    \n                        <ListSearch {...getMenuProps()} breakpoint={breakpoint}>\n                          {data.searchAutoComplete.items.map((item, index) => (\n                            <ListItemSearch\n                              disableGutters\n                              // Use number for highlighted prop instead of boolean to prevent\n                              // \"non-boolean attribute\" warning.\n                              highlighted={highlightedIndex === index ? 1 : 0}\n                              {...getItemProps({\n                                key: item,\n                                index,\n                                item\n                              })}\n                            >\n                              <ListItemIconSearch breakpoint={breakpoint}>\n                                <SearchIconListSearch breakpoint={breakpoint} />\n                              </ListItemIconSearch>\n                              {item}\n                            </ListItemSearch>\n                          ))}\n                        </ListSearch>\n                      );\n                    }}\n                  </Query>\n                </div>\n              )}\n            </Downshift>\n          </Grid>\n          <Grid item>\n            <Zoom in={true} timeout={300}>\n              <IconButton onClick={this.handleCloseClick}>\n                <StyledCloseIcon breakpoint={breakpoint} />\n              </IconButton>\n            </Zoom>\n          </Grid>\n        </Grid>\n      </SearchToolbar>\n    );\n  }\n\n  /**\n   * Return the elements for the toolbar based on the current breakpoint.\n   * @return {Object} The elements for the toolbar based on the current breakpoint.\n   * @private\n   */\n  getToolbarDefaultContent() {\n    const breakpoint = getBreakpoint();\n    return (\n      <StyledToolbar breakpoint={breakpoint}>\n        <Grid container alignItems='center' wrap='nowrap'>\n          <Grid item>\n            {this.getMenuButton()}\n          </Grid>\n          {this.getAppTitle()}\n          <Grid container alignItems='center' justify='flex-end' wrap='nowrap'>\n            <Grid item>\n              {this.getSearchButton()}\n            </Grid>\n          </Grid>\n        </Grid>\n      </StyledToolbar>\n    );\n  }\n\n  /**\n   * Return the elements for the menu button on the current breakpoint.\n   * @return {Object} The elements for the menu button based on the current breakpoint.\n   * @private\n   */\n  getMenuButton() {\n    const { handleMobileDrawerMenuClick, handleDesktopDrawerMenuClick } = this.props;\n    return (\n      <Zoom in={true} timeout={300}>\n        <StyledIconButton\n          onClick={\n            isBreakpointDesktop() ? handleDesktopDrawerMenuClick : handleMobileDrawerMenuClick\n          }\n        >\n          <StyledMenuIcon />\n        </StyledIconButton>\n      </Zoom>\n    );\n  }\n\n  /**\n   * Return the elements for the app title based on the current breakpoint.\n   * @return {Object} The elements for the app title based on the current breakpoint.\n   * @private\n   */\n  getAppTitle() {\n    const breakpoint = getBreakpoint();\n    return (\n      <Link\n        style={{ textDecoration: 'none' }}\n        to='/'\n      >\n        <Grid container alignItems='center' justify='flex-start' wrap='nowrap'>\n          <RevealFade timeout={500}>\n            <Grid item>\n              <ImgProductIcon\n                src={openBlockExplorerLogo}\n                height={this.getProductIconHeight()}\n                alt='logo'\n                breakpoint={breakpoint}\n              >\n              </ImgProductIcon>\n            </Grid>\n            <Grid item>\n              <TypographyBlock breakpoint={breakpoint}>BLOCK</TypographyBlock>\n            </Grid>\n            <RevealZoom timeout={350}>\n              <Grid item>\n                <TypographyBorder breakpoint={breakpoint} />\n              </Grid>\n            </RevealZoom>\n            <Grid item>\n              <TypographyExplorer breakpoint={breakpoint}>ExpIorer</TypographyExplorer>\n            </Grid>\n          </RevealFade>\n        </Grid>\n      </Link>\n    );\n  }\n\n  /**\n   * Return the height of the product icon based on the current breakpoint.\n   * @return {Number} The height of the product icon based on the current breakpoint.\n   * @private\n   */\n  getProductIconHeight() {\n    if (isBreakpointLessOrEqualTo(Breakpoints.XS))\n      return 23.8;\n    else\n      return 34;\n  }\n\n  /**\n   * Return the elements for the drawer based on the current breakpoint.\n   * @return {Object} The elements for the drawer based on the current breakpoint.\n   * @private\n   */\n  getDrawer() {\n    // The Material Design documentation states: \"Modal drawer: In a responsive layout grid, at a\n    // defined minimum breakpoint of at least 600dp width, a standard drawer should be replaced with\n    // a modal drawer.\" We use a modal drawer for breakpoints xs and sm (i.e., up to 960px).\n    if (isBreakpointDesktop()) {\n      return (\n        <StyledDrawer variant='persistent' open={this.props.isDesktopDrawerOpen}>\n          {this.getDrawerContent()}\n        </StyledDrawer>\n      );\n    }\n    else {\n      return (\n        <StyledSwipeableDrawer\n          open={this.props.isMobileDrawerOpen}\n          onOpen={this.props.handleMobileDrawerMenuClick}\n          onClose={this.props.handleMobileDrawerMenuClick}\n        >\n          <div onClick={this.props.handleMobileDrawerMenuClick}>\n            {this.getDrawerContent()}\n          </div>\n        </StyledSwipeableDrawer>\n      );\n    }  \n  }\n\n  /**\n   * Return the elements for the drawer content based on the current breakpoint.\n   * @return {Object} The elements for the drawer content based on the current breakpoint.\n   * @private\n   */\n  getDrawerContent() {\n    /* Use constants for paths such as 'blocks' everywhere in code!!! */\n    return (\n      <Fragment>\n        {/* Shim to compensate for AppBar position='fixed'. */}\n        <Toolbar/>\n        <List>\n          {/* Could change this to be more generic by calling map() on an array of route objects\n              which contain info such as: path, menu text, and icon.\n              See: https://stackoverflow.com/questions/50801093/material-ui-drawer-selection-how-to-route\n          */}\n          <DrawerListItem button component={Link} to='/' selected={this.isActiveRoute('/')}>\n            <DrawerListItemIcon>\n              <HomeIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Home' selected={this.isActiveRoute('/')} />\n          </DrawerListItem>\n          <StyledDivider />\n          <DrawerListItem button component={Link} to='/blocks' selected={this.isActiveRoute('/blocks')}>\n            <DrawerListItemIcon>\n              <SvgIcon>\n                <path d={Constants.ICON_SVG_PATH_BLOCK} />\n              </SvgIcon>\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Blocks' selected={this.isActiveRoute('/blocks')} />\n          </DrawerListItem>\n          <DrawerListItem button component={Link} to='/txs' selected={this.isActiveRoute('/txs')}>\n            <DrawerListItemIcon>\n              <SvgIcon>\n                <path d={Constants.ICON_SVG_PATH_TPS} />\n              </SvgIcon>\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Transactions' />\n          </DrawerListItem>\n          <DrawerListItem button component={Link} to='/accounts' selected={this.isActiveRoute('/accounts')}>\n            <DrawerListItemIcon>\n              <AccountCircleIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='Accounts' />\n          </DrawerListItem>            \n          <StyledDivider />\n          <DrawerListItem button component={Link} to='/about' selected={this.isActiveRoute('/about')}>\n            <DrawerListItemIcon>\n              <InfoIcon />\n            </DrawerListItemIcon>\n            <DrawerListItemText primary='About' />\n          </DrawerListItem>\n        </List>\n      </Fragment>\n    );\n  }\n\n  /**\n   * Return the elements for the search button on the current breakpoint.\n   * @return {Object} The elements for the search button based on the current breakpoint.\n   * @private\n   */\n  getSearchButton() {\n    const breakpoint = getBreakpoint();\n    return (\n      <Zoom in={true} timeout={300}>\n        <StyledIconButton onClick={this.handleSearchClick}>\n          <StyledSearchIcon breakpoint={breakpoint} />\n        </StyledIconButton>\n      </Zoom>\n    );\n  }\n\n  /**\n   * Callback fired when the search button is clicked.\n   * @private\n   */\n  handleSearchClick() {\n    this.setState({\n      isSearchOn: true\n    });\n  }\n\n  /**\n   * Callback fired when the close button is clicked.\n   * @private\n   */\n  handleCloseClick() {\n    this.setState({\n      isSearchOn: false\n    });\n  }\n  \n /**\n   * Callback fired any time the internal state of the Downshift component changes.\n   * @param {Object} changes The properties that have changed since the last state change.\n   * @private\n   */\n  handleDownshiftStateChange(changes) {\n    const { inputValue } = changes;\n    if (inputValue) {\n      this.setState({\n        searchQuery: inputValue\n      });\n    }\n  }\n\n  /**\n   * Callback fired when the value of the Downshift component changes.\n   * @param {Object} selectedItem The item that was just selected.\n   * @private\n   */\n  handleDownshiftChange(selectedItem) {\n    this.performSearch(selectedItem);\n  }\n\n  /**\n   * Callback fired when the SearchAppBar form is submitted.\n   * @param {Object} event The event source of the callback.\n   * @private\n   */\n  handleSearchSubmit(event) {\n    event.preventDefault();\n    this.performSearch(this.state.searchQuery);\n  }\n\n  /**\n   * Perform a search based on the specified search query.\n   * @param {String} searchQuery The search quert to use for the search.\n   * @private\n   */\n  performSearch(searchQuery) {\n    this.setState({\n      isSearchOn: false,\n      searchQuery: ''\n    });\n    if (this.props.routerRef)\n      this.props.routerRef.history.push(`/search/${searchQuery}`);\n  }\n\n  /**\n   * Return true if the specified route matches the current route, false otherwise.\n   * @param {String} routeName The name of the route to check.\n   * @return {Boolean} True if the specified route matches the current route, false otherwise.\n   * @private\n   */\n  isActiveRoute(routeName) {\n    return this.props.location.pathname === routeName;\n  }\n};\n\nexport default withRouter(DEAppBar);","/**\n * @file Footer\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport styled from 'styled-components';\nimport { loadCSS } from 'fg-loadcss';\nimport {\n  Checkbox,\n  Grid,\n  Icon,\n  IconButton,\n  SvgIcon,\n  Toolbar,\n  Typography\n} from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport ResponsiveComponent from '../ResponsiveComponent/ResponsiveComponent';\nimport { Breakpoints, getBreakpoint } from '../../utils/breakpoint';\nimport Constants from '../../constants';\n\nconst FooterToolbar = styled(Toolbar)`\n  && {\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: ${Constants.FOOTER_HEIGHT + 'px'};\n    padding-left: 0px;\n    padding-right: 0px;\n    text-align: center;\n    background: ${props => props.theme.colorFooterBackground};\n    color: ${props => props.theme.colorFooterTextIcon};\n  }\n`;\n\nconst OneThirdGrid = styled(Grid)`\n  && {\n    width: 33.33%;\n  }\n`;\n\nconst LeftThirdGrid = styled(OneThirdGrid)`\n  && {\n    margin-left: ${Constants.FOOTER_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-left: ${Constants.FOOTER_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst RightThirdGrid = styled(OneThirdGrid)`\n  && {\n    margin-right: ${Constants.FOOTER_MARGIN_SM_AND_UP + 'px'};\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        margin-right: ${Constants.FOOTER_MARGIN_XS + 'px'};\n      `\n    }\n  }\n`;\n\nconst FooterTypography = styled(Typography)`\n  && {\n    font-family: ${Constants.FONT_PRIMARY};\n    font-size: 12px;\n  }\n`;\n\nconst FooterA = styled.a`\n  && {\n    color: ${props => props.theme.colorFooterTextIcon};\n    text-decoration: underline;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst AwesomeIconButtonGrid = styled(Grid)`\n  && {\n    // Look into why this is needed!!!\n    ${({ breakpoint }) =>\n      breakpoint === Breakpoints.XS && `\n        min-width: 35px;\n      `\n    }\n  }\n`;\n\nconst AwesomeIconButton = styled(IconButton)`\n  && {\n    &:hover {\n      background: ${props => fade(props.theme.colorIconButtonHover, props.theme.opacityActionHover)};\n      color: ${props => props.theme.colorIconButtonHover};\n      /* Reset on touch devices. */\n      @media (hover: none) {\n        background: inherit;\n        color: inherit;\n      }\n    }\n  }\n`;\n\nconst AwesomeIcon = styled(Icon)`\n  && {\n    font-size: 20px;\n  }\n`;\n\nconst ThemeCheckbox = styled(Checkbox)`\n  && {\n    width: 26px;\n    height: 26px;\n    color: ${props => props.theme.colorFooterTextIcon};\n    &:hover {\n      background: ${props => fade(props.theme.colorIconButtonHover, props.theme.opacityActionHover)};\n      color: ${props => props.theme.colorIconButtonHover};\n      /* Reset on touch devices. */\n      @media (hover: none) {\n        background: inherit;\n        color: ${props => props.theme.colorFooterTextIcon};\n      }\n    }\n  }\n`;\n\nconst ThemeSvgIcon = styled(SvgIcon)`\n  && {\n    margin-top: -1px;\n    font-size: 17px;\n  }\n`;\n\n/**\n * The Footer provides information related to the current screen.\n */\nclass Footer extends ResponsiveComponent {\n  static propTypes = {\n    /**\n     * True is the theme is dark, false if the theme is light.\n     */\n    isThemeDark: PropTypes.bool.isRequired,\n    /**\n     * Callback fired when the value of the theme checkbox changes.\n     */    \n    handleThemeChange: PropTypes.func.isRequired,\n    /**\n     * Object containing information about the current react-router location.\n     */\n    location: PropTypes.object.isRequired\n  };\n\n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    super.componentDidMount();\n\n    loadCSS(Constants.URI_CDN_FONT_AWESOME, document.querySelector('#insertion-point-jss'));\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const breakpoint = getBreakpoint();\n    return (\n      <FooterToolbar>\n        <LeftThirdGrid\n          container\n          direction='row'\n          justify='flex-start'\n          alignItems='center'\n          breakpoint={breakpoint}\n        >\n          <Grid item>\n            <FooterTypography color='inherit'>\n              {this.getCopyrightText()}\n            </FooterTypography>\n          </Grid>\n        </LeftThirdGrid>\n        <OneThirdGrid container direction='column' justify='center' alignItems='center'>\n          <Grid item>\n            <FooterTypography color='inherit'>\n              {this.getSimulatedText()}\n            </FooterTypography>\n          </Grid>\n          { this.props.location.pathname === '/' &&\n            !Constants.IS_STATIC_MODE &&\n            <Grid item>\n              <FooterTypography color='inherit'>\n                {'('}\n                {this.getNomicsTextDescription()}\n                <FooterA href={Constants.URI_ABOUT_NOMICS} target='_blank' rel='noopener noreferrer'>\n                  {this.getNomicsTextLink()}\n                </FooterA>\n                {')'}\n              </FooterTypography>\n            </Grid>\n          }\n        </OneThirdGrid>\n        <RightThirdGrid\n          container direction='row'\n          justify='flex-end'\n          alignItems='center'\n          wrap='nowrap'\n          breakpoint={breakpoint}\n        >\n          <AwesomeIconButtonGrid item breakpoint={breakpoint}>\n            <AwesomeIconButton\n              color='inherit'\n              href={Constants.URI_TWITTER_OPEN_BLOCK_EXPLORER}\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <AwesomeIcon className='fa fa-twitter' />\n            </AwesomeIconButton>\n          </AwesomeIconButtonGrid>\n          <AwesomeIconButtonGrid item breakpoint={breakpoint}>\n            <AwesomeIconButton\n              color='inherit'\n              href={Constants.URI_GITHUB_OPEN_BLOCK_EXPLORER_PROJECT}\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <AwesomeIcon className='fa fa-github' />\n            </AwesomeIconButton>\n          </AwesomeIconButtonGrid>\n          <AwesomeIconButtonGrid item breakpoint={breakpoint}>\n            <ThemeCheckbox\n              color='default'\n              checked={this.props.isThemeDark}\n              icon={\n                <ThemeSvgIcon>\n                  <path d={Constants.ICON_SVG_PATH_THEME_LIGHT} />\n                </ThemeSvgIcon>\n              }\n              checkedIcon={\n                <ThemeSvgIcon>\n                  <path d={Constants.ICON_SVG_PATH_THEME_DARK} />\n                </ThemeSvgIcon>\n              }\n              onChange={this.props.handleThemeChange}\n            />\n          </AwesomeIconButtonGrid>\n        </RightThirdGrid>\n      </FooterToolbar>\n    );\n  }\n\n  /**\n   * Return the copyright text.\n   * @return {String} the copyright text.\n   * @private\n   */\n   getCopyrightText() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return '© 2021 openblockexplorer';\n      case Breakpoints.SM:\n        return '© 2021 openblockexplorer contributors';\n      default:\n        return '© 2021 openblockexplorer contributors | All rights reserved';\n    }\n  }\n\n  /**\n   * Return the \"data is simulated\" text.\n   * @return {String} The \"data is simulated\" text.\n   * @private\n   */\n  getSimulatedText() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return '(Simulated data)';\n      case Breakpoints.SM:\n        return '(Data is simulated)';\n      default:\n        return '(Network data is simulated)';\n    }\n  }\n\n  /**\n   * Return the Nomics attribution description text.\n   * @return {String} The Nomics attribution description text.\n   * @private\n   */\n  getNomicsTextDescription() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return 'Simulated price data by ';\n      default:\n        return 'Simulated price data provided by Nomics.com ';\n    }\n  }\n\n  /**\n   * Return the Nomics attribution link text.\n   * @return {String} The Nomics attribution link text.\n   * @private\n   */\n  getNomicsTextLink() {\n    const breakpoint = getBreakpoint();\n    switch (breakpoint) {\n      case Breakpoints.XS:\n        return 'Nomics.com';\n      default:\n        return 'Cryptocurrency Market Data API';\n    }\n  }\n};\n\nexport default withRouter(Footer);\n","/**\n * @file getRandomNumber\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\n /**\n * Return a random number between start and end.\n * @param {Number} start The starting number.\n * @param {Number} end The ending number.\n * @return {Number} The random number.\n * @private\n */\nfunction getRandomNumber(start, end) {\n  return Math.random() * (end - start) + start;\n}\n\nexport default getRandomNumber;\n","/**\n * @file getRandomInt\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport getRandomNumber from './getRandomNumber';\n\n/**\n * Return a random integer between start and end.\n * @param {Number} start The starting number.\n * @param {Number} end The ending number.\n * @return {Number} The random integer.\n * @private\n */\nfunction getRandomInt(start, end) {\n  return Math.floor(getRandomNumber(start, end + 0.99));\n}\n\nexport default getRandomInt;\n","/**\n * @file MockServer\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport { sha3_256 } from 'js-sha3';\nimport Constants from '../constants';\nimport getRandomInt from './getRandomInt';\nimport getRandomNumber from './getRandomNumber';\n\n/**\n * Provides a simulation of a server, database, and blockchain network.\n */\nclass MockServer {\n  /**\n   * Create a MockServer object.\n   * @constructor\n   */\n  constructor() {\n    // Starting block height.\n    const dateToday = new Date();\n    const dateStart = new Date(\n      dateToday.getFullYear(),\n      dateToday.getMonth() - Constants.STATIC_START_MONTHS_BEFORE_TODAY,\n      1);\n    const elapsedMs = dateToday.getTime() - dateStart.getTime();\n    this.blockHeight = Math.floor(elapsedMs / Constants.STATIC_BLOCK_TIME_MS);\n\n    // Database simulation members.\n    this.blocks = [];\n    this.blocksMapByHeight = new Map();\n    this.transactions = [];\n    this.transactionsMapByHash = new Map();\n    this.transactionsPerDays = [\n      310337, 313589, 290827, 297579, 307336, 309952, 297193, 290252, 298334, 299165, 295980,\n      314983, 304301, 310709, 316025, 301995, 290314, 304104, 300348, 297674, 316931, 301925,\n      316524, 290471, 303144, 304190, 296886, 317507, 295057, 295209, 300387, 311270, 291703,\n      315558, 295660, 302128, 298574, 296363, 302307, 313384, 309288, 309477, 296264, 303867,\n      316629, 298503, 312869, 310598, 309085, 315671, 307676, 308296, 290160, 310894, 288048,\n      316307, 309786, 295976, 294780, 294503, 294628, 290956, 311250, 299018, 295754, 299098,\n      302487, 302264, 291887, 295181, 315754, 295970, 312541, 291290, 297825, 312461, 292620,\n      303766, 290851, 303907, 299573, 289672, 312845, 287575, 289242, 292281, 305656, 302450,\n      308555, 294846, 305088, 299615, 317490, 293178, 306621, 299233, 310967, 288450, 289391,\n      304788];\n    this.prices = [\n      16.6281278, 17.58357529, 19.93815045, 20.06231797, 20.09033456, 15.60569456, 20.73913126,\n      23.8023505, 23.70194863, 25.06192243, 23.03510121, 21.09756818, 21.3849601, 18.45689417,\n      19.98396848, 20.09016498, 19.17659903, 20.69405557, 23.17878297, 27.48400726, 28.59779156,\n      29.94846584, 31.36078032, 35.92982346, 28.76324295, 27.15187109, 26.89085403, 23.93834545,\n      23.2289697, 23.87426273, 18.04466817, 17.38999974, 19.29365877, 21.00631071, 19.63032521,\n      19.6584171, 19.62915806, 17.33868885, 17.28368522, 16.65447174, 16.80148965, 16.11220961,\n      15.54426834, 14.6635775, 13.79773345, 13.88375094, 14.21692831, 16.27441916, 16.0240564,\n      16.19392927, 17.23121829, 17.06375764, 8.76220576, 13.52029943, 12.91980016, 13.19695492,\n      17.62882155, 16.37329418, 12.70904661, 12.82851447, 13.97149339, 14.27648811, 12.04525542,\n      11.8032347, 13.87211414, 13.9170336, 13.36739245, 13.24298631, 12.60285729, 12.24952636,\n      12.32249269, 11.94716386, 11.96618666, 12.58966848, 10.80896246, 14.38125675, 14.73902796,\n      13.10992837, 12.91440305, 13.18443959, 13.385099, 13.08299092, 13.62372015, 15.17900978,\n      12.97646833, 12.99243794, 14.34198228, 14.58535171, 13.82917744, 14.82477908, 15.64444703,\n      13.93375996, 16.53689396, 17.84700421, 16.86642115, 14.27428707, 15.16815528, 17.18411013,\n      14.61807672, 16.48574617\n    ];\n    this.price = 0;\n\n\n    // Add the blocks.\n    for (let i = 0; i < Constants.STATIC_NUM_BLOCKS; i++) {\n      // Progressively backdate the initial blocks.\n      const date =\n        new Date(Date.now() - Constants.STATIC_BLOCK_TIME_MS * (Constants.STATIC_NUM_BLOCKS - i));\n      this.addBlock(date);\n    }\n  }\n\n  /**\n   * Resolver for the blocks query.\n   * @param {String} first The number of blocks to get, seeking forward.\n   * @param {Number} orderBy The order of the blocks.\n   * @return {Array} The resolved array of blocks.\n   * @public\n   * \n   * Note that orderBy is always height_DESC.\n   * queryBlocks Example:\n   *    Request: {\"operationName\":\"Blocks\",\"variables\":{\"first\":8},\"query\":\"query Blocks($first: Int) {\\n  blocks(first: $first, orderBy: height_DESC) {\\n    id\\n    height\\n    timestamp\\n    numTransactions\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"blocks\":[{\"id\":\"ckhxppgjr3pe30782bp760oii\",\"height\":1276552,\"timestamp\":\"2020-11-25T17:59:03.521Z\",\"numTransactions\":4},{\"id\":\"ckhxpp8uk3pd70782ty0q3six\",\"height\":1276551,\"timestamp\":\"2020-11-25T17:58:53.520Z\",\"numTransactions\":1},{\"id\":\"ckhxpp1703pcj07825f95fsd0\",\"height\":1276550,\"timestamp\":\"2020-11-25T17:58:43.520Z\",\"numTransactions\":3},{\"id\":\"ckhxpotgf3pbv0782onq5rak0\",\"height\":1276549,\"timestamp\":\"2020-11-25T17:58:33.519Z\",\"numTransactions\":2},{\"id\":\"ckhxpolqg3pba078294zwjhmq\",\"height\":1276548,\"timestamp\":\"2020-11-25T17:58:23.519Z\",\"numTransactions\":2},{\"id\":\"ckhxpoe0q3par07827im0i11u\",\"height\":1276547,\"timestamp\":\"2020-11-25T17:58:13.519Z\",\"numTransactions\":0},{\"id\":\"ckhxpo6ap3pa60782cop99tea\",\"height\":1276546,\"timestamp\":\"2020-11-25T17:58:03.518Z\",\"numTransactions\":2},{\"id\":\"ckhxpnykj3p9d0782dw6dnqgs\",\"height\":1276545,\"timestamp\":\"2020-11-25T17:57:53.518Z\",\"numTransactions\":3}]}}  \n   */\n  resolveQueryBlocks(first, orderBy) {\n    // Add a block for every blocks query made by the BlocksSlideTable, which polls for blocks every\n    // Constants.STATIC_BLOCK_TIME_MS milliseconds. This means that new blocks/transactions are only\n    // added when the user is on the HomePage, which is acceptable for the purposes of mocking.\n    this.addBlock(new Date());\n\n    if (first != null) {\n      const blocks = this.getObjectsSeekForward(this.blocks, first, null);\n      return blocks.map((block) => {\n        return {\n          id: block.id,\n          height: block.height,\n          timestamp: block.timestamp.toUTCString(),\n          numTransactions: block.transactions.length\n        };\n      });\n    }\n    else\n      return [];\n  }\n\n  /**\n   * Resolver for the blocksConnection query.\n   * @param {Object} where A BlockWhereInput object specifying conditions that must be met.\n   * @param {Number} orderBy A BlockOrderByInput value specifying the desired order of block\n   * objects.\n   * @param {Number} skip The number of block objects to skip.\n   * @param {String} after Get the block objects after the object with this ID.\n   * @param {String} before Get the block objects before the object with this ID.\n   * @param {Number} first The number of block objects to get in the forward direction.\n   * @param {Number} last The number of block objects to get in the backward direction.\n   * @return {Object} The resolved BlocksConnection object.\n   * @public\n   *\n   * Note that orderBy is always height_DESC, and skip is not used.\n   * queryBlocksCount Example:\n   *    Request: {\"operationName\":\"BlocksConnection\",\"variables\":{\"where\":{\"id_lte\":\"ckhts34mxc7h00734l1q9imie\"}},\"query\":\"query BlocksConnection($where: BlockWhereInput) {\\n  blocksConnection(where: $where) {\\n    aggregate {\\n      count\\n    }\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"blocksConnection\":{\"aggregate\":{\"count\":8635}}}}\n   * queryBlocksConnection Examples:\n   * Page 1:\n   *    Request: {\"operationName\":\"BlocksConnection\",\"variables\":{\"first\":10},\"query\":\"query BlocksConnection($where: BlockWhereInput, $skip: Int, $after: String, $before: String, $first: Int, $last: Int) {\\n  blocksConnection(where: $where, orderBy: height_DESC, skip: $skip, after: $after, before: $before, first: $first, last: $last) {\\n    edges {\\n      node {\\n        id\\n        height\\n        timestamp\\n        numTransactions\\n      }\\n    }\\n    pageInfo {\\n      startCursor\\n      endCursor\\n    }\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"blocksConnection\":{\"edges\":[{\"node\":{\"id\":\"ckhts34mxc7h00734l1q9imie\",\"height\":1252764,\"timestamp\":\"2020-11-22T23:54:35.662Z\",\"numTransactions\":1}},{\"node\":{\"id\":\"ckhts2wwcc7gf0734pk8m8m9i\",\"height\":1252763,\"timestamp\":\"2020-11-22T23:54:25.658Z\",\"numTransactions\":2}},{\"node\":{\"id\":\"ckhts2p6oc7fx073497ql3w2k\",\"height\":1252762,\"timestamp\":\"2020-11-22T23:54:15.658Z\",\"numTransactions\":1}},{\"node\":{\"id\":\"ckhts2hgtc7f90734deqmmvc2\",\"height\":1252761,\"timestamp\":\"2020-11-22T23:54:05.657Z\",\"numTransactions\":2}},{\"node\":{\"id\":\"ckhts29q4c7ej0734h7g2fsvf\",\"height\":1252760,\"timestamp\":\"2020-11-22T23:53:55.654Z\",\"numTransactions\":4}},{\"node\":{\"id\":\"ckhts221oc7dp0734glsnerl3\",\"height\":1252759,\"timestamp\":\"2020-11-22T23:53:45.649Z\",\"numTransactions\":3}},{\"node\":{\"id\":\"ckhts1u9jc7cx07341jx2grsa\",\"height\":1252758,\"timestamp\":\"2020-11-22T23:53:35.649Z\",\"numTransactions\":3}},{\"node\":{\"id\":\"ckhts1mikc7ca0734pzvjzzxu\",\"height\":1252757,\"timestamp\":\"2020-11-22T23:53:25.646Z\",\"numTransactions\":2}},{\"node\":{\"id\":\"ckhts1etvc7bn0734rb9p6you\",\"height\":1252756,\"timestamp\":\"2020-11-22T23:53:15.642Z\",\"numTransactions\":2}},{\"node\":{\"id\":\"ckhts173jc7az0734crodha27\",\"height\":1252755,\"timestamp\":\"2020-11-22T23:53:05.641Z\",\"numTransactions\":3}}],\"pageInfo\":{\"startCursor\":\"ckhts34mxc7h00734l1q9imie\",\"endCursor\":\"ckhts173jc7az0734crodha27\"}}}}\n   * Page 2:\n   *    Request: {\"operationName\":\"BlocksConnection\",\"variables\":{\"after\":\"ckhts173jc7az0734crodha27\",\"first\":10},\"query\":\"query BlocksConnection($where: BlockWhereInput, $skip: Int, $after: String, $before: String, $first: Int, $last: Int) {\\n  blocksConnection(where: $where, orderBy: height_DESC, skip: $skip, after: $after, before: $before, first: $first, last: $last) {\\n    edges {\\n      node {\\n        id\\n        height\\n        timestamp\\n        numTransactions\\n      }\\n    }\\n    pageInfo {\\n      startCursor\\n      endCursor\\n    }\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"blocksConnection\":{\"edges\":[{\"node\":{\"id\":\"ckhts0zdsc7ag0734tqbsp50l\",\"height\":1252754,\"timestamp\":\"2020-11-22T23:52:55.637Z\",\"numTransactions\":0}},{\"node\":{\"id\":\"ckhts0rn5c79l0734phtrhfki\",\"height\":1252753,\"timestamp\":\"2020-11-22T23:52:45.634Z\",\"numTransactions\":4}},{\"node\":{\"id\":\"ckhts0jxzc78v0734kw2nds4v\",\"height\":1252752,\"timestamp\":\"2020-11-22T23:52:35.634Z\",\"numTransactions\":3}},{\"node\":{\"id\":\"ckhts0capc7860734p7q95bb5\",\"height\":1252751,\"timestamp\":\"2020-11-22T23:52:25.638Z\",\"numTransactions\":3}},{\"node\":{\"id\":\"ckhts04jjc77k0734vmpc0svq\",\"height\":1252750,\"timestamp\":\"2020-11-22T23:52:15.629Z\",\"numTransactions\":1}},{\"node\":{\"id\":\"ckhtrzwuac76z0734ax7mb4el\",\"height\":1252749,\"timestamp\":\"2020-11-22T23:52:05.625Z\",\"numTransactions\":2}},{\"node\":{\"id\":\"ckhtrzp5kc76f0734attwk7jl\",\"height\":1252748,\"timestamp\":\"2020-11-22T23:51:55.622Z\",\"numTransactions\":1}},{\"node\":{\"id\":\"ckhtrzhfbc75s07342bhrpww2\",\"height\":1252747,\"timestamp\":\"2020-11-22T23:51:45.623Z\",\"numTransactions\":1}},{\"node\":{\"id\":\"ckhtrz9oic75c07346ldd1mw7\",\"height\":1252746,\"timestamp\":\"2020-11-22T23:51:35.598Z\",\"numTransactions\":0}},{\"node\":{\"id\":\"ckhtrz1xvc74q0734th999l1w\",\"height\":1252745,\"timestamp\":\"2020-11-22T23:51:25.597Z\",\"numTransactions\":1}}],\"pageInfo\":{\"startCursor\":\"ckhts0zdsc7ag0734tqbsp50l\",\"endCursor\":\"ckhtrz1xvc74q0734th999l1w\"}}}}\n   * Page last:\n   *    Request: {\"operationName\":\"BlocksConnection\",\"variables\":{\"last\":5},\"query\":\"query BlocksConnection($where: BlockWhereInput, $skip: Int, $after: String, $before: String, $first: Int, $last: Int) {\\n  blocksConnection(where: $where, orderBy: height_DESC, skip: $skip, after: $after, before: $before, first: $first, last: $last) {\\n    edges {\\n      node {\\n        id\\n        height\\n        timestamp\\n        numTransactions\\n      }\\n    }\\n    pageInfo {\\n      startCursor\\n      endCursor\\n    }\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"blocksConnection\":{\"edges\":[{\"node\":{\"id\":\"ckhscopap7w6e0734oy5tc8uj\",\"height\":1244129,\"timestamp\":\"2020-11-21T23:55:42.205Z\",\"numTransactions\":0}},{\"node\":{\"id\":\"ckhscohk67w5p0734s9s6wfv3\",\"height\":1244128,\"timestamp\":\"2020-11-21T23:55:32.197Z\",\"numTransactions\":4}},{\"node\":{\"id\":\"ckhsco9ut7w4z0734qvixisa3\",\"height\":1244127,\"timestamp\":\"2020-11-21T23:55:22.189Z\",\"numTransactions\":3}},{\"node\":{\"id\":\"ckhsco2567w4c0734n4c2qhm0\",\"height\":1244126,\"timestamp\":\"2020-11-21T23:55:12.181Z\",\"numTransactions\":4}},{\"node\":{\"id\":\"ckhscnuev7w3j0734lhpvdhi5\",\"height\":1244125,\"timestamp\":\"2020-11-21T23:55:02.173Z\",\"numTransactions\":2}}],\"pageInfo\":{\"startCursor\":\"ckhscopap7w6e0734oy5tc8uj\",\"endCursor\":\"ckhscnuev7w3j0734lhpvdhi5\"}}}}\n   * Page last - 1:\n   *    Request: {\"operationName\":\"BlocksConnection\",\"variables\":{\"before\":\"ckhscopap7w6e0734oy5tc8uj\",\"last\":10},\"query\":\"query BlocksConnection($where: BlockWhereInput, $skip: Int, $after: String, $before: String, $first: Int, $last: Int) {\\n  blocksConnection(where: $where, orderBy: height_DESC, skip: $skip, after: $after, before: $before, first: $first, last: $last) {\\n    edges {\\n      node {\\n        id\\n        height\\n        timestamp\\n        numTransactions\\n      }\\n    }\\n    pageInfo {\\n      startCursor\\n      endCursor\\n    }\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"blocksConnection\":{\"edges\":[{\"node\":{\"id\":\"ckhscquic7wd107347m6ietir\",\"height\":1244139,\"timestamp\":\"2020-11-21T23:57:22.269Z\",\"numTransactions\":4}},{\"node\":{\"id\":\"ckhscqmsm7wc90734btuxhcha\",\"height\":1244138,\"timestamp\":\"2020-11-21T23:57:12.261Z\",\"numTransactions\":4}},{\"node\":{\"id\":\"ckhscqf2a7wbk0734kmnrftrl\",\"height\":1244137,\"timestamp\":\"2020-11-21T23:57:02.253Z\",\"numTransactions\":2}},{\"node\":{\"id\":\"ckhscq7dg7was0734j31d9o8m\",\"height\":1244136,\"timestamp\":\"2020-11-21T23:56:52.253Z\",\"numTransactions\":4}},{\"node\":{\"id\":\"ckhscpzlt7wa00734u3xqs4o1\",\"height\":1244135,\"timestamp\":\"2020-11-21T23:56:42.245Z\",\"numTransactions\":2}},{\"node\":{\"id\":\"ckhscprw27w9h0734yp08q71i\",\"height\":1244134,\"timestamp\":\"2020-11-21T23:56:32.237Z\",\"numTransactions\":0}},{\"node\":{\"id\":\"ckhscpk6g7w8z07348wuq2e0u\",\"height\":1244133,\"timestamp\":\"2020-11-21T23:56:22.229Z\",\"numTransactions\":3}},{\"node\":{\"id\":\"ckhscpcgq7w880734gwi0nem3\",\"height\":1244132,\"timestamp\":\"2020-11-21T23:56:12.221Z\",\"numTransactions\":2}},{\"node\":{\"id\":\"ckhscp4pw7w7l0734ugbc0atu\",\"height\":1244131,\"timestamp\":\"2020-11-21T23:56:02.213Z\",\"numTransactions\":2}},{\"node\":{\"id\":\"ckhscox2f7w6v07348hy1ckpr\",\"height\":1244130,\"timestamp\":\"2020-11-21T23:55:52.213Z\",\"numTransactions\":1}}],\"pageInfo\":{\"startCursor\":\"ckhscquic7wd107347m6ietir\",\"endCursor\":\"ckhscox2f7w6v07348hy1ckpr\"}}}}\n   */\n  resolveQueryBlocksConnection(where, orderBy, skip, after, before, first, last) {\n    if (where != null && where.id_lte != null) {\n      const count = this.getObjectIndex(where.id_lte) + 1;\n      return {\n        aggregate: {\n          count: count\n        }\n      };\n    }\n    else\n    {\n      let blocks;\n      if (first != null)\n        blocks = this.getObjectsSeekForward(this.blocks, first, after);\n      else if (last != null)\n        blocks = this.getObjectsSeekBackward(this.blocks, last, before);\n      else\n        blocks = [];\n      const edges = blocks.map((block) => {\n        return {\n          node: {\n            id: block.id,\n            height: block.height,\n            timestamp: block.timestamp.toUTCString(),\n            numTransactions: block.transactions.length\n          }\n        };\n      });\n      return {\n        pageInfo: {\n          startCursor: edges[0].node.id,\n          endCursor: edges[edges.length - 1].node.id\n        },\n        edges: edges\n      };\n    }\n  }\n\n  /**\n   * Resolver for the block query.\n   * @param {Number} height The height of the block.\n   * @return {Object} The resolved block object.\n   * @public\n   * \n   * queryBlock Example:\n   *    Request: {\"operationName\":\"Block\",\"variables\":{\"height\":1267930},\"query\":\"query Block($height: Int!) {\\n  block(height: $height) {\\n    id\\n    height\\n    timestamp\\n    numTransactions\\n    transactions {\\n      id\\n      hash\\n      amount\\n    }\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"block\":{\"id\":\"ckhwadgpqjsmt0734uy2t747n\",\"height\":1267930,\"timestamp\":\"2020-11-24T18:02:03.401Z\",\"numTransactions\":1,\"transactions\":[{\"id\":\"ckhwadgpyjsmu0734neznzzb0\",\"hash\":\"0bed73ee12e1dd9d34ecedda1e72ce2a11b3a48d2708033433874d11b0e9008a\",\"amount\":7.019008343173587}]}}}\n   */\n  resolveQueryBlock(height) {\n    const block = this.blocksMapByHeight.get(height);\n    if (block === undefined)\n      return null;\n    else {\n      const transactions = block.transactions.map((transaction) => {\n        return {\n          id: transaction.id,\n          hash: transaction.hash,\n          amount: transaction.amount\n        };\n      });\n      return {\n        id: block.id,\n        height: block.height,\n        timestamp: block.timestamp.toUTCString(),\n        numTransactions: transactions.length,\n        transactions: transactions\n      };\n    }\n  }\n\n  /**\n   * Resolver for the transactions query.\n   * @param {String} first The number of transactions to get, seeking forward.\n   * @param {Number} orderBy The order of the transactions.\n   * @return {Array} The resolved array of transactions.\n   * @public\n   *\n   * Note that orderBy is always createdAt_DESC.\n   * queryTransactions Example:\n   *    Request: {\"operationName\":\"Transactions\",\"variables\":{\"first\":8},\"query\":\"query Transactions($first: Int) {\\n  transactions(first: $first, orderBy: createdAt_DESC) {\\n    id\\n    hash\\n    amount\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"transactions\":[{\"id\":\"ckhxppgjv3pe407825o839umd\",\"hash\":\"17fa54c9f3c10c64cc9b3c75d6909e55d79dafbf038daafb1b25dc3729833366\",\"amount\":783.2659455180377},{\"id\":\"ckhxppgjw3pe50782orl0ytzk\",\"hash\":\"e63b9e335429b00b341e30ccee2d827ae3456e7edb38dff47ab1bd9d3b10b0aa\",\"amount\":918.9608166770298},{\"id\":\"ckhxppgjx3pe6078271tlgk14\",\"hash\":\"d92adec80a8fbe37d973bfe3d6b7cdd5b264f001b341ba5a10e816062df539a0\",\"amount\":49.01553626339467},{\"id\":\"ckhxppgjy3pe707828imox40y\",\"hash\":\"9bea0a2c99b4d966bc9e9fb56f67d2dad6ffd92ed26c19684a4e8f230cce3962\",\"amount\":34.4047929442281},{\"id\":\"ckhxpp8uo3pd80782rqex54ua\",\"hash\":\"83be810b7fafe9542d84f41044aa3f00d74102b4915ffbc74aa75c28a2d800f9\",\"amount\":66.0907817392576},{\"id\":\"ckhxpp1753pck0782o97g44hf\",\"hash\":\"cdb3b8c07ab5759d4baeadb7d4d035396f802954c4364f3541d50b8771e31dfc\",\"amount\":39.380358833111686},{\"id\":\"ckhxpp1763pcl0782nbnefzro\",\"hash\":\"2b9ea9a96bf1e38bab375bab8fe021ff7009c841a766d419577d1d55fb9087fc\",\"amount\":3.817800690923789},{\"id\":\"ckhxpp1773pcm07828eo77ap1\",\"hash\":\"1fcd66f0e9fe56501c378045f5296cfdffaf0ef6a031026ab32e4a3677c70abb\",\"amount\":36.61436508030448}]}}\n   */\n  resolveQueryTransactions(first, orderBy) {\n    if (first != null) {\n      const transactions = this.getObjectsSeekForward(this.transactions, first, null);\n      return transactions.map((transaction) => {\n        return {\n          id: transaction.id,\n          hash: transaction.hash,\n          amount: transaction.amount\n        };\n      });\n    }\n    else\n      return [];\n  }\n\n  /**\n   * Resolver for the transactionsConnection query.\n   * @param {Object} where A TransactionWhereInput object specifying conditions that must be met.\n   * @param {Number} orderBy A TransactionOrderByInput value specifying the desired order of\n   * transaction objects.\n   * @param {Number} skip The number of transaction objects to skip.\n   * @param {String} after Get the transaction objects after the object with this ID.\n   * @param {String} before Get the transaction objects before the object with this ID.\n   * @param {Number} first The number of transaction objects to get in the forward direction.\n   * @param {Number} last The number of transaction objects to get in the backward direction.\n   * @return {Object} The resolved TransactionsConnection object.\n   * @public\n   *\n   * Note that orderBy is always createdAt_DESC, and skip is not used.\n   * queryTransactionsCount Example:\n   *    Request: {\"operationName\":\"TransactionsConnection\",\"variables\":{\"where\":{\"id_lte\":\"ckhtl1944bm8v0734gri9firh\"}},\"query\":\"query TransactionsConnection($where: TransactionWhereInput) {\\n  transactionsConnection(where: $where) {\\n    aggregate {\\n      count\\n    }\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"transactionsConnection\":{\"aggregate\":{\"count\":17200}}}}\n   * queryTransactionsConnection Examples:\n   * Page 1:\n   *    Request: {\"operationName\":\"TransactionsConnection\",\"variables\":{\"first\":10},\"query\":\"query TransactionsConnection($where: TransactionWhereInput, $skip: Int, $after: String, $before: String, $first: Int, $last: Int) {\\n  transactionsConnection(where: $where, orderBy: createdAt_DESC, skip: $skip, after: $after, before: $before, first: $first, last: $last) {\\n    edges {\\n      node {\\n        id\\n        hash\\n        amount\\n      }\\n    }\\n    pageInfo {\\n      startCursor\\n      endCursor\\n    }\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"transactionsConnection\":{\"edges\":[{\"node\":{\"id\":\"ckhtl1944bm8v0734gri9firh\",\"hash\":\"d01aa07b8cdeda1be8271e87e601aed696de7d729fa85209a5273ed742f5947a\",\"amount\":65.13928279116135}},{\"node\":{\"id\":\"ckhtl1945bm8w0734mux02esw\",\"hash\":\"fdd711d4b9c28db6be1a96f44edd999d1e29df0bcbe7494bfd6d293eb8fa75ed\",\"amount\":196.35590266865196}},{\"node\":{\"id\":\"ckhtl1946bm8x0734wz4v34nd\",\"hash\":\"496016878304998bd4fa87f293a58f30dbd70c596dd09c1550a135867be356f0\",\"amount\":681.2539568661601}},{\"node\":{\"id\":\"ckhtl1946bm8y0734nxl7rg9d\",\"hash\":\"72992e002193157aeb4f8fd47f251a09f0c9dd615d83844a986edf40df266d04\",\"amount\":271.210356664776}},{\"node\":{\"id\":\"ckhtl0togbm7r07347piauodt\",\"hash\":\"5b17eb6d1dd98fc5aca465f205e1e52e193df0fac688d3ee8456af33a3d080f1\",\"amount\":732.9834847232742}},{\"node\":{\"id\":\"ckhtl0tohbm7s0734hqmlfh69\",\"hash\":\"a7765ee43fcbf0ca31ce3dfe48e22e5bfdc8e9c06a716eb403ed64c9a2e412ec\",\"amount\":17.89014389860158}},{\"node\":{\"id\":\"ckhtl0tohbm7t0734whbyrhw0\",\"hash\":\"8d1b4001237d89528ad4f404cb5cb8648ab8555b88d3b2721720740ee548b647\",\"amount\":151.65606733229734}},{\"node\":{\"id\":\"ckhtl0lxobm6t07344uu2mbmt\",\"hash\":\"3c8df8500b24b4a7d9ccbe50d2e651c443d19ee5127b1171745173d42da472de\",\"amount\":139.09886256367065}},{\"node\":{\"id\":\"ckhtl0lxobm6u07349b5q7vml\",\"hash\":\"d574ccf505d73b895441d4f04353200a673e38d84744c0fbea2d658897352ec9\",\"amount\":987.5693929357903}},{\"node\":{\"id\":\"ckhtl0lxpbm6v0734wg1n14xp\",\"hash\":\"69dadef00b945c92af745da2fdf450d4f31c86ea28ce89b6f0ca50e93e995245\",\"amount\":49.84602630455984}}],\"pageInfo\":{\"startCursor\":\"ckhtl1944bm8v0734gri9firh\",\"endCursor\":\"ckhtl0lxpbm6v0734wg1n14xp\"}}}}\n   * Page 2:\n   *    Request: {\"operationName\":\"TransactionsConnection\",\"variables\":{\"after\":\"ckhtl0lxpbm6v0734wg1n14xp\",\"first\":10},\"query\":\"query TransactionsConnection($where: TransactionWhereInput, $skip: Int, $after: String, $before: String, $first: Int, $last: Int) {\\n  transactionsConnection(where: $where, orderBy: createdAt_DESC, skip: $skip, after: $after, before: $before, first: $first, last: $last) {\\n    edges {\\n      node {\\n        id\\n        hash\\n        amount\\n      }\\n    }\\n    pageInfo {\\n      startCursor\\n      endCursor\\n    }\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"transactionsConnection\":{\"edges\":[{\"node\":{\"id\":\"ckhtl0e7vbm6107346k1dihlk\",\"hash\":\"ba03eabd13550fd92033bf26e34bb12ede7a9dba2f7f11b3f4ae4f234ab496fa\",\"amount\":31.102718972358854}},{\"node\":{\"id\":\"ckhtl0e7wbm620734yl1xvzgl\",\"hash\":\"39bb1a60598d86073f20a5c4fef56227326e5c3b9eb2ee3f82e57efd4ea1cd9b\",\"amount\":143.31427445756248}},{\"node\":{\"id\":\"ckhtl0e7wbm630734ijl8qwpe\",\"hash\":\"0af249fda6125f0584b2e52ba60ba357e61b5d2623b7e64637cfe6974d4361b2\",\"amount\":53.049970490416406}},{\"node\":{\"id\":\"ckhtl0e7xbm640734fddx4f75\",\"hash\":\"7e119236faecf155f3eea84a4ccb71a9901bc96fa4600a63d1f5edd4a8aab2cb\",\"amount\":20.05714181694738}},{\"node\":{\"id\":\"ckhtkzyqrbm4x073473ectoy1\",\"hash\":\"8b154845aa9e5247221e10955b7b28d420894f3698d0f03cefd8574c9d20fe6c\",\"amount\":246.71263198524676}},{\"node\":{\"id\":\"ckhtkzyqsbm4y073478np9ium\",\"hash\":\"e55406f36151b760da4c8a8850925988f2b2b36f118250ea6e8981ac510b5943\",\"amount\":24.872109014493844}},{\"node\":{\"id\":\"ckhtkzr18bm4a07349iyrvebt\",\"hash\":\"77b4aa0bfc544a430c9514e7613c0db81ae5c320b6fea8ca0f641cc41bd59b53\",\"amount\":78.60516911683392}},{\"node\":{\"id\":\"ckhtkzr18bm4b0734nffm7o4r\",\"hash\":\"73e4ab33f8f52319d380182a7d908f79d07ccafa6ba5354266ef21cbb096231a\",\"amount\":17.114481205439358}},{\"node\":{\"id\":\"ckhtkzjc9bm3m0734ua6ndugy\",\"hash\":\"c3d54c0195c6cc23e4b28eb315129eda11e7e0f4418ce00ea88fe8729811d281\",\"amount\":79.83884045196743}},{\"node\":{\"id\":\"ckhtkzjc9bm3n0734ltjkrlub\",\"hash\":\"85c9fa6e35f017d54a2b0b99acdeb8e2b7b043d89d604584e6d92e3b79435887\",\"amount\":37.339554694926555}}],\"pageInfo\":{\"startCursor\":\"ckhtl0e7vbm6107346k1dihlk\",\"endCursor\":\"ckhtkzjc9bm3n0734ltjkrlub\"}}}}\n   * Page last:\n   *    Request: {\"operationName\":\"TransactionsConnection\",\"variables\":{\"last\":10},\"query\":\"query TransactionsConnection($where: TransactionWhereInput, $skip: Int, $after: String, $before: String, $first: Int, $last: Int) {\\n  transactionsConnection(where: $where, orderBy: createdAt_DESC, skip: $skip, after: $after, before: $before, first: $first, last: $last) {\\n    edges {\\n      node {\\n        id\\n        hash\\n        amount\\n      }\\n    }\\n    pageInfo {\\n      startCursor\\n      endCursor\\n    }\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"transactionsConnection\":{\"edges\":[{\"node\":{\"id\":\"ckhs5wgqm7bt707342cjv1e1j\",\"hash\":\"5c81a7465cfefd2a8e49738569f538a7db96ec96a1aeb48d14d31ae22dc4d4a9\",\"amount\":371.1841638422756}},{\"node\":{\"id\":\"ckhs5w9147bsk0734ptov5xx1\",\"hash\":\"20fc8faf3ea9c5938a1ef997093d6d6bd076c8415b606d13649b57951e19bc5f\",\"amount\":542.6066499758415}},{\"node\":{\"id\":\"ckhs5w9157bsl0734uwxxjb7b\",\"hash\":\"9a8f2e2e760f5e5db089e29a581d1873666593fd9dc5ef399584eb18fe65aeaa\",\"amount\":282.0185017751529}},{\"node\":{\"id\":\"ckhs5w9157bsm073499l8atrd\",\"hash\":\"426e264acd88315ae16840d472e0e13cc91eb381219ee1a714ce2a46a653c937\",\"amount\":515.6595332468582}},{\"node\":{\"id\":\"ckhs5vtl97br80734se80da1p\",\"hash\":\"c679a3494b5f87fe1aa20eb13ce52d961c276e6607aaecd43090351394e2c15c\",\"amount\":13.06851529668297}},{\"node\":{\"id\":\"ckhs5vtl97br90734tyqid9ip\",\"hash\":\"3e340c037fd4ffc218c01690038c84de72b46df8ff5975648c5b00df2572b348\",\"amount\":12.077574339739831}},{\"node\":{\"id\":\"ckhs5vtla7bra0734d1ej4zv7\",\"hash\":\"464e3dcee69f950c60d7ec9d020bdbc72d10fa4632561477ad6a41c057f494c2\",\"amount\":17.092103454538687}},{\"node\":{\"id\":\"ckhs5vtla7brb0734gfx9vzfi\",\"hash\":\"1881b6173b8416447b2df43fd7888b3ecb2c2081578b33ebaa704805a09db8ce\",\"amount\":677.2746236016314}},{\"node\":{\"id\":\"ckhs5vltf7bqk0734hr45kk4r\",\"hash\":\"476efc15d6452e38920f10efeb3fa40f91fdb1e005fd8731387c075cc2b64290\",\"amount\":136.23530925654927}},{\"node\":{\"id\":\"ckhs5vltg7bql0734mpvqt2vi\",\"hash\":\"3ab6f2d9249a5a3e80959a68788f071dfe4dc92dd379b998dc06527d61bd8e00\",\"amount\":191.79993427557855}}],\"pageInfo\":{\"startCursor\":\"ckhs5wgqm7bt707342cjv1e1j\",\"endCursor\":\"ckhs5vltg7bql0734mpvqt2vi\"}}}}\n   * Page last - 1:\n   *    Request: {\"operationName\":\"TransactionsConnection\",\"variables\":{\"before\":\"ckhs5wgqm7bt707342cjv1e1j\",\"last\":10},\"query\":\"query TransactionsConnection($where: TransactionWhereInput, $skip: Int, $after: String, $before: String, $first: Int, $last: Int) {\\n  transactionsConnection(where: $where, orderBy: createdAt_DESC, skip: $skip, after: $after, before: $before, first: $first, last: $last) {\\n    edges {\\n      node {\\n        id\\n        hash\\n        amount\\n      }\\n    }\\n    pageInfo {\\n      startCursor\\n      endCursor\\n    }\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"transactionsConnection\":{\"edges\":[{\"node\":{\"id\":\"ckhs5xbka7bvy07347zjlugjq\",\"hash\":\"3f8b7f0d18745197619731305a0f5cc44bcb0dd3a1ef00d4b8550cac7805ff2a\",\"amount\":527.6673860882369}},{\"node\":{\"id\":\"ckhs5x3u67bv70734wsai4se9\",\"hash\":\"3df3de3b7a568e2e75fa8fea1183a24fa58251c388280fe8bec092e5847d0447\",\"amount\":27.37318693373396}},{\"node\":{\"id\":\"ckhs5x3u77bv80734cf21gsb2\",\"hash\":\"86eeff9422fab7764a164579f72f8a2412a1fa8473325e2bd85054ad1159932d\",\"amount\":276.1578721354688}},{\"node\":{\"id\":\"ckhs5x3u77bv907349xpzdjdh\",\"hash\":\"dc551545de9c25d6b91ed4b5554c0a26d3b207e6f5f6c97ecb573e2e8f04fd0c\",\"amount\":351.85174161235955}},{\"node\":{\"id\":\"ckhs5x3u87bva0734di0vmq75\",\"hash\":\"8f79149407c3c98c19bfbf2bf34cdac689d2c381c6ae27342710caddcd00aa03\",\"amount\":97.49847453824451}},{\"node\":{\"id\":\"ckhs5woga7btx0734qijx1ix2\",\"hash\":\"6fadd881ddfbfc104d8bb41298bfabfdafc657e290068a9ce0bdea9763b57a47\",\"amount\":463.05629641068464}},{\"node\":{\"id\":\"ckhs5woga7bty0734g0cbqoq3\",\"hash\":\"8df8128325c6d1263944bdd61146f830a62f048447ccbbd9ed64ca10d4feed58\",\"amount\":294.69743429890127}},{\"node\":{\"id\":\"ckhs5wogb7btz07343h159gko\",\"hash\":\"0762526f139ca5f9975b1c4e5a567802f1a100626b79da1a9c4abcd00c97e5bc\",\"amount\":8.03133926862343}},{\"node\":{\"id\":\"ckhs5wgql7bt50734a5v3nmfh\",\"hash\":\"fe9f83bee11ba24c690e44de54578c3fdb670213b9e421ff85d55074a209c925\",\"amount\":69.77872908476007}},{\"node\":{\"id\":\"ckhs5wgql7bt60734p9tdqqpw\",\"hash\":\"2124a70301db2e56c68d2013981b5a33907c34832e3d74784ca0c0014efc8011\",\"amount\":77.37973723458715}}],\"pageInfo\":{\"startCursor\":\"ckhs5xbka7bvy07347zjlugjq\",\"endCursor\":\"ckhs5wgql7bt60734p9tdqqpw\"}}}}\n   */\n  resolveQueryTransactionsConnection(where, orderBy, skip, after, before, first, last) {\n    if (where != null && where.id_lte != null) {\n      const count = this.getObjectIndex(where.id_lte) + 1;\n      return {\n        aggregate: {\n          count: count\n        }\n      };\n    }\n    else\n    {\n      let transactions;\n      if (first != null)\n        transactions = this.getObjectsSeekForward(this.transactions, first, after);\n      else if (last != null)\n        transactions = this.getObjectsSeekBackward(this.transactions, last, before);\n      else\n        transactions = [];\n      const edges = transactions.map((transaction) => {\n        return {\n          node: {\n            id: transaction.id,\n            hash: transaction.hash,\n            amount: transaction.amount\n          }\n        };\n      });\n      return {\n        pageInfo: {\n          startCursor: edges[0].node.id,\n          endCursor: edges[edges.length - 1].node.id\n        },\n        edges: edges\n      };\n    }\n  }\n\n  /**\n   * Resolver for the transaction query.\n   * @param {String} hash0x The transaction hash with '0x' prepended.\n   * @return {Object} The resolved transaction object.\n   * @public\n   * \n   * queryTransaction Example:\n   *    Request: {\"operationName\":\"Transaction\",\"variables\":{\"hash\":\"0xc786528bb0465092a81b2b127e135d4a45900aabcb881d3c61774d22430df332\"},\"query\":\"query Transaction($hash: String!) {\\n  transaction(hash: $hash) {\\n    id\\n    hash\\n    amount\\n    block {\\n      id\\n      height\\n    }\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"transaction\":{\"id\":\"ckhus6mjyf8i40734rdbam37o\",\"hash\":\"c786528bb0465092a81b2b127e135d4a45900aabcb881d3c61774d22430df332\",\"amount\":824.5956328101802,\"block\":{\"id\":\"ckhus6mjuf8i10734snbglmuk\",\"height\":1258828}}}}\n   */\n  resolveQueryTransaction(hash0x) {\n    const hash = this.getTransactionHash(hash0x);\n    const transaction = this.transactionsMapByHash.get(hash);\n    if (transaction === undefined)\n      return null;\n    else {\n      return {\n        id: transaction.id,\n        hash: transaction.hash,\n        amount: transaction.amount,\n        block: {\n          id: transaction.block.id,\n          height: transaction.block.height\n        }\n      };\n    }\n  }\n\n  /**\n   * Resolver for the searchGetType query.\n   * @param {String} query The search string.\n   * @return {Object} The resolved SearchGetTypeResult object.\n   * @public\n   * \n   * querySearchGetType Example:\n   * Query: \"0x000d80c35eecf6e4bae648aa113a2c5533a097e5701ef124d389aea73b616592\"\n   *    Request: {\"operationName\":\"SearchGetType\",\"variables\":{\"query\":\"0x000d80c35eecf6e4bae648aa113a2c5533a097e5701ef124d389aea73b616592\"},\"query\":\"query SearchGetType($query: String!) {\\n  searchGetType(query: $query) {\\n    type\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"searchGetType\":{\"type\":\"Transaction\"}}}\n   * Query: \"1336993\"\n   *    Request: {\"operationName\":\"SearchGetType\",\"variables\":{\"query\":\"1336993\"},\"query\":\"query SearchGetType($query: String!) {\\n  searchGetType(query: $query) {\\n    type\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"searchGetType\":{\"type\":\"Block\"}}}\n   */\n  resolveQuerySearchGetType(query) {\n    let type;\n    if (query.startsWith('0x'))\n      type = 'Transaction';\n    else if (Number.isInteger(Number(query)))\n      type = 'Block';\n    else\n      type = '';\n    return {\n      type: type\n    };\n  }\n\n  /**\n   * Resolver for the searchAutoComplete query.\n   * @param {String} query The search string.\n   * @param {Number} first The number of results to get.\n   * @return {Object} The resolved SearchAutoCompleteResult object.\n   * @public\n   * \n   * querySearchAutoComplete Example:\n   * Query: \"\"\n   *    Request: {\"operationName\":\"SearchAutoComplete\",\"variables\":{\"query\":\"\",\"first\":6},\"query\":\"query SearchAutoComplete($query: String!, $first: Int) {\\n  searchAutoComplete(query: $query, first: $first) {\\n    items\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"searchAutoComplete\":{\"items\":[]}}}\n   * Query: \"0\"\n   *    Request: {\"operationName\":\"SearchAutoComplete\",\"variables\":{\"query\":\"0\",\"first\":6},\"query\":\"query SearchAutoComplete($query: String!, $first: Int) {\\n  searchAutoComplete(query: $query, first: $first) {\\n    items\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"searchAutoComplete\":{\"items\":[]}}}\n   * Query: \"0x\"\n   *    Request: {\"operationName\":\"SearchAutoComplete\",\"variables\":{\"query\":\"0x\",\"first\":6},\"query\":\"query SearchAutoComplete($query: String!, $first: Int) {\\n  searchAutoComplete(query: $query, first: $first) {\\n    items\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"searchAutoComplete\":{\"items\":[\"0x000a839892f556e4f0b3a6f2de7266326da42130c8fa3517e912dc93331f0c74\",\"0x000d80c35eecf6e4bae648aa113a2c5533a097e5701ef124d389aea73b616592\",\"0x000f13e9d0c32b65170eb548032c2f2f7b7cea33f754ed936eab4c987299b3ed\",\"0x001569d05611ba1e83bd372cc4f2abae0c18ff9353977fe30c19d683bdbf6b26\",\"0x0016df075034e0a2b0712d6a8a66ccddb9602467a199b05b0fffe349d823775c\",\"0x001a8261d14ef6656a09a99d169ba9c2fef89e66b09f277f9caa71bb64e5635d\"]}}}\n   * Query: \"0x000d80c35eecf6e4bae648aa113a2c5533a097e5701ef124d389aea73b61659\"\n   *    Request: {\"operationName\":\"SearchAutoComplete\",\"variables\":{\"query\":\"0x000d80c35eecf6e4bae648aa113a2c5533a097e5701ef124d389aea73b61659\",\"first\":6},\"query\":\"query SearchAutoComplete($query: String!, $first: Int) {\\n  searchAutoComplete(query: $query, first: $first) {\\n    items\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"searchAutoComplete\":{\"items\":[\"0x000d80c35eecf6e4bae648aa113a2c5533a097e5701ef124d389aea73b616592\"]}}}\n   * Query: \"0x000d80c35eecf6e4bae648aa113a2c5533a097e5701ef124d389aea73b616592\"\n   *    Request: {\"operationName\":\"SearchAutoComplete\",\"variables\":{\"query\":\"0x000d80c35eecf6e4bae648aa113a2c5533a097e5701ef124d389aea73b616592\",\"first\":6},\"query\":\"query SearchAutoComplete($query: String!, $first: Int) {\\n  searchAutoComplete(query: $query, first: $first) {\\n    items\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"searchAutoComplete\":{\"items\":[\"0x000d80c35eecf6e4bae648aa113a2c5533a097e5701ef124d389aea73b616592\"]}}}\n   * Query: \"1\"\n   *    Request: {\"operationName\":\"SearchAutoComplete\",\"variables\":{\"query\":\"1\",\"first\":6},\"query\":\"query SearchAutoComplete($query: String!, $first: Int) {\\n  searchAutoComplete(query: $query, first: $first) {\\n    items\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"searchAutoComplete\":{\"items\":[]}}}\n   * Query: \"13369\"\n   *    Request: {\"operationName\":\"SearchAutoComplete\",\"variables\":{\"query\":\"13369\",\"first\":6},\"query\":\"query SearchAutoComplete($query: String!, $first: Int) {\\n  searchAutoComplete(query: $query, first: $first) {\\n    items\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"searchAutoComplete\":{\"items\":[]}}}\n   * Query: \"133699\"\n   *    Request: {\"operationName\":\"SearchAutoComplete\",\"variables\":{\"query\":\"133699\",\"first\":6},\"query\":\"query SearchAutoComplete($query: String!, $first: Int) {\\n  searchAutoComplete(query: $query, first: $first) {\\n    items\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"searchAutoComplete\":{\"items\":[\"1336990\",\"1336991\",\"1336992\",\"1336993\",\"1336994\",\"1336995\"]}}}\n   * Query: \"1336993\"\n   *    Request: {\"operationName\":\"SearchAutoComplete\",\"variables\":{\"query\":\"1336993\",\"first\":6},\"query\":\"query SearchAutoComplete($query: String!, $first: Int) {\\n  searchAutoComplete(query: $query, first: $first) {\\n    items\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"searchAutoComplete\":{\"items\":[]}}}\n   */\n  resolveQuerySearchAutoComplete(query, first) {\n    let items;\n    if (query.startsWith('0x')) {\n      const hash = query.slice(2);\n      items = this.transactions\n        .filter(transaction => transaction.hash.startsWith(hash))\n        .map(transaction => '0x' + transaction.hash)\n        .slice(0, first);\n    }\n    else\n    {\n      const blockHeight = Number(query);\n      if (blockHeight && Number.isInteger(blockHeight)) {\n        items = this.blocks\n          .filter(block => block.height.toString().startsWith(query))\n          .map(block => block.height.toString())\n          .slice(0, first);\n      }\n      else\n        items = [];\n    }\n    return {\n      items: items\n    };\n  }\n\n  /**\n   * Resolver for the dailyNetworkStatses query.\n   * @param {Number} last The number of DailyNetworkStats objects to get in the backward direction.\n   * @param {Number} skip The number of DailyNetworkStats objects to skip.\n   * @param {Number} orderBy A DailyNetworkStatsOrderByInput value specifying the desired order of\n   * DailyNetworkStats objects.\n   * @return {Object} The resolved array of DailyNetworkStats objects.\n   * @public\n   * \n   * Note that orderBy is always date_ASC, and skip is not used.\n   * queryNetworkStats Example:\n   *    Request: {\"operationName\":\"DailyNetworkStatses\",\"variables\":{\"last\":14},\"query\":\"query DailyNetworkStatses($last: Int, $skip: Int) {\\n  dailyNetworkStatses(last: $last, skip: $skip, orderBy: date_ASC) {\\n    id\\n    date\\n    numBlocks\\n    numTransactions\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"dailyNetworkStatses\":[{\"id\":\"ckhicrc9mdnda07342der8p90\",\"date\":\"2020-11-14T00:00:00.000Z\",\"numBlocks\":7098,\"numTransactions\":13937},{\"id\":\"ckhjs7anthz3q0734m5vpj2lu\",\"date\":\"2020-11-15T00:00:00.000Z\",\"numBlocks\":6986,\"numTransactions\":13982},{\"id\":\"ckhl7n0dhmas30734v834pen7\",\"date\":\"2020-11-16T00:00:00.000Z\",\"numBlocks\":6886,\"numTransactions\":13698},{\"id\":\"ckhmn2yk9qmo70734lrn0czoi\",\"date\":\"2020-11-17T00:00:00.000Z\",\"numBlocks\":608,\"numTransactions\":1202},{\"id\":\"ckho2iqo4uy810734yumfkcuj\",\"date\":\"2020-11-18T00:00:00.000Z\",\"numBlocks\":351,\"numTransactions\":711},{\"id\":\"ckhphylhbz9w00734lfngx1wr\",\"date\":\"2020-11-19T00:00:00.000Z\",\"numBlocks\":104,\"numTransactions\":220},{\"id\":\"ckhqxeh833l3y0734vxpzpm53\",\"date\":\"2020-11-20T00:00:00.000Z\",\"numBlocks\":8636,\"numTransactions\":17146},{\"id\":\"ckhscub7r7wnq0734ee43w9mr\",\"date\":\"2020-11-21T00:00:00.000Z\",\"numBlocks\":8460,\"numTransactions\":16885},{\"id\":\"ckhtsa84bc83t0734j0x5crb5\",\"date\":\"2020-11-22T00:00:00.000Z\",\"numBlocks\":8330,\"numTransactions\":16602},{\"id\":\"ckhv7q13ugjgx0734lg942xmo\",\"date\":\"2020-11-23T00:00:00.000Z\",\"numBlocks\":8139,\"numTransactions\":16183},{\"id\":\"ckhwn5xh40h2b0782nprwsrvp\",\"date\":\"2020-11-24T00:00:00.000Z\",\"numBlocks\":8027,\"numTransactions\":16193},{\"id\":\"ckhy2ludk4tea07828veiu4us\",\"date\":\"2020-11-25T00:00:00.000Z\",\"numBlocks\":7956,\"numTransactions\":15899},{\"id\":\"ckhzi1pfc97sl0782at3omkxk\",\"date\":\"2020-11-26T00:00:00.000Z\",\"numBlocks\":7852,\"numTransactions\":15679},{\"id\":\"cki0xhhbodnas0782guskbl5k\",\"date\":\"2020-11-27T00:00:00.000Z\",\"numBlocks\":8635,\"numTransactions\":17225}]}}\n   */\n  resolveQueryDailyNetworkStatses(last, skip, orderBy) {\n    let dailyNetworkStatses = [];\n    let dateToday = new Date();\n    const blocksPerDay = 24 * 60 * 60 * 1000 / Constants.STATIC_BLOCK_TIME_MS;\n\n    for (let i = last; i > 0; i--) {\n      let date = new Date();\n      date.setDate(dateToday.getDate() - i);\n      const blocks = this.blocks.filter((block) => this.areDatesOnSameDay(block.timestamp, date));\n      \n      let numBlocks;\n      let numTransactions;\n      if (blocks.length < blocksPerDay) {\n        // Blocks were not fully generated for this date, so simulate.\n        numBlocks = blocksPerDay;\n        numTransactions = this.getNumTransactions(date);\n      }\n      else {\n        numBlocks = blocks.length;\n        numTransactions =\n          blocks.reduce((numTransactions, block) => numTransactions + block.transactions.length, 0);\n      }\n\n      dailyNetworkStatses.push({\n        id: `DNS-${i}`,\n        date: date.toUTCString(),\n        numBlocks: numBlocks,\n        numTransactions: numTransactions\n      });\n    }\n\n    return dailyNetworkStatses;\n  }\n\n  /**\n   * Resolver for the networkStats query.\n   * @return {Object} The resolved NetworkStats object.\n   * @public\n   * \n   * queryNetworkStats Example:\n   *    Request: {\"operationName\":null,\"variables\":{},\"query\":\"{\\n  networkStats {\\n    id\\n    secondsPerBlock\\n    transactionsPerSecond\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"networkStats\":{\"id\":\"cjw7b5tbz02xe0a14xictctei\",\"secondsPerBlock\":10.001101694915254,\"transactionsPerSecond\":0.18133595451348578}}}\n   */\n  resolveQueryNetworkStats() {\n    const seconds = (this.blocks[this.blocks.length-1].timestamp - this.blocks[0].timestamp) / 1000;\n    return {\n      id: 'NS-0',\n      secondsPerBlock: seconds / this.blocks.length,\n      transactionsPerSecond: this.transactions.length / seconds\n    }\n  }\n\n  /**\n   * Resolver for the price query.\n   * @return {Object} The resolved Price object.\n   * @public\n   * \n   * queryPrice Example:\n   *    Request: {\"operationName\":null,\"variables\":{},\"query\":\"{\\n  price {\\n    id\\n    price\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"price\":{\"id\":\"cjw7b5vth02xn0a14n3uhec0z\",\"price\":13.45263186}}}\n   */\n  resolveQueryPrice() {\n    this.price = !this.price ?\n      this.price = this.getPrice(new Date()) :                  // today's price\n      this.price = this.price * getRandomNumber(0.999, 1.001);  // with minor fluctuations\n    return {\n      id: 'PR-0',\n      price: this.price,\n    }\n  }\n\n  /**\n   * Resolver for the candles query.\n   * @param {Date} start The starting date to get candles for.\n   * @param {Date} end The ending date to get candles for.\n   * @return {Array} The resolved array of OHLCVCandle objects.\n   * @public\n   * \n   * queryCandles Example:\n   *    Request: {\"operationName\":\"Candles\",\"variables\":{\"start\":\"2020-11-16T18:12:23.095Z\",\"end\":\"2020-11-30T18:12:23.096Z\"},\"query\":\"query Candles($start: DateTime!, $end: DateTime!) {\\n  candles(start: $start, end: $end) {\\n    timestamp\\n    open\\n    high\\n    low\\n    close\\n    volume\\n  }\\n}\\n\"}\n   *    Response: {\"data\":{\"candles\":[{\"timestamp\":\"2020-11-17T00:00:00.000Z\",\"open\":14.60824323,\"high\":14.62298511,\"low\":14.33101394,\"close\":14.34198228,\"volume\":4653},{\"timestamp\":\"2020-11-18T00:00:00.000Z\",\"open\":14.42896476,\"high\":14.59982701,\"low\":14.24846189,\"close\":14.58535171,\"volume\":4783},{\"timestamp\":\"2020-11-19T00:00:00.000Z\",\"open\":13.90836574,\"high\":14.03365119,\"low\":13.66953519,\"close\":13.82917744,\"volume\":9360},{\"timestamp\":\"2020-11-20T00:00:00.000Z\",\"open\":14.62516214,\"high\":14.91333725,\"low\":14.57331737,\"close\":14.82477908,\"volume\":3778},{\"timestamp\":\"2020-11-21T00:00:00.000Z\",\"open\":15.56065579,\"high\":15.83803843,\"low\":15.50977978,\"close\":15.64444703,\"volume\":12031},{\"timestamp\":\"2020-11-22T00:00:00.000Z\",\"open\":13.86207824,\"high\":13.93375996,\"low\":13.65978721,\"close\":13.93375996,\"volume\":3109},{\"timestamp\":\"2020-11-23T00:00:00.000Z\",\"open\":16.18886079,\"high\":16.53832396,\"low\":15.81317068,\"close\":16.53689396,\"volume\":12869},{\"timestamp\":\"2020-11-24T00:00:00.000Z\",\"open\":17.75516076,\"high\":17.92194074,\"low\":17.50324815,\"close\":17.84700421,\"volume\":12155},{\"timestamp\":\"2020-11-25T00:00:00.000Z\",\"open\":16.90296738,\"high\":17.10854283,\"low\":16.77255958,\"close\":16.86642115,\"volume\":1586},{\"timestamp\":\"2020-11-26T00:00:00.000Z\",\"open\":14.31033781,\"high\":14.36314762,\"low\":14.08411652,\"close\":14.27428707,\"volume\":1573},{\"timestamp\":\"2020-11-27T00:00:00.000Z\",\"open\":15.06160607,\"high\":15.34320041,\"low\":15.04276631,\"close\":15.16815528,\"volume\":9432},{\"timestamp\":\"2020-11-28T00:00:00.000Z\",\"open\":17.16938537,\"high\":17.18921938,\"low\":17.1599906,\"close\":17.18411013,\"volume\":867},{\"timestamp\":\"2020-11-29T00:00:00.000Z\",\"open\":14.37013374,\"high\":14.62334475,\"low\":14.33989736,\"close\":14.61807672,\"volume\":3975},{\"timestamp\":\"2020-11-30T00:00:00.000Z\",\"open\":16.67891746,\"high\":16.81697609,\"low\":16.49109941,\"close\":16.49109941,\"volume\":1932}]}}\n   */\n  resolveQueryCandles(start, end) {\n    let candles = [];\n    const dateStart = new Date(start);\n    // Match Nomics behavior of returning the first day after the start date.\n    dateStart.setDate(dateStart.getDate() + 1);\n    const dateEnd = new Date(end);\n    for (let date = dateStart; date <= dateEnd; date.setDate(date.getDate() + 1))\n    {\n      const price = this.getPrice(date);\n      // Only timestamp and close are used.\n      candles.push({\n        timestamp: date.toUTCString(),\n        open: 0,\n        high: 0,\n        low: 0,\n        close: price,\n        volume: 0\n      });\n    }\n    return candles;\n  }\n\n  /**\n   * Add a new block.\n   * @param {Date} date The date the block was created.\n   * @private\n   */\n  addBlock(date) {\n    const block = {\n      id: this.getBlockId(this.blocks.length),\n      height: this.blockHeight++,\n      timestamp: date,\n      transactions: []\n    };\n\n    const numTransactions = getRandomInt(\n      Constants.STATIC_TXS_PER_BLOCK_MIN, Constants.STATIC_TXS_PER_BLOCK_MAX);\n    for (let i = 0; i < numTransactions; i++) {\n      block.transactions.push(this.createTransaction(block));\n    }\n\n    this.blocks.push(block);\n    this.blocksMapByHeight.set(block.height, block);\n  }\n\n  /**\n   * Determine whether the two specified dates are on the same day (e.g., December 25, 2020).\n   * @param {Date} first The first date.\n   * @param {Date} second The second date.\n   * @return {Boolean} True if the two specified dates are on the same day, false otherwise.\n   * @private\n   */\n  areDatesOnSameDay(first, second) {\n    return (\n      first.getFullYear() === second.getFullYear() &&\n      first.getMonth() === second.getMonth() &&\n      first.getDate() === second.getDate()\n    );\n  }\n\n  /**\n   * Create a new transaction object for the specified block.\n   * @param {Object} block The block object to add the transaction to.\n   * @return {Object} The created transaction object.\n   * @private\n   */\n  createTransaction(block) {\n    const hash = sha3_256(getRandomInt(0, Number.MAX_SAFE_INTEGER).toString());\n    const amount = getRandomNumber(1, getRandomNumber(0, 1) > 0.5 ? 1000 : 100);\n    const transaction = {\n      id: this.getTransactionId(this.transactions.length),\n      hash: hash,\n      amount: amount,\n      block: block\n    };\n    this.transactions.push(transaction);\n    this.transactionsMapByHash.set(transaction.hash, transaction);\n    return transaction;\n  }\n\n  /**\n   * Get the block ID corresponding to the specified block index.\n   * @param {Number} blockIndex The index of the block to get the block ID for.\n   * @return {String} The block ID corresponding to the specified block index.\n   * @private\n   */\n  getBlockId(blockIndex) {\n    return `BL-${blockIndex}`;\n  }\n\n  /**\n   * Get the day of the year (1 - 366) of the specified date.\n   * @param {Date} date The date to get the day of the year of.\n   * @return {Number} The day of the year (1 - 366) of the specified date.\n   * @private\n   */\n  getDayOfYear(date) {\n    return (\n      Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()) -\n      Date.UTC(date.getFullYear(), 0, 0))\n      / 24 / 60 / 60 / 1000;\n  }\n\n  /**\n   * Get the number of transactions for the specified date.\n   * @param {Date} date The date to get the number of transactions for.\n   * @return {Number} The number of transactions for the specified date.\n   * @private\n   */\n  getNumTransactions(date) {\n    // Use modulus operator on days of year to get index into transactionsPerDays[] array.\n    return this.transactionsPerDays[this.getDayOfYear(date) % this.transactionsPerDays.length]\n  }\n\n  /**\n   * Get the block or transaction index corresponding to the specified block or transaction ID.\n   * @param {String} id The ID of the block or transaction to get the index for.\n   * @return {Number} The block or transaction index corresponding to the specified block or\n   * transaction ID.\n   * @private\n   */\n  getObjectIndex(id) {\n    return parseInt(id.split('-').pop(), 10);\n  }\n\n  /**\n   * Get the array of block or transaction objects corresponding to the specified seek-backward\n   * pagination parameters.\n   * @param {Object} array The array of all block or transaction objects.\n   * @param {Number} last The number of block or transaction objects to get in the backward\n   * direction.\n   * @param {String} before Get the block or transaction objects before the object with this ID.\n   * @return {Object} The array of block or transaction objects corresponding to the specified\n   * seek-backward pagination parameters.\n   * @private\n   */\n  getObjectsSeekBackward(array, last, before) {\n    // Note that the blocks and transactions arrays are ordered oldest to newest (i.e., ascending\n    // order), but all GraphQL queries use descending order (i.e., height_DESC, createdAt_DESC).\n    const start = before != null ? this.getObjectIndex(before) + 1 : 0;\n    // If start is past the last object, return an empty array, since there are no objects before\n    // the last object.\n    if (start === array.length)\n      return [];\n    const end = Math.min(start + last, array.length);\n    return array.slice(start, end).reverse();\n  }\n\n  /**\n   * Get the array of block or transaction objects corresponding to the specified seek-forward\n   * pagination parameters.\n   * @param {Object} array The array of all block or transaction objects.\n   * @param {Number} first The number of block or transaction objects to get in the forward\n   * direction.\n   * @param {String} after Get the block or transaction objects after the object with this ID.\n   * @return {Object} The array of block or transaction objects corresponding to the specified\n   * seek-forward pagination parameters.\n   * @private\n   */\n  getObjectsSeekForward(array, first, after) {\n    // Note that the blocks and transactions arrays are ordered oldest to newest (i.e., ascending\n    // order), but all GraphQL queries use descending order (i.e., height_DESC, createdAt_DESC).\n    const end = after != null ? this.getObjectIndex(after) : array.length;\n    // If end is the first object, return an empty array, since there are no objects after the first\n    // object.\n    if (end === 0)\n      return [];\n    const start = Math.max(end - first, 0);\n    return array.slice(start, end).reverse();\n  }\n\n  /**\n   * Get the price for the specified date.\n   * @param {Date} date The date to get the price for.\n   * @return {Number} The price for the specified date.\n   * @private\n   */\n  getPrice(date) {\n      // Use modulus operator on day of year to get index into prices[] array.\n      return this.prices[this.getDayOfYear(date) % this.prices.length];\n  }\n\n  /**\n   * Get the transaction hash corresponding to the specified '0x'-prepended transaction hash.\n   * @param {String} hash0x The transaction hash with '0x' prepended.\n   * @return {String} The transaction hash with '0x' removed.\n   * @private\n   */\n  getTransactionHash(hash0x) {\n    return hash0x.startsWith('0x') ? hash0x.slice(2) : hash0x;\n  }\n\n  /**\n   * Get the transaction ID corresponding to the specified transaction index.\n   * @param {Number} transactionIndex The index of the transaction to get the transaction ID for.\n   * @return {String} The transaction ID corresponding to the specified transaction index.\n   * @private\n   */\n  getTransactionId(transactionIndex) {\n    return `TX-${transactionIndex}`;\n  }\n}\n\nexport default MockServer;\n","/**\n * @file prisma.graphql.js\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\nconst prismaTypeDefs = gql`\n  type AggregateBlock {\n    count: Int!\n  }\n\n  type AggregateTransaction {\n    count: Int!\n  }\n\n  type BlockConnection {\n    pageInfo: PageInfo!\n    edges: [BlockEdge]!\n    aggregate: AggregateBlock!\n  }\n\n  type BlockEdge {\n    node: Block!\n    cursor: String!\n  }\n\n  enum BlockOrderByInput {\n    id_ASC\n    id_DESC\n    createdAt_ASC\n    createdAt_DESC\n    height_ASC\n    height_DESC\n    timestamp_ASC\n    timestamp_DESC\n  }\n\n  type BlockPreviousValues {\n    id: ID!\n    createdAt: DateTime!\n    height: Int!\n    timestamp: DateTime!\n  }\n\n  type BlockSubscriptionPayload {\n    mutation: MutationType!\n    node: Block\n    updatedFields: [String!]\n    previousValues: BlockPreviousValues\n  }\n\n  input BlockWhereInput {\n    id: ID\n    id_not: ID\n    id_in: [ID!]\n    id_not_in: [ID!]\n    id_lt: ID\n    id_lte: ID\n    id_gt: ID\n    id_gte: ID\n    id_contains: ID\n    id_not_contains: ID\n    id_starts_with: ID\n    id_not_starts_with: ID\n    id_ends_with: ID\n    id_not_ends_with: ID\n    createdAt: DateTime\n    createdAt_not: DateTime\n    createdAt_in: [DateTime!]\n    createdAt_not_in: [DateTime!]\n    createdAt_lt: DateTime\n    createdAt_lte: DateTime\n    createdAt_gt: DateTime\n    createdAt_gte: DateTime\n    height: Int\n    height_not: Int\n    height_in: [Int!]\n    height_not_in: [Int!]\n    height_lt: Int\n    height_lte: Int\n    height_gt: Int\n    height_gte: Int\n    timestamp: DateTime\n    timestamp_not: DateTime\n    timestamp_in: [DateTime!]\n    timestamp_not_in: [DateTime!]\n    timestamp_lt: DateTime\n    timestamp_lte: DateTime\n    timestamp_gt: DateTime\n    timestamp_gte: DateTime\n    transactions_every: TransactionWhereInput\n    transactions_some: TransactionWhereInput\n    transactions_none: TransactionWhereInput\n    AND: [BlockWhereInput!]\n    OR: [BlockWhereInput!]\n    NOT: [BlockWhereInput!]\n  }\n\n  enum Currency {\n    DFN\n  }\n\n  enum DailyNetworkStatsOrderByInput {\n    id_ASC\n    id_DESC\n    date_ASC\n    date_DESC\n    numBlocks_ASC\n    numBlocks_DESC\n    numTransactions_ASC\n    numTransactions_DESC\n  }\n\n  scalar DateTime\n\n  enum Duration {\n    MINUTES_10\n  }\n\n  enum MutationType {\n    CREATED\n    UPDATED\n    DELETED\n  }\n\n  type NetworkStatsPreviousValues {\n    id: ID!\n    duration: Duration!\n    secondsPerBlock: Float!\n    transactionsPerSecond: Float!\n  }\n\n  type NetworkStatsSubscriptionPayload {\n    mutation: MutationType!\n    node: NetworkStats\n    updatedFields: [String!]\n    previousValues: NetworkStatsPreviousValues\n  }\n\n  type PageInfo {\n    hasNextPage: Boolean!\n    hasPreviousPage: Boolean!\n    startCursor: String\n    endCursor: String\n  }\n\n  type PricePreviousValues {\n    id: ID!\n    currency: Currency!\n    price: Float!\n  }\n\n  type PriceSubscriptionPayload {\n    mutation: MutationType!\n    node: Price\n    updatedFields: [String!]\n    previousValues: PricePreviousValues\n  }\n\n  type TransactionConnection {\n    pageInfo: PageInfo!\n    edges: [TransactionEdge]!\n    aggregate: AggregateTransaction!\n  }\n\n  type TransactionEdge {\n    node: Transaction!\n    cursor: String!\n  }\n\n  enum TransactionOrderByInput {\n    id_ASC\n    id_DESC\n    createdAt_ASC\n    createdAt_DESC\n    hash_ASC\n    hash_DESC\n    amount_ASC\n    amount_DESC\n  }\n\n  type TransactionPreviousValues {\n    id: ID!\n    createdAt: DateTime!\n    hash: String!\n    amount: Float!\n  }\n\n  type TransactionSubscriptionPayload {\n    mutation: MutationType!\n    node: Transaction\n    updatedFields: [String!]\n    previousValues: TransactionPreviousValues\n  }\n\n  input TransactionWhereInput {\n    id: ID\n    id_not: ID\n    id_in: [ID!]\n    id_not_in: [ID!]\n    id_lt: ID\n    id_lte: ID\n    id_gt: ID\n    id_gte: ID\n    id_contains: ID\n    id_not_contains: ID\n    id_starts_with: ID\n    id_not_starts_with: ID\n    id_ends_with: ID\n    id_not_ends_with: ID\n    createdAt: DateTime\n    createdAt_not: DateTime\n    createdAt_in: [DateTime!]\n    createdAt_not_in: [DateTime!]\n    createdAt_lt: DateTime\n    createdAt_lte: DateTime\n    createdAt_gt: DateTime\n    createdAt_gte: DateTime\n    hash: String\n    hash_not: String\n    hash_in: [String!]\n    hash_not_in: [String!]\n    hash_lt: String\n    hash_lte: String\n    hash_gt: String\n    hash_gte: String\n    hash_contains: String\n    hash_not_contains: String\n    hash_starts_with: String\n    hash_not_starts_with: String\n    hash_ends_with: String\n    hash_not_ends_with: String\n    amount: Float\n    amount_not: Float\n    amount_in: [Float!]\n    amount_not_in: [Float!]\n    amount_lt: Float\n    amount_lte: Float\n    amount_gt: Float\n    amount_gte: Float\n    block: BlockWhereInput\n    AND: [TransactionWhereInput!]\n    OR: [TransactionWhereInput!]\n    NOT: [TransactionWhereInput!]\n  }\n`;\n\nexport default prismaTypeDefs;\n","/**\n * @file schema.graphql.js\n * @copyright Copyright (c) 2018-2020 Dylan Miller and openblockexplorer contributors\n * @license MIT License\n */\n\nimport gql from 'graphql-tag';\n\nconst schemaTypeDefs = gql`\n  type Query {\n    blocks(first: Int, orderBy: BlockOrderByInput): [Block!]!\n    blocksConnection(\n      where: BlockWhereInput, orderBy: BlockOrderByInput, skip: Int, after: String, before: String,\n      first: Int, last: Int): BlockConnection!\n    block(height: Int!): Block\n    transactions(first: Int, orderBy: TransactionOrderByInput): [Transaction!]!\n    transactionsConnection(\n      where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String,\n      before: String, first: Int, last: Int): TransactionConnection!\n    transaction(hash: String!): Transaction\n    searchGetType(query: String!): SearchGetTypeResult!\n    searchAutoComplete(query: String!, first: Int): SearchAutoCompleteResult!\n    dailyNetworkStatses(last: Int, skip: Int, orderBy: DailyNetworkStatsOrderByInput): [DailyNetworkStats]!\n    networkStats: NetworkStats!\n    price: Price!\n    candles(start: DateTime!, end: DateTime!) : [OHLCVCandle!]!\n  }\n\n  type Subscription {\n    block: BlockSubscriptionPayload\n    transaction: TransactionSubscriptionPayload\n    networkStats: NetworkStatsSubscriptionPayload\n    price: PriceSubscriptionPayload\n  }\n\n  interface Node {\n    id: ID!\n  }\n\n  type Block implements Node {\n    id: ID!\n    height: Int!\n    timestamp: DateTime!\n    transactions: [Transaction!]!\n    numTransactions: Int!\n  }\n\n  type Transaction implements Node {\n    id: ID!\n    hash: String!\n    amount: Float!\n    block: Block!\n  }\n\n  type DailyNetworkStats implements Node {\n    id: ID!\n    date: DateTime!\n    numBlocks: Int!\n    numTransactions: Int!\n  }\n\n  type NetworkStats implements Node {\n    id: ID!\n    secondsPerBlock: Float!\n    transactionsPerSecond: Float!\n  }\n\n  type Price implements Node {\n    id: ID!\n    price: Float!\n  }\n\n  type OHLCVCandle {\n    timestamp: DateTime!\n    open: Float!\n    high: Float!\n    low: Float!\n    close: Float!\n    volume: Float!\n  }\n\n  type SearchGetTypeResult {\n    type: String!\n  }\n\n  type SearchAutoCompleteResult {\n    items: [String!]!\n  }                \n`;\n\nexport default schemaTypeDefs;\n","/**\n * @file App\n * @copyright Copyright (c) 2018-2020 Dylan Miller, Todd Kitchens, an openblockexplorer contributors\n * @license MIT License\n */\n\nimport React, { Component } from 'react';\nimport {\n  Route,\n  HashRouter\n} from 'react-router-dom';\nimport ReactGA from 'react-ga';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { loadCSS } from 'fg-loadcss';\nimport {\n  Grid\n} from '@material-ui/core';\nimport { duration, easing } from '@material-ui/core/styles/transitions';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { SchemaLink } from 'apollo-link-schema';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { makeExecutableSchema } from 'graphql-tools';\nimport { ApolloProvider } from 'react-apollo';\nimport { GlobalStyle, themeLight, themeDark } from './theme/globalStyle';\nimport HomePage from './Components/HomePage/HomePage';\nimport AccountsPage from './Components/AccountsPage/AccountsPage';\nimport BlocksPage from './Components/BlocksPage/BlocksPage';\nimport BlockDetailsPage from './Components/BlockDetailsPage/BlockDetailsPage';\nimport TransactionsPage from './Components/TransactionsPage/TransactionsPage';\nimport TransactionDetailsPage from './Components/TransactionDetailsPage/TransactionDetailsPage';\nimport AboutPage from './Components/AboutPage/AboutPage';\nimport SearchPage from './Components/SearchPage/SearchPage';\nimport DEAppBar from './Components/DEAppBar/DEAppBar';\nimport Footer from './Components/Footer/Footer';\nimport Constants from './constants';\nimport MockServer from './mock/MockServer';\nimport prismaTypeDefs from './mock/prisma.graphql';\nimport schemaTypeDefs from './mock/schema.graphql';\nimport { getBreakpoint, isBreakpointDesktop } from './utils/breakpoint';\n\nlet link;\nif (Constants.IS_STATIC_MODE)\n{\n  // Create mockServer to simulate the back end code and resolve GraphQL queries.\n  const mockServer = new MockServer();\n\n  const resolvers = {\n    Query: {\n      blocks: (_parent, { first, orderBy }) => mockServer.resolveQueryBlocks(first, orderBy),\n      blocksConnection: (_parent, { where, orderBy, skip, after, before, first, last }) =>\n      mockServer.resolveQueryBlocksConnection(\n          where, orderBy, skip, after, before, first, last),\n      block: (_parent, { height }) => mockServer.resolveQueryBlock(height),\n      transactions: (_parent, { first, orderBy }) =>\n        mockServer.resolveQueryTransactions(first, orderBy),\n      transactionsConnection: (_parent, { where, orderBy, skip, after, before, first, last }) =>\n        mockServer.resolveQueryTransactionsConnection(\n          where, orderBy, skip, after, before, first, last),\n      transaction: (_parent, { hash }) => mockServer.resolveQueryTransaction(hash),\n      searchGetType: (_parent, { query }) => mockServer.resolveQuerySearchGetType(query),\n      searchAutoComplete: (_parent, { query, first }) =>\n        mockServer.resolveQuerySearchAutoComplete(query, first),\n      dailyNetworkStatses: (_parent, { last, skip, orderBy }) =>\n        mockServer.resolveQueryDailyNetworkStatses(last, skip, orderBy),\n      networkStats: (_parent) => mockServer.resolveQueryNetworkStats(),\n      price: (_parent) => mockServer.resolveQueryPrice(),\n      candles: (_parent, { start, end }) => mockServer.resolveQueryCandles(start, end)\n    }\n  };\n  \n  const typeDefs = [prismaTypeDefs, schemaTypeDefs];\n  const schema = makeExecutableSchema({ typeDefs, resolvers });\n\n  link = new SchemaLink({ schema });\n}\nelse\n{\n  // Create an http link.\n  const httpLink = new HttpLink({\n    uri: Constants.URI_SERVER_HTTP\n  });\n\n  // Create a WebSocketLink that represents the WebSocket connection. \n  const wsLink = new WebSocketLink({\n    uri: Constants.URI_SERVER_WEB_SOCKETS,\n    options: {\n      reconnect: true\n    }\n  });\n\n  // Using the ability to split links, you can send data to each link depending on what kind of\n  // operation is being sent.\n  link = split(\n    // split based on operation type\n    ({ query }) => {\n      const { kind, operation } = getMainDefinition(query);\n      return kind === 'OperationDefinition' && operation === 'subscription';\n    },\n    wsLink, // for subscription\n    httpLink // for query or mutation\n  );\n}\n\n// Create Apollo client.\nconst apolloClient = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache({\n    // Tell Apollo to use the unique identifier object.id when normalizing the data in the store.\n    // This allows Apollo to automatically re-render the UI when objects change as the result of\n    // mutations. Using object.id only works when every object.id in the application is unique.\n    // For this to work in the app, every GraphQL query must ask for the ID of every record.\n    dataIdFromObject: object => object.id || null,\n    // Do not add a \"__typename to the document\". By setting this to false, we avoid a big\n    // performance hit that results from including __typename in connection aggregate count queries.\n    // It is unclear from the Apollo documentation whether __typename is even used by the cache when\n    // dataIdFromObject is defined.\n    addTypename: false\n  })\n});\n\n// Initialize the react-ga library. We do not need user consent to be GDPR compliant. According to\n// Google: \"When using Google Analytics Advertising Features, you must also comply with the European\n// Union User Consent Policy.\" Advertising Features are not enabled for Open Block Explorer. Under\n// the GDPR, an IP address is considered Personally Identifiable Information (PII), so we anonymize\n// the IP addresses sent to Google Analytics\nReactGA.initialize(Constants.GOOGLE_ANALYTICS_TRACKING_ID);\nReactGA.set({ anonymizeIp: true });\n\nconst ContentDiv = styled.div`\n  && {\n    margin-left: ${props => props.isDesktopDrawerOpen ? Constants.DRAWER_WIDTH + 'px' : '0px'};\n    transition: ${props =>\n      'margin-left ' +\n      (props.isDesktopDrawerOpen ? duration.enteringScreen : duration.leavingScreen) +\n      'ms ' +\n      easing.easeInOut};\n  }\n`;\n\nconst ContentGrid = styled(Grid)`\n  && {\n    /* The height of the body + footer is the total viewport height - App Bar height. */\n    min-height: calc(100vh - ${props => props.appbarheight + 'px'});\n`;\n\n/**\n * Top-level component of the app.\n */\nclass App extends Component {\n  /**\n   * Create an App object.\n   * @constructor\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      routerRef: null,\n      appBarHeight: 0,\n      isDesktopDrawerEnabled: true,\n      isMobileDrawerOpen: false,\n      isThemeDark: true\n    };\n\n    // Bind to make 'this' work in callbacks.\n    this.setRouterRef = this.setRouterRef.bind(this);\n    this.handleAppBarResize = this.handleAppBarResize.bind(this);\n    this.handleDesktopDrawerMenuClick = this.handleDesktopDrawerMenuClick.bind(this);\n    this.handleMobileDrawerMenuClick = this.handleMobileDrawerMenuClick.bind(this);\n    this.handleThemeChange = this.handleThemeChange.bind(this);\n  }\n  \n  /**\n   * Invoked by React immediately after a component is mounted (inserted into the tree). \n   * @public\n   */\n  componentDidMount() {\n    // Load fonts.\n    loadCSS(\n      Constants.URI_CDN_GOOGLE_FONTS,\n      document.querySelector('#insertion-point-jss')\n    );\n  }\n\n  /**\n   * Return a reference to a React element to render into the DOM.\n   * @return {Object} A reference to a React element to render into the DOM.\n   * @public\n   */\n  render() {\n    const {\n      appBarHeight,\n      isDesktopDrawerEnabled,\n      isMobileDrawerOpen,\n      isThemeDark,\n      routerRef\n    } = this.state;\n\n    const isDesktopDrawerOpen = isDesktopDrawerEnabled && isBreakpointDesktop();\n    const breakpoint = getBreakpoint(isDesktopDrawerOpen);\n\n    return (\n      <ApolloProvider client={apolloClient}>\n        <GlobalStyle theme={this.getTheme()} />\n        <ThemeProvider theme={this.getTheme()}>\n          <HashRouter ref={this.setRouterRef}>\n            <div>\n              <DEAppBar\n                handleAppBarResize={this.handleAppBarResize}\n                handleDesktopDrawerMenuClick={this.handleDesktopDrawerMenuClick}\n                handleMobileDrawerMenuClick={this.handleMobileDrawerMenuClick}\n                isDesktopDrawerOpen={isDesktopDrawerOpen}\n                isMobileDrawerOpen={isMobileDrawerOpen}\n                routerRef={routerRef}\n              />\n              <ContentDiv\n                isDesktopDrawerOpen={isDesktopDrawerOpen}\n                isMobileDrawerOpen={isMobileDrawerOpen}\n                /* Workaround to force react-parallax to update when drawer opens/closes. Perhaps */\n                /* file an issue with react-parallax that Parallax does not update when */\n                /* margin-left changes. */\n                onTransitionEnd={() => window.dispatchEvent(new Event('resize'))}\n              >\n                <ContentGrid\n                  container\n                  direction='column'\n                  justify='space-between'\n                  appbarheight={appBarHeight}\n                >                 \n                  <Route\n                    exact path='/'\n                    render={(props) => \n                      <HomePage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path='/blocks'\n                    render={(props) => \n                      <BlocksPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path='/txs'\n                    render={(props) => \n                      <TransactionsPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route exact path=\"/accounts\" component={AccountsPage} />                  \n                  <Route\n                    exact path='/about'\n                    render={(props) => \n                      <AboutPage\n                        {...props}\n                        breakpoint={breakpoint}\n                        isDesktopDrawerOpen={isDesktopDrawerOpen}\n                        isThemeDark={isThemeDark}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path='/block/:height'\n                    render={(props) => \n                      <BlockDetailsPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route\n                    exact path=\"/tx/:hash\"\n                    render={(props) => \n                      <TransactionDetailsPage\n                        {...props}\n                        breakpoint={breakpoint}\n                      />\n                    }\n                  />\n                  <Route exact path=\"/search/:query\" component={SearchPage} />\n                  <Footer                  \n                    handleThemeChange={this.handleThemeChange}\n                    isThemeDark={isThemeDark}\n                  />\n                </ContentGrid>\n              </ContentDiv>\n            </div>\n          </HashRouter>\n        </ThemeProvider>\n      </ApolloProvider>\n    );\n  }\n\n  /**\n   * Set a reference to the HashRouter element.\n   * @public\n   */\n  setRouterRef(element) {\n    this.setState({ routerRef: element });\n  };\n\n  /**\n   * Callback fired when the App Bar is resized.\n   * @private\n   */\n  handleAppBarResize(height) {\n    this.setState({\n      appBarHeight: height\n    });\n  }\n\n  /**\n   * Callback fired when the desktop drawer (large screens) menu button is clicked.\n   * @private\n   */\n  handleDesktopDrawerMenuClick(contentRect) {\n    this.setState({\n      isDesktopDrawerEnabled: !this.state.isDesktopDrawerEnabled\n    });\n  }\n\n  /**\n   * Callback fired when the mobile drawer (small screens) menu button is clicked.\n   * @private\n   */\n  handleMobileDrawerMenuClick(contentRect) {\n    this.setState({\n      isMobileDrawerOpen: !this.state.isMobileDrawerOpen\n    });\n  }\n\n  /**\n   * Callback fired when the value of the Footer component theme checkbox changes.\n   * @param {Object} event The event source of the callback.\n   * @param {Number} checked The checked value of the switch.\n   * @public\n   */\n  handleThemeChange(event, checked) {\n    this.setState({\n      isThemeDark: checked\n    });\n  }\n\n  /**\n   * Return the current theme.\n   * @return {Object} The current theme.\n   * @private\n   */\n  getTheme() {\n    return this.state.isThemeDark ? themeDark : themeLight;\n  }\n}\n\nexport default App;\n","/**\n * @file index\n * @copyright Copyright (c) 2018-2020 Dylan Miller, Todd Kitchens, and openblockexplorer contributors\n * @license MIT License\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\ndocument.getElementById(\"root\"));\n"],"sourceRoot":""}